{
	"info": {
		"_postman_id": "12e5b560-e799-4d22-b952-6a81c15c09ac",
		"name": "renterd v2",
		"description": "API that caters to both casual users seeking straightforward data storage and developers requiring a robust API for building apps on Sia",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46421703",
		"_collection_link": "https://joel-865709.postman.co/workspace/a10abd97-4a03-464a-81c7-aec4a1bb580a/collection/46421703-12e5b560-e799-4d22-b952-6a81c15c09ac?action=share&source=collection_link&creator=46421703"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "Create a new authentication token to use within the 'renterd_auth' cookie",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth?validity=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth"
							],
							"query": [
								{
									"key": "validity",
									"value": "<long>",
									"description": "(Required) The duration in milliseconds for which the token will be valid"
								}
							]
						},
						"description": "Creates a new authentication token that is returned via the 'renterd_auth' cookie which is set by the server"
					},
					"response": [
						{
							"name": "Successfully created a new token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth?validity=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth"
									],
									"query": [
										{
											"key": "validity",
											"value": "<long>",
											"description": "(Required) The duration in milliseconds for which the token will be valid"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth?validity=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth"
									],
									"query": [
										{
											"key": "validity",
											"value": "<long>",
											"description": "(Required) The duration in milliseconds for which the token will be valid"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "autopilot",
			"item": [
				{
					"name": "config",
					"item": [
						{
							"name": "evaluate",
							"item": [
								{
									"name": "Evaluate autopilot configuration",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"autopilotConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"contracts\": {\n      \"amount\": 0,\n      \"period\": 0,\n      \"renewWindow\": 0,\n      \"download\": 0,\n      \"upload\": 0,\n      \"storage\": 0,\n      \"prune\": false\n    },\n    \"hosts\": {\n      \"maxConsecutiveScanFailures\": 0,\n      \"maxDowntimeHours\": 0,\n      \"minProtocolVersion\": \"<string>\"\n    }\n  },\n  \"gougingSettings\": {\n    \"maxRPCPrice\": \"51457\",\n    \"maxContractPrice\": \"03\",\n    \"maxDownloadPrice\": \"3100\",\n    \"maxUploadPrice\": \"632342655\",\n    \"maxStoragePrice\": \"5\",\n    \"hostBlockHeightLeeway\": \"<integer>\",\n    \"minPriceTableValidity\": \"<integer>\",\n    \"minAccountExpiry\": \"<integer>\",\n    \"minMaxEphemeralAccountBalance\": \"05601893384\"\n  },\n  \"redundancySettings\": {\n    \"minShards\": 10,\n    \"totalShards\": 30\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/autopilot/config/evaluate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"autopilot",
												"config",
												"evaluate"
											]
										},
										"description": "Evaluates the provided autopilot configuration and returns some information about the hosts that would be considered usable using that configuration. If possible, it also returns a recommendation for a better configuration that would allow for forming contracts with more hosts."
									},
									"response": [
										{
											"name": "The evaluated autopilot configuration",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"autopilotConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"contracts\": {\n      \"amount\": 0,\n      \"period\": 0,\n      \"renewWindow\": 0,\n      \"download\": 0,\n      \"upload\": 0,\n      \"storage\": 0,\n      \"prune\": false\n    },\n    \"hosts\": {\n      \"maxConsecutiveScanFailures\": 0,\n      \"maxDowntimeHours\": 0,\n      \"minProtocolVersion\": \"<string>\"\n    }\n  },\n  \"gougingSettings\": {\n    \"maxRPCPrice\": \"51457\",\n    \"maxContractPrice\": \"03\",\n    \"maxDownloadPrice\": \"3100\",\n    \"maxUploadPrice\": \"632342655\",\n    \"maxStoragePrice\": \"5\",\n    \"hostBlockHeightLeeway\": \"<integer>\",\n    \"minPriceTableValidity\": \"<integer>\",\n    \"minAccountExpiry\": \"<integer>\",\n    \"minMaxEphemeralAccountBalance\": \"05601893384\"\n  },\n  \"redundancySettings\": {\n    \"minShards\": 10,\n    \"totalShards\": 30\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/autopilot/config/evaluate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"autopilot",
														"config",
														"evaluate"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"hosts\": \"<integer>\",\n  \"usable\": \"<integer>\",\n  \"unusable\": {\n    \"blocked\": \"<integer>\",\n    \"gouging\": {\n      \"contract\": \"<integer>\",\n      \"download\": \"<integer>\",\n      \"gouging\": \"<integer>\",\n      \"pruning\": \"<integer>\",\n      \"upload\": \"<integer>\"\n    },\n    \"lowMaxDuration\": \"<integer>\",\n    \"notAcceptingContracts\": \"<integer>\",\n    \"notScanned\": \"<integer>\"\n  },\n  \"recommendation\": {\n    \"gougingSettings\": {\n      \"maxRPCPrice\": \"53671\",\n      \"maxContractPrice\": \"98254029\",\n      \"maxDownloadPrice\": \"92\",\n      \"maxUploadPrice\": \"380\",\n      \"maxStoragePrice\": \"7\",\n      \"hostBlockHeightLeeway\": \"<integer>\",\n      \"minPriceTableValidity\": \"<integer>\",\n      \"minAccountExpiry\": \"<integer>\",\n      \"minMaxEphemeralAccountBalance\": \"352440671\"\n    }\n  }\n}"
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"autopilotConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"contracts\": {\n      \"amount\": 0,\n      \"period\": 0,\n      \"renewWindow\": 0,\n      \"download\": 0,\n      \"upload\": 0,\n      \"storage\": 0,\n      \"prune\": false\n    },\n    \"hosts\": {\n      \"maxConsecutiveScanFailures\": 0,\n      \"maxDowntimeHours\": 0,\n      \"minProtocolVersion\": \"<string>\"\n    }\n  },\n  \"gougingSettings\": {\n    \"maxRPCPrice\": \"51457\",\n    \"maxContractPrice\": \"03\",\n    \"maxDownloadPrice\": \"3100\",\n    \"maxUploadPrice\": \"632342655\",\n    \"maxStoragePrice\": \"5\",\n    \"hostBlockHeightLeeway\": \"<integer>\",\n    \"minPriceTableValidity\": \"<integer>\",\n    \"minAccountExpiry\": \"<integer>\",\n    \"minMaxEphemeralAccountBalance\": \"05601893384\"\n  },\n  \"redundancySettings\": {\n    \"minShards\": 10,\n    \"totalShards\": 30\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/autopilot/config/evaluate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"autopilot",
														"config",
														"evaluate"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"autopilotConfig\": {\n    \"enabled\": \"<boolean>\",\n    \"contracts\": {\n      \"amount\": 0,\n      \"period\": 0,\n      \"renewWindow\": 0,\n      \"download\": 0,\n      \"upload\": 0,\n      \"storage\": 0,\n      \"prune\": false\n    },\n    \"hosts\": {\n      \"maxConsecutiveScanFailures\": 0,\n      \"maxDowntimeHours\": 0,\n      \"minProtocolVersion\": \"<string>\"\n    }\n  },\n  \"gougingSettings\": {\n    \"maxRPCPrice\": \"51457\",\n    \"maxContractPrice\": \"03\",\n    \"maxDownloadPrice\": \"3100\",\n    \"maxUploadPrice\": \"632342655\",\n    \"maxStoragePrice\": \"5\",\n    \"hostBlockHeightLeeway\": \"<integer>\",\n    \"minPriceTableValidity\": \"<integer>\",\n    \"minAccountExpiry\": \"<integer>\",\n    \"minMaxEphemeralAccountBalance\": \"05601893384\"\n  },\n  \"redundancySettings\": {\n    \"minShards\": 10,\n    \"totalShards\": 30\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/autopilot/config/evaluate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"autopilot",
														"config",
														"evaluate"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "state",
					"item": [
						{
							"name": "Get the autopilot state",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/autopilot/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autopilot",
										"state"
									]
								},
								"description": "Returns the current state of the autopilot, including migration, pruning, and scanning status."
							},
							"response": [
								{
									"name": "The current state of the autopilot",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/autopilot/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"autopilot",
												"state"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"enabled\": true,\n  \"migrating\": false,\n  \"migratingLastStart\": \"1971-05-18T14:26:35.155Z\",\n  \"pruning\": false,\n  \"pruningLastStart\": \"1965-10-28T06:40:46.238Z\",\n  \"scanning\": true,\n  \"scanningLastStart\": \"1966-04-08T17:58:04.956Z\",\n  \"uptimeMs\": -87269584,\n  \"startTime\": \"1984-07-19T23:58:09.400Z\",\n  \"buildTime\": \"<dateTime>\",\n  \"commit\": \"<string>\",\n  \"version\": \"<string>\",\n  \"os\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "trigger",
					"item": [
						{
							"name": "Wake up autopilot",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"forceScan\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autopilot/trigger",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autopilot",
										"trigger"
									]
								},
								"description": "Triggers the autopilot to start an iteration of contract maintenance and host scanning."
							},
							"response": [
								{
									"name": "Successfully attempted to trigger the autopilot",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"forceScan\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/autopilot/trigger",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"autopilot",
												"trigger"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"triggered\": \"<boolean>\"\n}"
								},
								{
									"name": "Malformed request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"forceScan\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/autopilot/trigger",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"autopilot",
												"trigger"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "worker",
			"item": [
				{
					"name": "accounts",
					"item": [
						{
							"name": "Get all worker accounts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/worker/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"worker",
										"accounts"
									]
								},
								"description": "Returns all accounts the worker maintains with hosts for payment."
							},
							"response": [
								{
									"name": "Successfully retrieved worker accounts",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/worker/accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"worker",
												"accounts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"ed25519:eEd4C8fEcc4A3cdDA657f9678a13446BDACDaEd7e003eceeCCcf5AFCED1a657F\",\n    \"cleanShutdown\": \"<boolean>\",\n    \"hostKey\": \"ed25519:DC875dBFBFdf4C3DcB657343E4F7bb2a59Df8Ec5370AcdB3AFBE020042AeDF4e\",\n    \"balance\": \"287230\",\n    \"drift\": \"-86552822967\",\n    \"owner\": \"<string>\",\n    \"requiresSync\": \"<boolean>\"\n  },\n  {\n    \"id\": \"ed25519:Bfa47CCeeEEB829F0Ef873BB3cAEa1301edCA68f992B6eF75a74bfAfD0a6D14b\",\n    \"cleanShutdown\": \"<boolean>\",\n    \"hostKey\": \"ed25519:0cc6D5E71ed25e115B0B7BEe9E9A9C51B9BF8ff8F8385bC37b8fFc472A4eEf1c\",\n    \"balance\": \"6499471402\",\n    \"drift\": \"-3704\",\n    \"owner\": \"<string>\",\n    \"requiresSync\": \"<boolean>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "account",
					"item": [
						{
							"name": "{hostkey}",
							"item": [
								{
									"name": "Get a worker account",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/worker/account/:hostkey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"worker",
												"account",
												":hostkey"
											],
											"variable": [
												{
													"key": "hostkey",
													"value": "ed25519:fdfa51897BdD00dFF8D0ae2a2daECf3bd87191D7fa6cFD898d25Ea2D0DB9badA",
													"description": "(Required) The host's public key"
												}
											]
										},
										"description": "Returns the account the worker maintains with the specified host for payment."
									},
									"response": [
										{
											"name": "Successfully retrieved worker account",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/worker/account/:hostkey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"account",
														":hostkey"
													],
													"variable": [
														{
															"key": "hostkey"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"ed25519:e0D45d98B3ca6448d1D9bc73a9Db3cDe3B15552F0e1a3B10F67EaC30FEcF0BAa\",\n  \"cleanShutdown\": \"<boolean>\",\n  \"hostKey\": \"ed25519:b5E4cFB0D7e896a2b6eeC8AaA3Ed94c881Be3544ED1C0AEDA917511bC19f38A7\",\n  \"balance\": \"32\",\n  \"drift\": \"1\",\n  \"owner\": \"<string>\",\n  \"requiresSync\": \"<boolean>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "resetdrift",
									"item": [
										{
											"name": "Reset drift for a worker's account",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/worker/account/:id/resetdrift",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"account",
														":id",
														"resetdrift"
													],
													"variable": [
														{
															"key": "id",
															"value": "ed25519:fdfa51897BdD00dFF8D0ae2a2daECf3bd87191D7fa6cFD898d25Ea2D0DB9badA",
															"description": "(Required) "
														}
													]
												},
												"description": "Resets the drift for the specified account to 0."
											},
											"response": [
												{
													"name": "Successfully reset drift for worker account",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/worker/account/:id/resetdrift",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"worker",
																"account",
																":id",
																"resetdrift"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"ed25519:e0D45d98B3ca6448d1D9bc73a9Db3cDe3B15552F0e1a3B10F67EaC30FEcF0BAa\",\n  \"cleanShutdown\": \"<boolean>\",\n  \"hostKey\": \"ed25519:b5E4cFB0D7e896a2b6eeC8AaA3Ed94c881Be3544ED1C0AEDA917511bC19f38A7\",\n  \"balance\": \"32\",\n  \"drift\": \"1\",\n  \"owner\": \"<string>\",\n  \"requiresSync\": \"<boolean>\"\n}"
												},
												{
													"name": "The account was not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/worker/account/:id/resetdrift",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"worker",
																"account",
																":id",
																"resetdrift"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": "<string>"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "memory",
					"item": [
						{
							"name": "Get overview of worker's memory usage.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/worker/memory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"worker",
										"memory"
									]
								},
								"description": "Returns the memory usage of the worker for both uploads and downloads."
							},
							"response": [
								{
									"name": "Successfully retrieved memory usage",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/worker/memory",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"worker",
												"memory"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"download\": {\n    \"available\": \"<integer>\",\n    \"total\": \"<integer>\"\n  },\n  \"upload\": {\n    \"available\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "multipart",
					"item": [
						{
							"name": "{key}",
							"item": [
								{
									"name": "Upload a part of an ongoing multipart upload",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/octet-stream"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{baseUrl}}/worker/multipart/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&uploadid=2Cd73620aF9f2c2CfB4c47Eb2E577ced10a8fc292faea60561BBf0C530Ec1a3e&partnumber=<integer>&minshards=<integer>&totalshards=<integer>&encryptionoffset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"worker",
												"multipart",
												":key"
											],
											"query": [
												{
													"key": "bucket",
													"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"description": "(Required) The name of the bucket the multipart upload belongs to"
												},
												{
													"key": "uploadid",
													"value": "2Cd73620aF9f2c2CfB4c47Eb2E577ced10a8fc292faea60561BBf0C530Ec1a3e",
													"description": "(Required) The ID of the ongoing multipart upload"
												},
												{
													"key": "partnumber",
													"value": "<integer>",
													"description": "(Required) The part number of the part being uploaded"
												},
												{
													"key": "minshards",
													"value": "<integer>",
													"description": "Used to override the minimum number of shards the part should be split into."
												},
												{
													"key": "totalshards",
													"value": "<integer>",
													"description": "Used to override the total number of shards the part should be split into."
												},
												{
													"key": "encryptionoffset",
													"value": "<integer>",
													"description": "The offset of the part within the final object. This is required unless the upload was explicitly created to not be encrypted before erasure coding."
												}
											],
											"variable": [
												{
													"key": "key",
													"value": "<string>",
													"description": "(Required) The key of the file to upload"
												}
											]
										},
										"description": "Upload a single part of an ongoing multipart upload. Parts can be uploaded in parallel and then combined afterwards."
									},
									"response": [
										{
											"name": "Successfully uploaded part",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													}
												],
												"body": {
													"mode": "file",
													"file": {}
												},
												"url": {
													"raw": "{{baseUrl}}/worker/multipart/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&uploadid=2Cd73620aF9f2c2CfB4c47Eb2E577ced10a8fc292faea60561BBf0C530Ec1a3e&partnumber=<integer>&minshards=<integer>&totalshards=<integer>&encryptionoffset=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"multipart",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) The name of the bucket the multipart upload belongs to"
														},
														{
															"key": "uploadid",
															"value": "2Cd73620aF9f2c2CfB4c47Eb2E577ced10a8fc292faea60561BBf0C530Ec1a3e",
															"description": "(Required) The ID of the ongoing multipart upload"
														},
														{
															"key": "partnumber",
															"value": "<integer>",
															"description": "(Required) The part number of the part being uploaded"
														},
														{
															"key": "minshards",
															"value": "<integer>",
															"description": "Used to override the minimum number of shards the part should be split into."
														},
														{
															"key": "totalshards",
															"value": "<integer>",
															"description": "Used to override the total number of shards the part should be split into."
														},
														{
															"key": "encryptionoffset",
															"value": "<integer>",
															"description": "The offset of the part within the final object. This is required unless the upload was explicitly created to not be encrypted before erasure coding."
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "ETag",
													"value": "W/\"fTpxU\"",
													"description": {
														"content": "The ETag of the uploaded part",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													}
												],
												"body": {
													"mode": "file",
													"file": {}
												},
												"url": {
													"raw": "{{baseUrl}}/worker/multipart/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&uploadid=2Cd73620aF9f2c2CfB4c47Eb2E577ced10a8fc292faea60561BBf0C530Ec1a3e&partnumber=<integer>&minshards=<integer>&totalshards=<integer>&encryptionoffset=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"multipart",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) The name of the bucket the multipart upload belongs to"
														},
														{
															"key": "uploadid",
															"value": "2Cd73620aF9f2c2CfB4c47Eb2E577ced10a8fc292faea60561BBf0C530Ec1a3e",
															"description": "(Required) The ID of the ongoing multipart upload"
														},
														{
															"key": "partnumber",
															"value": "<integer>",
															"description": "(Required) The part number of the part being uploaded"
														},
														{
															"key": "minshards",
															"value": "<integer>",
															"description": "Used to override the minimum number of shards the part should be split into."
														},
														{
															"key": "totalshards",
															"value": "<integer>",
															"description": "Used to override the total number of shards the part should be split into."
														},
														{
															"key": "encryptionoffset",
															"value": "<integer>",
															"description": "The offset of the part within the final object. This is required unless the upload was explicitly created to not be encrypted before erasure coding."
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bucket or upload weren't found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													}
												],
												"body": {
													"mode": "file",
													"file": {}
												},
												"url": {
													"raw": "{{baseUrl}}/worker/multipart/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&uploadid=2Cd73620aF9f2c2CfB4c47Eb2E577ced10a8fc292faea60561BBf0C530Ec1a3e&partnumber=<integer>&minshards=<integer>&totalshards=<integer>&encryptionoffset=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"multipart",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) The name of the bucket the multipart upload belongs to"
														},
														{
															"key": "uploadid",
															"value": "2Cd73620aF9f2c2CfB4c47Eb2E577ced10a8fc292faea60561BBf0C530Ec1a3e",
															"description": "(Required) The ID of the ongoing multipart upload"
														},
														{
															"key": "partnumber",
															"value": "<integer>",
															"description": "(Required) The part number of the part being uploaded"
														},
														{
															"key": "minshards",
															"value": "<integer>",
															"description": "Used to override the minimum number of shards the part should be split into."
														},
														{
															"key": "totalshards",
															"value": "<integer>",
															"description": "Used to override the total number of shards the part should be split into."
														},
														{
															"key": "encryptionoffset",
															"value": "<integer>",
															"description": "The offset of the part within the final object. This is required unless the upload was explicitly created to not be encrypted before erasure coding."
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Consensus isn't synced",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													}
												],
												"body": {
													"mode": "file",
													"file": {}
												},
												"url": {
													"raw": "{{baseUrl}}/worker/multipart/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&uploadid=2Cd73620aF9f2c2CfB4c47Eb2E577ced10a8fc292faea60561BBf0C530Ec1a3e&partnumber=<integer>&minshards=<integer>&totalshards=<integer>&encryptionoffset=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"multipart",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) The name of the bucket the multipart upload belongs to"
														},
														{
															"key": "uploadid",
															"value": "2Cd73620aF9f2c2CfB4c47Eb2E577ced10a8fc292faea60561BBf0C530Ec1a3e",
															"description": "(Required) The ID of the ongoing multipart upload"
														},
														{
															"key": "partnumber",
															"value": "<integer>",
															"description": "(Required) The part number of the part being uploaded"
														},
														{
															"key": "minshards",
															"value": "<integer>",
															"description": "Used to override the minimum number of shards the part should be split into."
														},
														{
															"key": "totalshards",
															"value": "<integer>",
															"description": "Used to override the total number of shards the part should be split into."
														},
														{
															"key": "encryptionoffset",
															"value": "<integer>",
															"description": "The offset of the part within the final object. This is required unless the upload was explicitly created to not be encrypted before erasure coding."
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "object",
					"item": [
						{
							"name": "{key}",
							"item": [
								{
									"name": "Download an object",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Range",
												"value": "<string>",
												"description": "The range of bytes to download. If not provided, the entire object will be downloaded."
											},
											{
												"key": "Accept",
												"value": "application/octet-stream"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/worker/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"worker",
												"object",
												":key"
											],
											"query": [
												{
													"key": "bucket",
													"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"description": "(Required) The name of the bucket the object belongs to"
												}
											],
											"variable": [
												{
													"key": "key",
													"value": "<string>",
													"description": "(Required) The key of the file to download"
												}
											]
										},
										"description": "Downloads an object from the Sia network."
									},
									"response": [
										{
											"name": "Successfully downloaded object",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Range",
														"value": "<string>",
														"description": "The range of bytes to download. If not provided, the entire object will be downloaded."
													},
													{
														"key": "Accept",
														"value": "application/octet-stream"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/worker/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) The name of the bucket the object belongs to"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/octet-stream"
												},
												{
													"key": "Accept-Ranges",
													"value": "<string>",
													"description": {
														"content": "The range units the server supports",
														"type": "text/plain"
													}
												},
												{
													"key": "Content-Range",
													"value": "<string>",
													"description": {
														"content": "The range of bytes that were downloaded",
														"type": "text/plain"
													}
												},
												{
													"key": "Content-Type",
													"value": "<string>",
													"description": {
														"content": "The content type of the object",
														"type": "text/plain"
													}
												},
												{
													"key": "ETag",
													"value": "W/\"fTpxU\"",
													"description": {
														"content": "The ETag of the downloaded object",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "<binary>"
										},
										{
											"name": "Invalid range or missing parameters",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Range",
														"value": "<string>",
														"description": "The range of bytes to download. If not provided, the entire object will be downloaded."
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/worker/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) The name of the bucket the object belongs to"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Object not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Range",
														"value": "<string>",
														"description": "The range of bytes to download. If not provided, the entire object will be downloaded."
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/worker/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) The name of the bucket the object belongs to"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "No overlap between 'Range' and object's content",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Range",
														"value": "<string>",
														"description": "The range of bytes to download. If not provided, the entire object will be downloaded."
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/worker/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) The name of the bucket the object belongs to"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Requested Range Not Satisfiable",
											"code": 416,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Range",
														"value": "<string>",
														"description": "The range of bytes to download. If not provided, the entire object will be downloaded."
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/worker/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) The name of the bucket the object belongs to"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										}
									]
								},
								{
									"name": "Upload an object",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/octet-stream"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{baseUrl}}/worker/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&minshards=<integer>&totalshards=<integer>&mimetype=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"worker",
												"object",
												":key"
											],
											"query": [
												{
													"key": "bucket",
													"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"description": "(Required) The name of the bucket the object belongs to"
												},
												{
													"key": "minshards",
													"value": "<integer>",
													"description": "Used to override the minimum number of shards the object should be split into."
												},
												{
													"key": "totalshards",
													"value": "<integer>",
													"description": "Used to override the total number of shards the object should be split into."
												},
												{
													"key": "mimetype",
													"value": "<string>",
													"description": "The MIME type of the object"
												}
											],
											"variable": [
												{
													"key": "key",
													"value": "<string>",
													"description": "(Required) The key of the file to upload"
												}
											]
										},
										"description": "Uploads an object to the Sia network."
									},
									"response": [
										{
											"name": "Successfully uploaded object",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													}
												],
												"body": {
													"mode": "file",
													"file": {}
												},
												"url": {
													"raw": "{{baseUrl}}/worker/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&minshards=<integer>&totalshards=<integer>&mimetype=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) The name of the bucket the object belongs to"
														},
														{
															"key": "minshards",
															"value": "<integer>",
															"description": "Used to override the minimum number of shards the object should be split into."
														},
														{
															"key": "totalshards",
															"value": "<integer>",
															"description": "Used to override the total number of shards the object should be split into."
														},
														{
															"key": "mimetype",
															"value": "<string>",
															"description": "The MIME type of the object"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "ETag",
													"value": "W/\"fTpxU\"",
													"description": {
														"content": "The ETag of the uploaded object",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid combination of request parameters",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													}
												],
												"body": {
													"mode": "file",
													"file": {}
												},
												"url": {
													"raw": "{{baseUrl}}/worker/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&minshards=<integer>&totalshards=<integer>&mimetype=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) The name of the bucket the object belongs to"
														},
														{
															"key": "minshards",
															"value": "<integer>",
															"description": "Used to override the minimum number of shards the object should be split into."
														},
														{
															"key": "totalshards",
															"value": "<integer>",
															"description": "Used to override the total number of shards the object should be split into."
														},
														{
															"key": "mimetype",
															"value": "<string>",
															"description": "The MIME type of the object"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bucket not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													}
												],
												"body": {
													"mode": "file",
													"file": {}
												},
												"url": {
													"raw": "{{baseUrl}}/worker/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&minshards=<integer>&totalshards=<integer>&mimetype=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) The name of the bucket the object belongs to"
														},
														{
															"key": "minshards",
															"value": "<integer>",
															"description": "Used to override the minimum number of shards the object should be split into."
														},
														{
															"key": "totalshards",
															"value": "<integer>",
															"description": "Used to override the total number of shards the object should be split into."
														},
														{
															"key": "mimetype",
															"value": "<string>",
															"description": "The MIME type of the object"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Consensus isn't synced",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													}
												],
												"body": {
													"mode": "file",
													"file": {}
												},
												"url": {
													"raw": "{{baseUrl}}/worker/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&minshards=<integer>&totalshards=<integer>&mimetype=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) The name of the bucket the object belongs to"
														},
														{
															"key": "minshards",
															"value": "<integer>",
															"description": "Used to override the minimum number of shards the object should be split into."
														},
														{
															"key": "totalshards",
															"value": "<integer>",
															"description": "Used to override the total number of shards the object should be split into."
														},
														{
															"key": "mimetype",
															"value": "<string>",
															"description": "The MIME type of the object"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete an object",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/worker/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"worker",
												"object",
												":key"
											],
											"query": [
												{
													"key": "bucket",
													"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"description": "(Required) The name of the bucket the object belongs to"
												}
											],
											"variable": [
												{
													"key": "key",
													"value": "<string>",
													"description": "(Required) The key of the file to delete"
												}
											]
										},
										"description": "Deletes an object from the local database. The object is not removed from the network immediately. Instead, the autopilot prunes data from the network periodically."
									},
									"response": [
										{
											"name": "Successfully deleted object",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/worker/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) The name of the bucket the object belongs to"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Object not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/worker/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) The name of the bucket the object belongs to"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "objects",
					"item": [
						{
							"name": "remove",
							"item": [
								{
									"name": "Delete a batch of objects with a given prefix",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bucket\": \"rw1i-sgmc1ipsn7st0t35td9kfniyd\",\n  \"prefix\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/worker/objects/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"worker",
												"objects",
												"remove"
											]
										},
										"description": "Deletes all objects with the provided prefix from the local database. The objects are not removed from the network immediately. Instead, the autopilot prunes data from the network periodically."
									},
									"response": [
										{
											"name": "Successfully removed objects",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"rw1i-sgmc1ipsn7st0t35td9kfniyd\",\n  \"prefix\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/worker/objects/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"objects",
														"remove"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"rw1i-sgmc1ipsn7st0t35td9kfniyd\",\n  \"prefix\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/worker/objects/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"objects",
														"remove"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Object not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"rw1i-sgmc1ipsn7st0t35td9kfniyd\",\n  \"prefix\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/worker/objects/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"objects",
														"remove"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"rw1i-sgmc1ipsn7st0t35td9kfniyd\",\n  \"prefix\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/worker/objects/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"objects",
														"remove"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "state",
					"item": [
						{
							"name": "Get the worker's state.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/worker/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"worker",
										"state"
									]
								},
								"description": "Returns general information about the work."
							},
							"response": [
								{
									"name": "Successfully retrieved worker state",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/worker/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"worker",
												"state"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"do dolore proident\",\n  \"startTime\": \"2020-11-20T00:25:54.625Z\",\n  \"buildTime\": \"<dateTime>\",\n  \"commit\": \"<string>\",\n  \"version\": \"<string>\",\n  \"os\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "stats",
					"item": [
						{
							"name": "downloads",
							"item": [
								{
									"name": "Get download statistics",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/worker/stats/downloads",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"worker",
												"stats",
												"downloads"
											]
										},
										"description": "Returns the download statistics of the worker."
									},
									"response": [
										{
											"name": "Successfully retrieved download statistics",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/worker/stats/downloads",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"stats",
														"downloads"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"avgDownloadSpeedMbps\": \"<float>\",\n  \"avgOverdrivePct\": \"<float>\",\n  \"healthyDownloaders\": \"<integer>\",\n  \"numDownloaders\": \"<integer>\",\n  \"downloadersStats\": [\n    {\n      \"avgSectorDownloadSpeedMbps\": \"<float>\",\n      \"hostKey\": \"ed25519:5Bf57c1a7d0dEE07eBCc69da9Ebe79c9bc7D80b68DfF4F219Ad34CfAA32Ad2a2\"\n    },\n    {\n      \"avgSectorDownloadSpeedMbps\": \"<float>\",\n      \"hostKey\": \"ed25519:57C5fdf1FD983699E855c0Cf479518bfE7eD953c6749c698dAaF3AecE8EeAf38\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "uploads",
							"item": [
								{
									"name": "Get upload statistics",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/worker/stats/uploads",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"worker",
												"stats",
												"uploads"
											]
										},
										"description": "Returns the upload statistics of the worker."
									},
									"response": [
										{
											"name": "Successfully retrieved upload statistics",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/worker/stats/uploads",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"worker",
														"stats",
														"uploads"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"avgUploadSpeedMbps\": \"<float>\",\n  \"avgOverdrivePct\": \"<float>\",\n  \"healthyUploaders\": \"<integer>\",\n  \"numUploaders\": \"<integer>\",\n  \"uploadersStats\": [\n    {\n      \"avgSectorUploadSpeedMbps\": \"<float>\",\n      \"hostKey\": \"ed25519:D8DAD9450f3a6f8c5D0adB1948D7afAbb8cebfAc0Ea84A5abdD4Fcc4fe4efb1c\"\n    },\n    {\n      \"avgSectorUploadSpeedMbps\": \"<float>\",\n      \"hostKey\": \"ed25519:f7CAa05035D3Ab859ba1f702eB44B0eAB4de5a38333Ed7D6EdBE048c40FecfD7\"\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "bus",
			"item": [
				{
					"name": "accounts",
					"item": [
						{
							"name": "fund",
							"item": [
								{
									"name": "Fund an account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountID\": \"ed25519:Ae9ea8E51aFb3F0d20B9a58F7Df91DeAB86BE8a6d38afeCFA8A8AefeCD0Dd270\",\n  \"amount\": \"1\",\n  \"contractID\": \"fcid:fBcaF650aA3ec7AcCb5CDc3778C50aBab1936B364C020e24FAed105c74E41B9e\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/accounts/fund",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"accounts",
												"fund"
											]
										},
										"description": "Funds the specified account with the provided amount."
									},
									"response": [
										{
											"name": "Successfully funded account",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountID\": \"ed25519:Ae9ea8E51aFb3F0d20B9a58F7Df91DeAB86BE8a6d38afeCFA8A8AefeCD0Dd270\",\n  \"amount\": \"1\",\n  \"contractID\": \"fcid:fBcaF650aA3ec7AcCb5CDc3778C50aBab1936B364C020e24FAed105c74E41B9e\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/accounts/fund",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"accounts",
														"fund"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deposit\": \"3889111\"\n}"
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountID\": \"ed25519:Ae9ea8E51aFb3F0d20B9a58F7Df91DeAB86BE8a6d38afeCFA8A8AefeCD0Dd270\",\n  \"amount\": \"1\",\n  \"contractID\": \"fcid:fBcaF650aA3ec7AcCb5CDc3778C50aBab1936B364C020e24FAed105c74E41B9e\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/accounts/fund",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"accounts",
														"fund"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Contract not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountID\": \"ed25519:Ae9ea8E51aFb3F0d20B9a58F7Df91DeAB86BE8a6d38afeCFA8A8AefeCD0Dd270\",\n  \"amount\": \"1\",\n  \"contractID\": \"fcid:fBcaF650aA3ec7AcCb5CDc3778C50aBab1936B364C020e24FAed105c74E41B9e\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/accounts/fund",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"accounts",
														"fund"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountID\": \"ed25519:Ae9ea8E51aFb3F0d20B9a58F7Df91DeAB86BE8a6d38afeCFA8A8AefeCD0Dd270\",\n  \"amount\": \"1\",\n  \"contractID\": \"fcid:fBcaF650aA3ec7AcCb5CDc3778C50aBab1936B364C020e24FAed105c74E41B9e\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/accounts/fund",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"accounts",
														"fund"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all accounts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bus/accounts?owner=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bus",
										"accounts"
									],
									"query": [
										{
											"key": "owner",
											"value": "<string>",
											"description": "The owner of the account"
										}
									]
								},
								"description": "Returns all accounts."
							},
							"response": [
								{
									"name": "Successfully retrieved accounts",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/accounts?owner=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"accounts"
											],
											"query": [
												{
													"key": "owner",
													"value": "<string>",
													"description": "The owner of the account"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"ed25519:eEd4C8fEcc4A3cdDA657f9678a13446BDACDaEd7e003eceeCCcf5AFCED1a657F\",\n    \"cleanShutdown\": \"<boolean>\",\n    \"hostKey\": \"ed25519:DC875dBFBFdf4C3DcB657343E4F7bb2a59Df8Ec5370AcdB3AFBE020042AeDF4e\",\n    \"balance\": \"287230\",\n    \"drift\": \"-86552822967\",\n    \"owner\": \"<string>\",\n    \"requiresSync\": \"<boolean>\"\n  },\n  {\n    \"id\": \"ed25519:Bfa47CCeeEEB829F0Ef873BB3cAEa1301edCA68f992B6eF75a74bfAfD0a6D14b\",\n    \"cleanShutdown\": \"<boolean>\",\n    \"hostKey\": \"ed25519:0cc6D5E71ed25e115B0B7BEe9E9A9C51B9BF8ff8F8385bC37b8fFc472A4eEf1c\",\n    \"balance\": \"6499471402\",\n    \"drift\": \"-3704\",\n    \"owner\": \"<string>\",\n    \"requiresSync\": \"<boolean>\"\n  }\n]"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bus/accounts?owner=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"accounts"
											],
											"query": [
												{
													"key": "owner",
													"value": "<string>",
													"description": "The owner of the account"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Save accounts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accounts\": [\n    {\n      \"id\": \"ed25519:1CFaBbc59F02B8Bc4bB537bD6b48be5FBECcCBecDDB19F49A0a3ADfbDA0Fbc41\",\n      \"cleanShutdown\": \"<boolean>\",\n      \"hostKey\": \"ed25519:94F6D6eB3adF620D2E72F8fe73C7D0Ad1fCBE1092dc9d3852150A6B43EDa2CB3\",\n      \"balance\": \"88\",\n      \"drift\": \"-82292517617\",\n      \"owner\": \"<string>\",\n      \"requiresSync\": \"<boolean>\"\n    },\n    {\n      \"id\": \"ed25519:69f5aEB12E77AE844d4BbD4806bD7C2DeeD196d3dD511C24E3AeAD9a63d1cC6d\",\n      \"cleanShutdown\": \"<boolean>\",\n      \"hostKey\": \"ed25519:B718ABDeBBe23ADAEBCf8A813F5aAE7b76f20f9C4DF3E76814B1123076f8FBa0\",\n      \"balance\": \"80818094673\",\n      \"drift\": \"8666232\",\n      \"owner\": \"<string>\",\n      \"requiresSync\": \"<boolean>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bus/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bus",
										"accounts"
									]
								},
								"description": "Saves the provided accounts to the database."
							},
							"response": [
								{
									"name": "Successfully saved accounts",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accounts\": [\n    {\n      \"id\": \"ed25519:1CFaBbc59F02B8Bc4bB537bD6b48be5FBECcCBecDDB19F49A0a3ADfbDA0Fbc41\",\n      \"cleanShutdown\": \"<boolean>\",\n      \"hostKey\": \"ed25519:94F6D6eB3adF620D2E72F8fe73C7D0Ad1fCBE1092dc9d3852150A6B43EDa2CB3\",\n      \"balance\": \"88\",\n      \"drift\": \"-82292517617\",\n      \"owner\": \"<string>\",\n      \"requiresSync\": \"<boolean>\"\n    },\n    {\n      \"id\": \"ed25519:69f5aEB12E77AE844d4BbD4806bD7C2DeeD196d3dD511C24E3AeAD9a63d1cC6d\",\n      \"cleanShutdown\": \"<boolean>\",\n      \"hostKey\": \"ed25519:B718ABDeBBe23ADAEBCf8A813F5aAE7b76f20f9C4DF3E76814B1123076f8FBa0\",\n      \"balance\": \"80818094673\",\n      \"drift\": \"8666232\",\n      \"owner\": \"<string>\",\n      \"requiresSync\": \"<boolean>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"accounts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Malformed request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accounts\": [\n    {\n      \"id\": \"ed25519:1CFaBbc59F02B8Bc4bB537bD6b48be5FBECcCBecDDB19F49A0a3ADfbDA0Fbc41\",\n      \"cleanShutdown\": \"<boolean>\",\n      \"hostKey\": \"ed25519:94F6D6eB3adF620D2E72F8fe73C7D0Ad1fCBE1092dc9d3852150A6B43EDa2CB3\",\n      \"balance\": \"88\",\n      \"drift\": \"-82292517617\",\n      \"owner\": \"<string>\",\n      \"requiresSync\": \"<boolean>\"\n    },\n    {\n      \"id\": \"ed25519:69f5aEB12E77AE844d4BbD4806bD7C2DeeD196d3dD511C24E3AeAD9a63d1cC6d\",\n      \"cleanShutdown\": \"<boolean>\",\n      \"hostKey\": \"ed25519:B718ABDeBBe23ADAEBCf8A813F5aAE7b76f20f9C4DF3E76814B1123076f8FBa0\",\n      \"balance\": \"80818094673\",\n      \"drift\": \"8666232\",\n      \"owner\": \"<string>\",\n      \"requiresSync\": \"<boolean>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"accounts"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "<string>"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accounts\": [\n    {\n      \"id\": \"ed25519:1CFaBbc59F02B8Bc4bB537bD6b48be5FBECcCBecDDB19F49A0a3ADfbDA0Fbc41\",\n      \"cleanShutdown\": \"<boolean>\",\n      \"hostKey\": \"ed25519:94F6D6eB3adF620D2E72F8fe73C7D0Ad1fCBE1092dc9d3852150A6B43EDa2CB3\",\n      \"balance\": \"88\",\n      \"drift\": \"-82292517617\",\n      \"owner\": \"<string>\",\n      \"requiresSync\": \"<boolean>\"\n    },\n    {\n      \"id\": \"ed25519:69f5aEB12E77AE844d4BbD4806bD7C2DeeD196d3dD511C24E3AeAD9a63d1cC6d\",\n      \"cleanShutdown\": \"<boolean>\",\n      \"hostKey\": \"ed25519:B718ABDeBBe23ADAEBCf8A813F5aAE7b76f20f9C4DF3E76814B1123076f8FBa0\",\n      \"balance\": \"80818094673\",\n      \"drift\": \"8666232\",\n      \"owner\": \"<string>\",\n      \"requiresSync\": \"<boolean>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"accounts"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "alerts",
					"item": [
						{
							"name": "dismiss",
							"item": [
								{
									"name": "Dismiss alerts",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"68dC10fdA98d140dcfF0Ab52B85D1D1f3E750bC8DB3016e3cE6b96808a1B6e4f\",\n  \"0BFb9a0Cb77A9d886BdCc2fBbFB50c1200af0ab76cD4013b2aE3CCe3465ec5d1\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/alerts/dismiss",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"alerts",
												"dismiss"
											]
										},
										"description": "Dismisses the specified alerts."
									},
									"response": [
										{
											"name": "Successfully dismissed alerts",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  \"68dC10fdA98d140dcfF0Ab52B85D1D1f3E750bC8DB3016e3cE6b96808a1B6e4f\",\n  \"0BFb9a0Cb77A9d886BdCc2fBbFB50c1200af0ab76cD4013b2aE3CCe3465ec5d1\"\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/alerts/dismiss",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"alerts",
														"dismiss"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  \"68dC10fdA98d140dcfF0Ab52B85D1D1f3E750bC8DB3016e3cE6b96808a1B6e4f\",\n  \"0BFb9a0Cb77A9d886BdCc2fBbFB50c1200af0ab76cD4013b2aE3CCe3465ec5d1\"\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/alerts/dismiss",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"alerts",
														"dismiss"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "register",
							"item": [
								{
									"name": "Register an alert",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"severity\": {\n    \"id\": \"7aA2c4E3F4E8cdb1e4e9bc12CfA6Ee7bff7FFe686E5eBa95AfcDC043A6D37DeC\",\n    \"severity\": \"warning\",\n    \"message\": \"<string>\",\n    \"date\": {},\n    \"timestamp\": \"<dateTime>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/alerts/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"alerts",
												"register"
											]
										},
										"description": "Registers a new alert."
									},
									"response": [
										{
											"name": "Successfully registered alert",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"severity\": {\n    \"id\": \"7aA2c4E3F4E8cdb1e4e9bc12CfA6Ee7bff7FFe686E5eBa95AfcDC043A6D37DeC\",\n    \"severity\": \"warning\",\n    \"message\": \"<string>\",\n    \"date\": {},\n    \"timestamp\": \"<dateTime>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/alerts/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"alerts",
														"register"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"severity\": {\n    \"id\": \"7aA2c4E3F4E8cdb1e4e9bc12CfA6Ee7bff7FFe686E5eBa95AfcDC043A6D37DeC\",\n    \"severity\": \"warning\",\n    \"message\": \"<string>\",\n    \"date\": {},\n    \"timestamp\": \"<dateTime>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/alerts/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"alerts",
														"register"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all alerts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bus/alerts?limit=-1&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bus",
										"alerts"
									],
									"query": [
										{
											"key": "limit",
											"value": "-1",
											"description": "The maximum number of alerts to return"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The number of alerts to skip"
										}
									]
								},
								"description": "Returns all currently registered alerts."
							},
							"response": [
								{
									"name": "Successfully retrieved alerts",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/alerts?limit=-1&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"alerts"
											],
											"query": [
												{
													"key": "limit",
													"value": "-1",
													"description": "The maximum number of alerts to return"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The number of alerts to skip"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"alerts\": [\n    {\n      \"id\": \"daB0E672F9f305B50C74D0CE2CfD52BD6eEf1b049d36EE5f1B10Afd26da776EB\",\n      \"severity\": \"error\",\n      \"message\": \"<string>\",\n      \"date\": {},\n      \"timestamp\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"AB1dAcc8c5CcF7b0dcEa4B1aAdAaC2df2aF1f9589d6eDBa150DC3aaD548d2ED7\",\n      \"severity\": \"critical\",\n      \"message\": \"<string>\",\n      \"date\": {},\n      \"timestamp\": \"<dateTime>\"\n    }\n  ],\n  \"hasMore\": \"<boolean>\",\n  \"totals\": {\n    \"info\": \"<integer>\",\n    \"warning\": \"<integer>\",\n    \"error\": \"<integer>\",\n    \"critical\": \"<integer>\"\n  }\n}"
								},
								{
									"name": "Malformed request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/alerts?limit=-1&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"alerts"
											],
											"query": [
												{
													"key": "limit",
													"value": "-1",
													"description": "The maximum number of alerts to return"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The number of alerts to skip"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "<string>"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bus/alerts?limit=-1&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"alerts"
											],
											"query": [
												{
													"key": "limit",
													"value": "-1",
													"description": "The maximum number of alerts to return"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The number of alerts to skip"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "autopilot",
					"item": [
						{
							"name": "Get autopilot configuration",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bus/autopilot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bus",
										"autopilot"
									]
								},
								"description": "Returns the current autopilot configuration."
							},
							"response": [
								{
									"name": "Successfully retrieved autopilot configuration",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/autopilot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"autopilot"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"enabled\": \"<boolean>\",\n  \"contracts\": {\n    \"amount\": 0,\n    \"period\": 0,\n    \"renewWindow\": 0,\n    \"download\": 0,\n    \"upload\": 0,\n    \"storage\": 0,\n    \"prune\": false\n  },\n  \"hosts\": {\n    \"maxConsecutiveScanFailures\": 0,\n    \"maxDowntimeHours\": 0,\n    \"minProtocolVersion\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bus/autopilot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"autopilot"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update autopilot configuration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"contracts\": {\n    \"amount\": 0,\n    \"period\": 0,\n    \"renewWindow\": 0,\n    \"download\": 0,\n    \"upload\": 0,\n    \"storage\": 0,\n    \"prune\": false\n  },\n  \"hosts\": {\n    \"maxConsecutiveScanFailures\": 0,\n    \"maxDowntimeHours\": 0,\n    \"minProtocolVersion\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bus/autopilot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bus",
										"autopilot"
									]
								},
								"description": "Updates the autopilot configuration."
							},
							"response": [
								{
									"name": "Successfully updated autopilot configuration",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"contracts\": {\n    \"amount\": 0,\n    \"period\": 0,\n    \"renewWindow\": 0,\n    \"download\": 0,\n    \"upload\": 0,\n    \"storage\": 0,\n    \"prune\": false\n  },\n  \"hosts\": {\n    \"maxConsecutiveScanFailures\": 0,\n    \"maxDowntimeHours\": 0,\n    \"minProtocolVersion\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/autopilot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"autopilot"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Malformed request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"contracts\": {\n    \"amount\": 0,\n    \"period\": 0,\n    \"renewWindow\": 0,\n    \"download\": 0,\n    \"upload\": 0,\n    \"storage\": 0,\n    \"prune\": false\n  },\n  \"hosts\": {\n    \"maxConsecutiveScanFailures\": 0,\n    \"maxDowntimeHours\": 0,\n    \"minProtocolVersion\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/autopilot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"autopilot"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"contracts\": {\n    \"amount\": 0,\n    \"period\": 0,\n    \"renewWindow\": 0,\n    \"download\": 0,\n    \"upload\": 0,\n    \"storage\": 0,\n    \"prune\": false\n  },\n  \"hosts\": {\n    \"maxConsecutiveScanFailures\": 0,\n    \"maxDowntimeHours\": 0,\n    \"minProtocolVersion\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/autopilot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"autopilot"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "buckets",
					"item": [
						{
							"name": "Get all buckets",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bus/buckets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bus",
										"buckets"
									]
								},
								"description": "Returns all known buckets."
							},
							"response": [
								{
									"name": "Successfully retrieved buckets",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/buckets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"buckets"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"name\": \"x6ckjnxde3o2bzz6q0v\",\n    \"policy\": {\n      \"publicReadAccess\": \"<boolean>\"\n    },\n    \"createdAt\": \"<dateTime>\"\n  },\n  {\n    \"name\": \"c-p07gv125ip73b0eu01ilabebiq6zkpv0xvfbwcthogxrtqwc9igcm\",\n    \"policy\": {\n      \"publicReadAccess\": \"<boolean>\"\n    },\n    \"createdAt\": \"<dateTime>\"\n  }\n]"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bus/buckets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"buckets"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create bucket",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"o5x38u7186vs-xr7aymiru\",\n  \"policy\": {\n    \"publicReadAccess\": \"<boolean>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bus/buckets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bus",
										"buckets"
									]
								},
								"description": "Create a new bucket."
							},
							"response": [
								{
									"name": "Successfully saved buckets",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"o5x38u7186vs-xr7aymiru\",\n  \"policy\": {\n    \"publicReadAccess\": \"<boolean>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/buckets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"buckets"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Malformed request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"o5x38u7186vs-xr7aymiru\",\n  \"policy\": {\n    \"publicReadAccess\": \"<boolean>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/buckets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"buckets"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "<string>"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"o5x38u7186vs-xr7aymiru\",\n  \"policy\": {\n    \"publicReadAccess\": \"<boolean>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/buckets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"buckets"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "bucket",
					"item": [
						{
							"name": "{name}",
							"item": [
								{
									"name": "policy",
									"item": [
										{
											"name": "Update bucket policy",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"policy\": {\n    \"publicReadAccess\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/bucket/:name/policy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"bucket",
														":name",
														"policy"
													],
													"variable": [
														{
															"key": "name",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) The name of the bucket"
														}
													]
												},
												"description": "Updates the policy of the specified bucket."
											},
											"response": [
												{
													"name": "Successfully updated bucket policy",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"policy\": {\n    \"publicReadAccess\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/bucket/:name/policy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"bucket",
																":name",
																"policy"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Malformed request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "text/plain"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"policy\": {\n    \"publicReadAccess\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/bucket/:name/policy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"bucket",
																":name",
																"policy"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": "<string>"
												},
												{
													"name": "Bucket not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"policy\": {\n    \"publicReadAccess\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/bucket/:name/policy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"bucket",
																":name",
																"policy"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get bucket",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/bucket/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"bucket",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"description": "(Required) The name of the bucket"
												}
											]
										},
										"description": "Returns the specified bucket."
									},
									"response": [
										{
											"name": "Successfully retrieved bucket",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/bucket/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"bucket",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l"
										},
										{
											"name": "Bucket not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/bucket/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"bucket",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete bucket",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/bucket/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"bucket",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"description": "(Required) The name of the bucket"
												}
											]
										},
										"description": "Deletes the specified bucket."
									},
									"response": [
										{
											"name": "Successfully deleted bucket",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/bucket/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"bucket",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/bucket/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"bucket",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Bucket not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/bucket/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"bucket",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bucket not empty",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/bucket/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"bucket",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/bucket/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"bucket",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "consensus",
					"item": [
						{
							"name": "acceptblock",
							"item": [
								{
									"name": "Accept block",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"parentID\": \"cA7cf65CcCE57D06AcFFD625de0EeBB572cE765c713E30391Ac38C5C71520dea\",\n  \"nonce\": \"<integer>\",\n  \"timestamp\": \"<dateTime>\",\n  \"minerPayouts\": [\n    {\n      \"value\": \"2\",\n      \"address\": \"F5ccCaA63CF84FCee4bEc88d95B0aD9A7B20f01F12dcE7AD0Af935Acebfde784\"\n    },\n    {\n      \"value\": \"14\",\n      \"address\": \"3af89eFdfC5ABcbC430d63Cb72dC26748279fb2aEA36fEb6C00a0024bd47E00a\"\n    }\n  ],\n  \"transactions\": [\n    {\n      \"siacoinInputs\": [\n        {\n          \"parentID\": \"93C4DE95dBAA4F8f0BD9FA31bcC2F25fbC10Ab72FE1FD26ad29D3fdaDE85DE4b\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"F3EaFeB009aa2c5a0bCFaB4DABE2136e8E5Aa30b3a6e8Ce0A7292c9D2dDd3de4\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"cD33Df36302AdCFa85E76054B0942Ca07DEb34c9c43eDda73f54A2e93BCF57f2\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          }\n        },\n        {\n          \"parentID\": \"CaC25EF7C2369015a7f4aD6A64DED06baa5baf202fb48be2A948d06ab5F3a40f\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"8286342A76BCB2eec063bEbE72aD7Fdf353182f9006a8D3a36Ea5793B6aD57b3\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"54caAC369E1f7c6aC90e9D0f6D8B19cE8f0d5e3e791adAe5fb96DfbC3A8f5D8c\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          }\n        }\n      ],\n      \"siacoinOutputs\": [\n        {\n          \"value\": \"590030\",\n          \"address\": \"F0C2e1AcBeF1C58E2A46d10b4D6edF4338458e0CBcCFDEAdEFfb0C663cAa6428\"\n        },\n        {\n          \"value\": \"726356207\",\n          \"address\": \"b81A9E8ECBddCd95b818373e413890d7a1A4FD62FCD59AbCAE00ae56A137EB42\"\n        }\n      ],\n      \"fileContracts\": [\n        {\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"5e84De89B4dDcED67F0Fb03ceeA673b398Cb15b14F2a0fABB7a78BB8e2e1ACda\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"payout\": \"12\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"1681455853\",\n              \"address\": \"4Eb0bf119cA571CCA622e0B7d1F39d6d3dEFC559dEfF4a065cE8fd5Dddd41dcb\"\n            },\n            {\n              \"value\": \"311\",\n              \"address\": \"Ebb0F46CdcfaBf0c0FeD5f55890e08CDb6952ADBfa9cF93f3FeFFc5f1Cc12f32\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"062\",\n              \"address\": \"348424E62b473C915AA3E23FA411e04CDa90cB6F2560BE159AD5BbCD1ccFA6AD\"\n            },\n            {\n              \"value\": \"555\",\n              \"address\": \"aEf10c907D2e0ABECd08c4d5E239bA4Cf6AEfAE5038673dac80E15968b3Aa079\"\n            }\n          ],\n          \"unlockHash\": \"9ed6C37CDEd4c7BbD14d850CCcEa7CAA45CF3fcD2a7aa2438Eb8803bf3cb5fA5\",\n          \"revisionNumber\": \"<integer>\"\n        },\n        {\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"A7ae4302f66f84EDFDc1452B9Dca5ac11eB4dE89Ee1deB6799a74a271a9E488a\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"payout\": \"53739\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"72109056\",\n              \"address\": \"CdDde483c4F72C88eDb3050E6bDA0fA6eb6BDDB56Be8D1B25e7EC2CbA0a37B10\"\n            },\n            {\n              \"value\": \"579811703\",\n              \"address\": \"EBdE4cE0D50fEECd878eFec364dd7BDeED342ea17E9CCF9DfD6a3ec1AAeE96fd\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"0309\",\n              \"address\": \"BCEcd4866d8ae62e9203DCFF4E2c0cdEAB6EEed61Df88C16054CfC653b818b2D\"\n            },\n            {\n              \"value\": \"32864653\",\n              \"address\": \"A6cCcFbFe4Cf9a3f2D31B6CD47941C4dfda8a28e8FCfCe075E7FEf1D08af4F3B\"\n            }\n          ],\n          \"unlockHash\": \"4D4Fa6AF5080eFd58D0368fEEC96f7fE4EfAD5A0a9FEFA6d4f142aCFe6eF480E\",\n          \"revisionNumber\": \"<integer>\"\n        }\n      ],\n      \"fileContractRevisions\": [\n        {\n          \"parentID\": \"fcid:F85dde798E4DbCaca1400d7E6b8758f08adA43e6aFEdf66fc3e1Ec6DcaD5Ae6a\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"0FCcBfB87BeedCAcA23Bcee51eE3285B41AE20B18f4FbDeDcEB10e9eCAd8a44F\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"aFeCBBcF01fFeaEfe7BFA87aCcE64A73aF5B7cfE48544b1C9bBaAA9C4abAa3BD\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"B5c8f53eBf1EeAdAAF3b420C7EE6a5Aa86eDdeCfc69A05cEAc7C2F62F3F76EC5\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"24641553692\",\n              \"address\": \"88739481cbcd81D8E76eAE97cDDFac6911AbedeBfC6d7d6CBDab52DFDbfa0A03\"\n            },\n            {\n              \"value\": \"81\",\n              \"address\": \"C5bd46F1F30fcC9238e571aDccDAf807D89D87f45d5f3C08f26152d0AEd16CeF\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"61779638\",\n              \"address\": \"6BF1D3FcE7bAcAC228c42e405998DA7aFd8FD74bCFeab869Fbbf521Ead2aFACa\"\n            },\n            {\n              \"value\": \"4\",\n              \"address\": \"Dd6AcC629C286c6DAD7F6eE4001668BCDb11E3FF9cb75ddb603e8601Dc84e90A\"\n            }\n          ],\n          \"unlockHash\": \"7640E4694bB60902fF6e4B6Cd6DAafa50Cdde6E4F5CA81F163Edb85Fe8478064\",\n          \"revisionNumber\": \"<integer>\"\n        },\n        {\n          \"parentID\": \"fcid:948CAb021A5d556DcdfedEb4F1611cB3d8DB3DBdFa44FFfefddBbF4F4ac7e209\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"fCa6f404aA27c614DC03bfb4f022F0749C01dB61d2BfeA276dB1FA59B5DdFb96\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"Bcffb00c2db492FF44c419dd1D6bAfD579bE8AdDA6D3D4C3faeFE8369a8E95D2\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"CfbEeEabcCDA35Ab0Db11Bbc0686d7cb2d0EEa6ceE958a5ED03b3AFD0cAAbC70\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"0107\",\n              \"address\": \"7CeEaa7989a032E76fb8F9E476F7BABe7e5ebFfa3a5AccB2BAEDAaFeDf5E56d3\"\n            },\n            {\n              \"value\": \"77588861\",\n              \"address\": \"ab301F73A5CAFBc7ECf7Bc8996959D90Eda6C7Df36b30E72eC3f47FC4Bd43F4B\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"71723781432\",\n              \"address\": \"dcbDDa1aABF48cAb820fEbcE9336b3A22C4CAE5CfcBb0E93c06eCEd7bD3D1Fe3\"\n            },\n            {\n              \"value\": \"103578475\",\n              \"address\": \"bF8d4BcCcBDf655a7e384E7174eC92cd8e613DC62e11eCAAAd03Bfb5CcaFec77\"\n            }\n          ],\n          \"unlockHash\": \"D6ffadDEcED3c3eCA65D8E0604AA064277a2Db7780C85ad2D0695bfddc5ac4ed\",\n          \"revisionNumber\": \"<integer>\"\n        }\n      ],\n      \"storageProofs\": [\n        {\n          \"parentID\": \"fcid:DdBce3eabA6aEC6742EEde6239dEc3dc5FFee0Ea7A4D44c5fd02B8f883dC5cA6\",\n          \"leaf\": \"<string>\",\n          \"proof\": [\n            \"1ad6111DcA7f84a9F4A3FEf7cfa2AA4cbe4cc53ddc0998Aa271050B5Ea4dbdca\",\n            \"df17dD7eE46455C0Fa83b0B3Ff5e9cbf9cce4DFaa719cBcbD63a5e9A487c18c0\"\n          ]\n        },\n        {\n          \"parentID\": \"fcid:93Ee1e922FB8E31DBBEB7866b2c60C253AdCFE4BFaD9bE74058f96d65310dA3C\",\n          \"leaf\": \"<string>\",\n          \"proof\": [\n            \"B929EcdE070BC6fA91308C795FD9c0b1a830cf82dc4c98B1Be7473D5CCb182b0\",\n            \"7CFcAAeA8139ae4ceb5D3C7dB6c9A3b4bB0E5ca56EDcf328f7748B238c59DB77\"\n          ]\n        }\n      ],\n      \"siafundInputs\": [\n        {\n          \"parentID\": \"0B285BfdFEA84901aa8437cA1ADb9e81d8a1Ebc0D78a0406c8AB14AcdAEB4635\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"1BEf84dAd03ADEA5aEDf4961A90ec07De4f6C8bC6e75C0eee5afde1c2DB8BD9B\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"FD159FD1E9F934425Dd7D248D8e7D2F7e3a8E339957C05D1CdC52Fb0AC6d8d38\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"claimAddress\": \"bF666c4297cFCd3b2BEBf44De22B0DfeE5A8B7cae56ccC4E5432C3759fAF911D\"\n        },\n        {\n          \"parentID\": \"C577D9aFBf1eDebb0D9aFD57baCafd27cBFdC45A0cFF271CbCb80cdDa6db3a39\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"3C3bB88aA29dEEEeDde28ba2294fa2572F48084fbc3ebBe1b6FC89eABF83f58d\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"5d67D3cb6d66efF0DD115ca521DCAA807D03eEe83f5C05AD1E9990B5f336D9B2\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"claimAddress\": \"4b8b0Ae34ef5663282bC331d8BC1f18DFc4cafA681615b3Ac2f4dAFcf257E01B\"\n        }\n      ],\n      \"siafundOutputs\": [\n        {\n          \"value\": \"<integer>\",\n          \"address\": \"EF77BCfFBcE74987Dc9757b4D1C4F37db2d3ae5FB685cec70d0AF80A1FB49A3F\"\n        },\n        {\n          \"value\": \"<integer>\",\n          \"address\": \"5cA8F80ec1eeAF2Ff5bCF7cFFFACBAA15316dBc13B97E7CEaE790ebc2DCddBdD\"\n        }\n      ],\n      \"minerFees\": [\n        \"33856493266\",\n        \"799872\"\n      ],\n      \"arbitraryData\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"signatures\": [\n        {\n          \"parentID\": \"aBaB23efDecC0Df2C7dA2e3Cf81cC02Cf34CFD811e6CabEc181D6B6ABbDafAa4\",\n          \"publicKeyIndex\": \"<integer>\",\n          \"timelock\": \"<integer>\",\n          \"coveredFields\": {\n            \"wholeTransaction\": \"<boolean>\",\n            \"siacoinInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siacoinOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContracts\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContractRevisions\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"storageProofs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"minerFees\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"arbitraryData\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"signatures\": [\n              \"<integer>\",\n              \"<integer>\"\n            ]\n          },\n          \"signature\": \"7E91bA2cEb6aCFee32522765d9E1EF8DDeCe43cF7E56acA1B2A62276a12401a3\"\n        },\n        {\n          \"parentID\": \"A24dB8BAca93f4DBAe71eEFA7eb5CCF09ea80c2C71612Ccf0Cb68db9e6A87B1f\",\n          \"publicKeyIndex\": \"<integer>\",\n          \"timelock\": \"<integer>\",\n          \"coveredFields\": {\n            \"wholeTransaction\": \"<boolean>\",\n            \"siacoinInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siacoinOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContracts\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContractRevisions\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"storageProofs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"minerFees\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"arbitraryData\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"signatures\": [\n              \"<integer>\",\n              \"<integer>\"\n            ]\n          },\n          \"signature\": \"14517732d5dfbF27cDC87714A45dBfdd9EC13F5b20DE1Fc2216d9Fbefd88825c\"\n        }\n      ]\n    },\n    {\n      \"siacoinInputs\": [\n        {\n          \"parentID\": \"307ceDcF71A6dA885100fea3FA8B2516D8a33eDf6833fC42de8f06Aa65ecaEe6\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"44C1DF05FfdcEDAce7deBAcd4d11539EcC83Ae10B0e0c5E1bDe3CdE25a9f3ae7\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"5759C77A38f0fafac586ef6f800bB0A1bB6c6fAd06B719AC9147246C90dd27B5\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          }\n        },\n        {\n          \"parentID\": \"495ef96633bB2b84B3c4b28CFB98E2636F77Cdc0b5DdbAcfbBcfEf88af67d431\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"9FaAe5Badf4075cBCBfc15fA2e6cECfEfd1cdD38Ffbe8C0aBE67d6aC38e5C63C\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"eAeECBD30daC48DA874EA13a67DB4Ad41f26Ae7c0B79ca3d37eaEC92ACb3A8B2\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          }\n        }\n      ],\n      \"siacoinOutputs\": [\n        {\n          \"value\": \"8\",\n          \"address\": \"dAa9D04bC9BBaFDaAc8AD19bfCE0B83f6e342005fE4CBbF31bDEA8DE0cA1F6C9\"\n        },\n        {\n          \"value\": \"242870\",\n          \"address\": \"B5A8d0BcDe7f8C335DCc5D764653cE0ea95BBaDd60A96Bd7cdbd84dd9Ea19c8D\"\n        }\n      ],\n      \"fileContracts\": [\n        {\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"1dcDFf4DDbDd149bB17fBEFc3Eb561706AC747C3f38Fc84fcbF9E0Bb3BdCeddC\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"payout\": \"2118\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"295\",\n              \"address\": \"5eFE5DdfcdD1C7B8d9ea5cD15Da8E9987aDf8fBf2bBAd11Dc47DF4fdFB76CcfF\"\n            },\n            {\n              \"value\": \"01996490883\",\n              \"address\": \"88eb5F29BaB179a3cFebEBa8Aac388585d3ef9cEd66DDF5d177D80aCBC54c94F\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"097\",\n              \"address\": \"8A51B7fa5A1c562Bd0e3cb92eF8cAbcE34cD2Cbc9FdB3244B67bF0C4cc1FeE2b\"\n            },\n            {\n              \"value\": \"6081420\",\n              \"address\": \"a47ec46239B579e3C3f4B4FD6df20499dbA2c16Ebe9e02F6CeAe1edF5A1EbD75\"\n            }\n          ],\n          \"unlockHash\": \"0E8dF0f7F3edF5De29248a9aaA8dfe14ced1b5308cFF0a2Dd93ba4ba0C4B8Cf0\",\n          \"revisionNumber\": \"<integer>\"\n        },\n        {\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"01cf7EE51dCd27a57A6C7EacfbAd469f62E8F2d4Ec39fFaE2AdEABfe75eaBf72\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"payout\": \"876\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"61334902\",\n              \"address\": \"eBF546a17FEDfb7a3eC2aB8c075b543EcCB20A3BEB85D502CE4Fe9b5dAEd9fE8\"\n            },\n            {\n              \"value\": \"2841807382\",\n              \"address\": \"c215bbd8FE1EEB1C43C9DdC3e43831242c67F050C9aCf78E08ba637A1Cf41426\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"13388874\",\n              \"address\": \"9ef2F4AFCCcfA45be8edCfBCEe25e72ff7ca6E7A7367E52AFEDbCce00e0CBA16\"\n            },\n            {\n              \"value\": \"65645918322\",\n              \"address\": \"B429DF29135d2Fe24227aa0f4288fA5d85Aab905c6DA2fBd1d8BaD84a908fDab\"\n            }\n          ],\n          \"unlockHash\": \"D7CdfF3476ABf0ad7626ad37E03A59d4Bd4c50AC0D04FcBC4fA8B9aBc811fD0b\",\n          \"revisionNumber\": \"<integer>\"\n        }\n      ],\n      \"fileContractRevisions\": [\n        {\n          \"parentID\": \"fcid:6fF33bd5e7ebc6B3A9Adf290cA85ecc8dD9813c6c489b454A0b4a6ddC4DD8f2C\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"eAb14BAD1A68Cb0F5EE4cEc99BfB5518CE7bec07e952e4ef8f506DB35BdF4ECf\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"1bD4d9EcC8f3Eff5C3A20aD6EeA2BACF9f824E9BDaC5ED13B69d0FE59CCcDb0c\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"B4BfDd2aCAD31AEa62d7dCe4aDB3CCDBF4A02157bB8dDD11B2955EDb4461Bf1b\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"683\",\n              \"address\": \"333412A02A771170B8a1bcFF9D4066e5CC517D8e5ea5D00FC37d137A29fea3F6\"\n            },\n            {\n              \"value\": \"853995\",\n              \"address\": \"dc21E28cB4C0403EE1F5d27DBe449adD4E5D43B85864765EfA3De8aeDc8d2464\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"42925\",\n              \"address\": \"1FEcAEF0CEB2885Bbc35fD23dA8515822976Fb1C8e755Ca54a1e49F33277834C\"\n            },\n            {\n              \"value\": \"20312098357\",\n              \"address\": \"CD8dBE258Ee7bAeBEBD9b89a64dBC1eb5Bbc95fD6dFF1A4Eb0F558455aaCFdE2\"\n            }\n          ],\n          \"unlockHash\": \"e9755C12C456De0EF2E0C892AeE35F84d7CBe26041A83DcEdefeF46fe3A8A32D\",\n          \"revisionNumber\": \"<integer>\"\n        },\n        {\n          \"parentID\": \"fcid:BEEed24b2357b988aB48ed4E6c6D2dA4CaddE62FcF834E4BCA0C95C61C0F0Fc1\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"1A0F8BB60E66D1C331BF8b5c793fBD4E8eeE45ca3E1fE8AB52cf6ADBe755be70\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"26d27ac503Ece4A476Af24a2DaabECbAdf0dedFA4AFd7Eb6b2D7bDdaBAe9bFDc\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"a7475aE21190EEa3EF3A97a09eE70aCfEE082efa0Dea974DbacAc7AcB34B2c5B\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"5890\",\n              \"address\": \"3BFdF4cb37382c7144aEF994C82f212F84531AfaaA7820a86DFF75147DB786f4\"\n            },\n            {\n              \"value\": \"01\",\n              \"address\": \"BF261cDa9CEefb5693290DaCefdfC05725E50A73F3BB95A2FffddFEDaE4c18Df\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"6046\",\n              \"address\": \"d345bd7dcFfEF99d6a7e6700F343eAdB77010BDCB6FB0726cFd88d1Bc3Be1C22\"\n            },\n            {\n              \"value\": \"33802517\",\n              \"address\": \"Fe20cbbc4E68B662CA4aaebFAC0bdF2dE50E95EB88F6EbBaF41d2d528df2DfB0\"\n            }\n          ],\n          \"unlockHash\": \"792bAE92672d0bb9F03Dc8E4EfDcED6dC03E8eBf44678eEb0F884be275b72aAF\",\n          \"revisionNumber\": \"<integer>\"\n        }\n      ],\n      \"storageProofs\": [\n        {\n          \"parentID\": \"fcid:fE1484C9E7CCbFEe6a4c8a0b8CbA03B5E8A1911A5ba9c45befFCbaE8EFd18BB1\",\n          \"leaf\": \"<string>\",\n          \"proof\": [\n            \"f5E73a4D5A1051ACc342D2e81f8D3E074a015FDEc1742102ddAdcd14D3c76aAC\",\n            \"B744E4E4aa14A2A5Ea2AE36f5CDEf1F5Bf3d9AC69edf1aBA0AD5F07dA34DFDa4\"\n          ]\n        },\n        {\n          \"parentID\": \"fcid:840c3b9202aEcD39a13bA40CA5aEc93EDf27db50DfbCD382b5886AFF8cdA87E0\",\n          \"leaf\": \"<string>\",\n          \"proof\": [\n            \"aefcdf16dFE54587EFfe8f67EE6405cad7fa829236e30F7a010AA2c44da513F3\",\n            \"02ab9D1288E4bdd3bda16e2e5Ca08a9AF8EFb1fC7e620Fd8be546A69E3d5cbe9\"\n          ]\n        }\n      ],\n      \"siafundInputs\": [\n        {\n          \"parentID\": \"295a2f59Be9BBC80AeCA3FCf6d87AECB18d8FedAd96350a06Ad5C3bFC9A8f2cA\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"97ba53d72f8cd72f9E1E4bfF9DF2B4EDaf0Da9366111aBA19E973a9dFce9a25a\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"A1600BB949FEc8B929F5acD1260BC2Afc1EacB76FEe07878520d1991A27fC9bF\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"claimAddress\": \"10b4eD8eCEB8FE07A8AC3EE22DE287985CAEBD0E762B6EC14C8cCC4AFc6eF509\"\n        },\n        {\n          \"parentID\": \"4F007deC04F1228688Cb6Ed6f9c5C6BF348007D935B6A0696DDd3fE7687dcdFb\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"745F1E399Cbc3781dDCe31E1D5B5d4ebA7Ee6D26DD021E09826a0F3Dd3d47263\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"854149A01C2719F0Fdca4e0b309aba1bEc2c5beD6c6Bca32EeC5DFFC4B5e3F5f\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"claimAddress\": \"E3C769e3bed9C7cCd14feFCeE66122ac13205182eC7FB5fE0E5C13BBe06E88Ff\"\n        }\n      ],\n      \"siafundOutputs\": [\n        {\n          \"value\": \"<integer>\",\n          \"address\": \"4DC2B9FcC285E8153c007a0BCD2eD5FF4eF45e726b9fB3649bDb7d38ffBb50fF\"\n        },\n        {\n          \"value\": \"<integer>\",\n          \"address\": \"f54adF834A1b0F16aFe522eFcc6B4A607DA0ED16a72B9b4A7E021B02EDeF0F83\"\n        }\n      ],\n      \"minerFees\": [\n        \"8021692600\",\n        \"3392953476\"\n      ],\n      \"arbitraryData\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"signatures\": [\n        {\n          \"parentID\": \"CBECcBFeA8445BE726eb43Cb6D36ab6C36FEEebeb13FFC0FECA45FaF1bEcEc5A\",\n          \"publicKeyIndex\": \"<integer>\",\n          \"timelock\": \"<integer>\",\n          \"coveredFields\": {\n            \"wholeTransaction\": \"<boolean>\",\n            \"siacoinInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siacoinOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContracts\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContractRevisions\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"storageProofs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"minerFees\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"arbitraryData\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"signatures\": [\n              \"<integer>\",\n              \"<integer>\"\n            ]\n          },\n          \"signature\": \"8f57F6266B672B5EBAb1E5392d1FC1E5bF27c105CfD2EDCF7150c9C3Ee6b4eAD\"\n        },\n        {\n          \"parentID\": \"B5dC2eADd2CfA4B3Adb1deDCDa50Da963a2bbCE3Da6c73bFCC0BFBAE577B6aA7\",\n          \"publicKeyIndex\": \"<integer>\",\n          \"timelock\": \"<integer>\",\n          \"coveredFields\": {\n            \"wholeTransaction\": \"<boolean>\",\n            \"siacoinInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siacoinOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContracts\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContractRevisions\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"storageProofs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"minerFees\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"arbitraryData\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"signatures\": [\n              \"<integer>\",\n              \"<integer>\"\n            ]\n          },\n          \"signature\": \"25B939e76C0FeDA8e9B7fc4A762aC1CdD0EBdc05F406Ea1a8fad0efE3f75a5fa\"\n        }\n      ]\n    }\n  ],\n  \"v2\": {\n    \"height\": \"<integer>\",\n    \"commitment\": \"B55A32EEBd476E527e1542FEAbcE005EE214c2c2cFDBAfE63f3Bd5a1B1e1b196\",\n    \"transactions\": [\n      {\n        \"siacoinInputs\": [\n          {\n            \"parent\": {\n              \"id\": \"705fC5dD8E5C44Fc9A5FA8A7FbAf1C3b848e91BCfEB3ed22F827C440Bec66f3d\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"3aC5Aced0dEc1386D6FdB5edf61eDe69BAe2269EbBda53D28ae2CEeB2158abF1\",\n                  \"D77AcAfB5737ad38cfFdB8E95C87C961b327EA3CA45AFecBcbB52EbdC82A8b5E\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"79300\",\n                \"address\": \"b2ccD5c33B2a8DC6E5B22f3cD86D88608E0BD3b1dB94CCfAaBCEDdEB2CbaBAeA\"\n              },\n              \"maturityHeight\": \"<integer>\"\n            },\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"ACaAdabeEb13c596649E14ACBb7085C0effaaBCACc02fc392DfF374C2eBdCEDE\",\n                \"A66dE3ADdcC0171BBaf2E1fb8d7CEBdAcd941cDe15B04AAAB3eD24a0fB6fCfec\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"800FBEbC7ab703Df26bA89cCeE9145cF2a778B2cA179ce7a9AEdBfBdBdE9Cee1\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"04B1DC11E09FF5405F4c9bC8A6D36fF2369dcCfabbe0baA46cFc1cbFD3B47dAD\",\n                  \"7BEef3e1Bd85f5E15b08795eBA3fbffFA814EEFe2fBA48D56dF4D1eCddcC0Cc5\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"000\",\n                \"address\": \"2C0ABb03e7BDC2Ead3DE41baD7dbCf0f0AA5538291Bda1cfDaAD5cDcBC8D975d\"\n              },\n              \"maturityHeight\": \"<integer>\"\n            },\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"3F959BecCc7938946AAc311dfb0Fc72bFce0185bceaCFFFbda091EDc60cCaBbB\",\n                \"Fd4eaf2c911BBa30Eb7b62Eed3c159F28DC9C38de68649bC58eedeA8E6aCFC9c\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        ],\n        \"siacoinOutputs\": [\n          {\n            \"value\": \"93420603\",\n            \"address\": \"0E2e8dAd42247B64aBcf3Dd64554276cbEd05fBDDEA7edD409E6Eab1fBaD7CAd\"\n          },\n          {\n            \"value\": \"02518\",\n            \"address\": \"D19fcd5c2D3944D4CD55dD8a3c4282E49DE961AB5Ae8FDD72Eb9f97B4D234B20\"\n          }\n        ],\n        \"siafundInputs\": [\n          {\n            \"parent\": {\n              \"id\": \"2e4CeAf75bE95eDCBc4575Ed1b77beCf85BEbFbdbDBBA23eA1EefF87BBDA69FB\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"Af8Fcad3c9DCdcda7e4c23903C782Ae8Fe6C4fDf8b2AbE4394bCD01775A9c976\",\n                  \"D293ffAFA8BeF7ACbA97AB1Fbe27BD3Eb5b8A3fcC59A90D5a5eCEa53fDe9EE5B\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"<integer>\",\n                \"address\": \"EbE3bE49EE60dD5e8B2Dca7D0E80ADB7bF96b2f6c054efd12C3A3aCb9a123e12\"\n              },\n              \"claimStart\": \"605029\"\n            },\n            \"claimAddress\": \"dBfe94c98DaEcdfCa50a5A5e751dB4fB7bCC17Bd4fB70FBbaf9833cA126090f5\",\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"FA737f0C7fA5e497E37d8aBdaba8C5683370D89219bca37d7b6DDCfbcB3C520a\",\n                \"fEcaFB074ce5d11fA264ff3C7B62eF860Fefc0d745c0911AAb12123FDDDE75b2\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"Ffe5e7F1Ffb4e86d1d06941Afd829D69bdae59b4eaFBEFbfb2e348ff91abD90B\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"AFF1E6aAb95CcF6B77A4aFf9C5CCD29823edD6Cd275aEeB0feEeF0CfF99cf25B\",\n                  \"16d8065C4c66501e8ABaE672A173df75b576AfD8acCf5Bb5E7C58DBda1aA8BD6\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"<integer>\",\n                \"address\": \"A9E2eC7C6322dBaDCcDd743639122717B25cE7c10f3600ca9cE22B4fF77cAbCC\"\n              },\n              \"claimStart\": \"231063\"\n            },\n            \"claimAddress\": \"c23fEC5c09f87235dDAc07aC7aD76f4A85FBfBbdf25e6BEaBc49c0a82dbA2fab\",\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"11323A5E5D5AfC9688D76CAa5F8Ce128FB643EBC7d1dA6B125AbadBF6BA500fd\",\n                \"8FfCa2a2ecFae635dAa855f4cdeFaabCa8Bd0AF8baBc6F4ed4BF7FdC7dD5E49e\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        ],\n        \"siafundOutputs\": [\n          {\n            \"value\": \"<integer>\",\n            \"address\": \"AFA20cF54596CDceFe00e911a84dcfc2DfefaEDcded8475DBbE41DCeD6b69Bb1\"\n          },\n          {\n            \"value\": \"<integer>\",\n            \"address\": \"d70b1fa50eadddac35d983a0BF47cD8Da1E2ce200A7DBC55fdA7059cD03fE5e1\"\n          }\n        ],\n        \"fileContracts\": [\n          {\n            \"capacity\": \"<integer>\",\n            \"filesize\": \"<integer>\",\n            \"fileMerkleRoot\": \"0AaD9fdCaCAc2CEad7f61787CA2cEBef01C072b050Bfd3eBbf6d5388DaB57fEf\",\n            \"proofHeight\": \"<integer>\",\n            \"expirationHeight\": \"<integer>\",\n            \"renterOutput\": {\n              \"value\": \"223018\",\n              \"address\": \"417cBF4F19AF2cD3ceCFE618BcbA8b7cda46A76d2C1e0E1A49A8D71AFdd2A1d8\"\n            },\n            \"hostOutput\": {\n              \"value\": \"63234\",\n              \"address\": \"62cFBBca1651EdFE0d81fec9FB554fFA9fE3Afc5EF4cE6EaceddB2F7E74AE70C\"\n            },\n            \"missedHostValue\": \"8766394\",\n            \"totalCollateral\": \"4\",\n            \"renterPublicKey\": \"ed25519:fab12eCBeECe9eAAB42ECDc640b2eB8a0e048f7f2bB6d0b4Ff53C0bF482edD89\",\n            \"hostPublicKey\": \"ed25519:8aD848AB6FaB29a70BfFbdeDB6FEAa2EdC6eB56E81BEe935d102E6B1C4FE052F\",\n            \"revisionNumber\": \"<integer>\",\n            \"renterSignature\": \"3b857660F4517C72CEDdCE9D7E86b6bdAFDC1DaFf03A9C3dfDe6A0B0C9B0EFCC\",\n            \"hostSignature\": \"eabAE5BEf51C0c1256da91C8506e1CFDeefA2B25939fE5fEeCc560ddE04DEFEf\"\n          },\n          {\n            \"capacity\": \"<integer>\",\n            \"filesize\": \"<integer>\",\n            \"fileMerkleRoot\": \"CCDb1ab48FeaABd1D4a97819Ed1a8eE28f0e8E7A4AF8DeecABA16dfe6dB9A2e7\",\n            \"proofHeight\": \"<integer>\",\n            \"expirationHeight\": \"<integer>\",\n            \"renterOutput\": {\n              \"value\": \"50\",\n              \"address\": \"ffdfc0EEF57d9df4facc33Ebbd7FaE7beCc2f032DDE18009cd8c97eca6fff7A1\"\n            },\n            \"hostOutput\": {\n              \"value\": \"79\",\n              \"address\": \"6C2adb65c301D60c0E84065D6C0493eAaeD0723e1577B394cefea9EaA5d9b975\"\n            },\n            \"missedHostValue\": \"4846025\",\n            \"totalCollateral\": \"5566721628\",\n            \"renterPublicKey\": \"ed25519:170C46b0Fb44e10C20D6Ba82bcdbf3DEa4f2d8E7bcd49F7EEA6dBE3cdDD6eA4E\",\n            \"hostPublicKey\": \"ed25519:3ffd0bc3aEdfD5fCc70BCb5fc10e05555cBddCb79abfe32eFA20Cd71ECafaDF0\",\n            \"revisionNumber\": \"<integer>\",\n            \"renterSignature\": \"6dc85a2B8D60fA860798a784360aCE616ebE1A5BcF7BA5bb6Fc64c39FBA30E4E\",\n            \"hostSignature\": \"dba72a7e3560C82F29541D17dCB7FCcEa0a53fE4eaE723b93DFaEC3b482D9fF2\"\n          }\n        ],\n        \"fileContractRevisions\": [\n          {\n            \"parent\": {\n              \"id\": \"fcid:17473FCEBD2eeFDad8F265B4843A4cF9BFfABA9DC6e9AE74Fb7583aF6AFfE8A4\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"FEe1d75F1557ACCaA928EA0dc0Caab36dE70EBE4430A3dF8A7f4cfF9422f533f\",\n                  \"0e71B3C3192cd990356D893a50adccA6B78b9CCb07dfdEbbF3BF12d3e09b62E5\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"CbBE18eb4AE059BAab29Ac3891Debe3a774BE28EcEE73e849FDECfbdC76F6366\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"8111252673\",\n                  \"address\": \"D99b4Bb30AC3b34DcAD3C0DFD4B4f871ba1De90b4e084eEBD4DaB962caEA4CA3\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"20\",\n                  \"address\": \"1cDCdfaAA190871abC1a9DfAbCacD31bCcDE46596d2C1dcccacCFC2dd2BbBDE1\"\n                },\n                \"missedHostValue\": \"57\",\n                \"totalCollateral\": \"704377\",\n                \"renterPublicKey\": \"ed25519:Bf60fe9b4fcb62De5Bd9a0aCE87Ed5a0d5aadd76BEaeee46398E23e0eda9B17b\",\n                \"hostPublicKey\": \"ed25519:B907b1C6CedDFe6AB47F6f8d5309cd2f00af65ffA67c91807E6b93939892F8EC\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"A17Ad9c7DFBdC84cfbDeaE397fB5994ADFdDa1d6F11f2F4c465e8240867Eb712\",\n                \"hostSignature\": \"4B0767ef0E5fb1AD9F2fea4B01ffaC10a733B1aeFCAD9DA10d53B2bB6AEaB85a\"\n              }\n            },\n            \"revision\": {\n              \"capacity\": \"<integer>\",\n              \"filesize\": \"<integer>\",\n              \"fileMerkleRoot\": \"CF2bad7c6268630Ca523e43dB92781bDb8DfdBDcD93bfa6439aAeD1a2eFC9cFe\",\n              \"proofHeight\": \"<integer>\",\n              \"expirationHeight\": \"<integer>\",\n              \"renterOutput\": {\n                \"value\": \"30041237766\",\n                \"address\": \"7ECae785F75Be2Cd8D8Fb5D7eDAAe8F94AFf4e6F0afCDEF7F505FDBfce3FC9F0\"\n              },\n              \"hostOutput\": {\n                \"value\": \"59\",\n                \"address\": \"bbae59A7255B3A88a9dfFadF6Fdc9adF5dF6F1BDAaA380E3d11BF27bD309522B\"\n              },\n              \"missedHostValue\": \"8311381261\",\n              \"totalCollateral\": \"3836\",\n              \"renterPublicKey\": \"ed25519:BF7D3ecfBd1a68Ed3c08EbeE489b5B0da84a86f4bC37d4cB8F6c8FF598fe9dbb\",\n              \"hostPublicKey\": \"ed25519:0aA06Df5Af14033dE6a292b50036DcdD16C9Fb3ed5A5B67F7CceDffa8f6ee47C\",\n              \"revisionNumber\": \"<integer>\",\n              \"renterSignature\": \"0DAAF5A99E623fD88f9Ee1aa0BE9c1a0c5f17D66AfcC48EaDC7A2a3089a8E5Fc\",\n              \"hostSignature\": \"E1D856bBFceAA51d8aBc2843DB101d278585DbbFe99E4E4539EFBa9c3bDeEC5A\"\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"fcid:0ADaF4dCEA91f3ecee27a64c2d0afB0ff81B0c500a3CCEbb28FCFB84DdcAb8C1\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"2A1634bd3f7468a4CF7da0386301f4c52fF7a1D3e9ab1BDb01ad499B34f8eB04\",\n                  \"6abee36eFe2e7bdb591E5457E35dBB7d0Fa9DF3336fdD093a6ACDCeCe6880866\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"68F3CC5DBE2fEaC36fFA3d34ebAd5CAD0faA44Bb55Ec25EBeFff3bC8B4bcfe83\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"032863901\",\n                  \"address\": \"f5f1f93C1d3948a1401cBD1dA7C90e51aA3bC799DAA416b2badC6cbDD2EC924E\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"771933\",\n                  \"address\": \"B7d838ceD5dFC8fC22d1C47BE1BD5f43c067BC10b7D1e7CE552c3F3213CE0FAB\"\n                },\n                \"missedHostValue\": \"587\",\n                \"totalCollateral\": \"32959\",\n                \"renterPublicKey\": \"ed25519:4b7DcBD2BefD9cF3F2e5feFe9DD72Fc79DDBE05cBb6FDaEcD714d04cbF9Bf0e9\",\n                \"hostPublicKey\": \"ed25519:DE2a1Fc11Aef446508d40E0a245F50DebcB6084daBfFD96eDA4BCCAEB779d5f9\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"6C7660399D3A1bA27E2561BDDfaCAefC4B20Ea0caEe0ebEF3BbDebcBEA7fbFe4\",\n                \"hostSignature\": \"6B1Df1C3057BFE7E9A625E23A8BB43948E59f0E6db6278Ad665FBa5B6772AfdC\"\n              }\n            },\n            \"revision\": {\n              \"capacity\": \"<integer>\",\n              \"filesize\": \"<integer>\",\n              \"fileMerkleRoot\": \"Ac89CedD6ae15AB9a06eCBe42Cd9AC891eEb21F1f195cD8bCBf6E00FEf4ccfde\",\n              \"proofHeight\": \"<integer>\",\n              \"expirationHeight\": \"<integer>\",\n              \"renterOutput\": {\n                \"value\": \"98740639\",\n                \"address\": \"5e6547C2DDFeb6fEa215be5BbD2029E93128ba372490a6E1A2dC982b3cd6CCCc\"\n              },\n              \"hostOutput\": {\n                \"value\": \"779\",\n                \"address\": \"4bdb5cdca9cfD3a606d6ae55fdCE74e9eb92c2Ae9FCf21f6B92fbEca6EED6e41\"\n              },\n              \"missedHostValue\": \"95075028\",\n              \"totalCollateral\": \"50\",\n              \"renterPublicKey\": \"ed25519:515DCc3cd1FCc02e5ffc881Eb26e7F8B8E9BdfbCCa4a5a0Aa8FFcaE75477e82D\",\n              \"hostPublicKey\": \"ed25519:DED2DAb75AAcE51Cc5B5Fd5eCcB4FA207C992deCCbafd5eefBaa3F987d7ACc09\",\n              \"revisionNumber\": \"<integer>\",\n              \"renterSignature\": \"EDCB1e7b7DEfAEC11ae8422c419afcbFf7eeCdF982A2d65CdAECDDc5Cd14657B\",\n              \"hostSignature\": \"79aD4Cc9d5cd3c13deE25AEFc9Dd87EBAbfaff4AAd446bD692F6EcDbce5d46ac\"\n            }\n          }\n        ],\n        \"fileContractResolutions\": [\n          {\n            \"parent\": {\n              \"id\": \"fcid:e9Ae35BA0A7B12DBFaA7d4f7153a6ff7937fFdD07A0cf897f96ce5EaCdf7C4b7\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"fcB26aCa5D4FfBb58eF0cF0c3F6da33637aDc1cAcc2a7B6e09eAEac8DD696a47\",\n                  \"B0e644BcdE47B39de008e3A71CEa76a2CB7a96dFd7D53EAA1A90CAb346FaaAF1\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"DD003A8d24Ae57D3AEBc3AB53D40DF095dEbDFa36EBB77E936DdCB87CFC5fbef\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"28\",\n                  \"address\": \"9Dc231a4f2b075f1769a7cAebB853EE5341afaB7BD03820aA2FEbbb6BA52ADe1\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"00\",\n                  \"address\": \"641c0b1953Cf4B0c2E2EdaAaD00FD87565B2F7E30BfCB356fc71133BFeCD1caB\"\n                },\n                \"missedHostValue\": \"1425976521\",\n                \"totalCollateral\": \"378957598\",\n                \"renterPublicKey\": \"ed25519:C8ED1dC6d7a0CDC9B21fcF98daEBc7Fe36d43daE8bE696686aDBD52bdF597EFC\",\n                \"hostPublicKey\": \"ed25519:b4DBA959DD2BCBE6EbC16EabD2aa099D573bcbdCb771beA5FAEa2ED41Df186D6\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"759dD6aa569Ee948AA5afF4c09cffE3abd46DC0CBd036ca5DafD425DfAB47B2b\",\n                \"hostSignature\": \"aF9DB0fF7aEB3A7d50700C0fb8AC0c4D2b55263DDC119084faEBfaDC72FFD9de\"\n              }\n            },\n            \"resolution\": {}\n          },\n          {\n            \"parent\": {\n              \"id\": \"fcid:AD9AF804e2dDdF3F0DbAfc677084a84D85Fec45Fa30e8b2eE6dFbAA77F25c1fD\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"45EBCE20E63cb78Da2341a9aCB103CAF34b62d4D4fc6edeE9ebBDE9FeB5D7fc8\",\n                  \"42aD46EabaA5ECB9bf5bB2FB3ee89B612d11143Bc2F57d9680bAAc6CDbcc95C5\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"48dB27cFEe0b101E99B4c24c605fFB4DcdB6ACCB3027EE576FDf53AFADE69e68\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"762\",\n                  \"address\": \"BD7f3fB72Cf9eeFfDBbc977e09DBE9C0E7a982C1D7C168f4872ADf7f985f69A0\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"98573103\",\n                  \"address\": \"8Ed26Ed43F2Bf5Eb6A2072Ca8CE0a62e922213e9F73C2e5CefCAEF17AdC3E8F2\"\n                },\n                \"missedHostValue\": \"2970134374\",\n                \"totalCollateral\": \"7065\",\n                \"renterPublicKey\": \"ed25519:B1c9Fa49Fd80a7a03af2E2c13dF51052EcEA235D4d9a2D6AEDb0635Ef2aDEbaB\",\n                \"hostPublicKey\": \"ed25519:973aAf446AeE8e7c9E6B1D8a4b1FbA411c0eEBf7af88412EdFdd9bF6c541bA84\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"088B56AeD0A6ab6fdC07EFBB48aeDd36c3eE279bbcdAAFf70fd6CCF6DFA3DEA6\",\n                \"hostSignature\": \"1EEF4aBb6dBa0ceeBf3bE52001CA8d552e2ee9CcEA5bFadDdEE2Dc44bb67DcfD\"\n              }\n            },\n            \"resolution\": {}\n          }\n        ],\n        \"attestations\": [\n          {\n            \"publicKey\": \"ed25519:F6Ccd32906F1BFB4fF2AFddeaBCbACea24e9feD61E9D6f1aDaD16341fE3EF49c\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\",\n            \"signature\": \"6eC5c1F31AeEa556414Dd8Ca4bBEcd05EC4C9e1Cd8D49C70AfCe29ed46D90226\"\n          },\n          {\n            \"publicKey\": \"ed25519:dc2d64b7f01422F6af457018DE6edfdddB91629da9a0dCD94A2F5BD2EA3ab7EC\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\",\n            \"signature\": \"fAe1c0Ee29d923e1fFFf2ac8FE20FDEC98fE8ed3Bc6B3AdBe8eD2F6321E1B234\"\n          }\n        ],\n        \"arbitraryData\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"newFoundationAddress\": \"8c9519E57C4BFdfFbB09b16EDc257Ec13D66A6a9fC4d2e48982a1CbF4aBd89F4\",\n        \"minerFee\": \"89740602040\"\n      },\n      {\n        \"siacoinInputs\": [\n          {\n            \"parent\": {\n              \"id\": \"D2C7A2cbE8BCFdDf5aa72a7a8cee1AB3472baec1f5DE345E5ca998D81aADa31F\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"3cf1C38689eAEcFc4dAb84bC7b3393F33C2c4d990DA66336E3E3671a4DcdfB1B\",\n                  \"FFAd9DB99cBe74bCA37A7Cf51d5bD4BC3f64CDD83AC82889Df70aEbEF4e9c818\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"326964\",\n                \"address\": \"BDfeF8B41cA8FFF9Dbc3192eA50BF6e3Ad85631c817ceF146D6826C58b3c810C\"\n              },\n              \"maturityHeight\": \"<integer>\"\n            },\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"6A7cc215BB4ba7DdBA0EA6CCcAaC2E19BC36394Cd50D2a97fE2bAab98F4B00a4\",\n                \"CC59a1EdAF961fAd26aDA6ce5a45E79cdB1fAAD1E9Ffb9ECc4ef22EC71BE344c\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"cEeABbd3DA55Ead5Dfe21B2c58DE14f2c6E0aEe6ca75DacE07ef9D7AaacF03CD\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"0F4e2fceef538CBfCB5DF5947d9A09D5c8B2ffE4AE5e04AdcBeAadeCeA2Fe6aE\",\n                  \"1eDc9eda94a2CEB70182eBf1C35ec3BC9bEa57D1219ea7CFb54F987EeaA4A57f\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"1819061847\",\n                \"address\": \"DAD78bFade9E3a0BabCb8A48dF8cBaB076A35fD2492E9Aaa9DDcd7b3dF62eB3f\"\n              },\n              \"maturityHeight\": \"<integer>\"\n            },\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"9bEDcdb0Bdc0fBb9ce058317a6BCDBb3E85F0DbcA8Cab65878d16b3F7C62A3c9\",\n                \"f24eF831C8ee7F5bA4e00d194ddC2f2b31591f35FCeeA6fee128eCAD6EeF91a2\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        ],\n        \"siacoinOutputs\": [\n          {\n            \"value\": \"59\",\n            \"address\": \"14D6F2e215b0eAF9b620D54CBCbF09dec94A8bDe58B64C8Cf0EF0Ecf68773Ecb\"\n          },\n          {\n            \"value\": \"79623866368\",\n            \"address\": \"0b9cee2abBaDbd0bDf7cEB9aee83026F3e88a6389066cF8286DDb4d2d28D96Dc\"\n          }\n        ],\n        \"siafundInputs\": [\n          {\n            \"parent\": {\n              \"id\": \"C46ac66Af77BDaF042828aFaC6ead0AA3DA89CaD8C39fefcf3d8C9aB221de29c\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"9486f0E9b7F3086Aa99ffdD3CDb06aaBa1261B5dDFa18ebc6eB8d67F2fe838Ad\",\n                  \"7226aF41db57F7C5BbFfF31673ef1E4bd459cDF9533Ad40aB6EBdaede124cBe6\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"<integer>\",\n                \"address\": \"4b3Cc70879EfEB6bb3a94bC311C3dECeeA9c7AA53c94beAD605d0b70B9D360F8\"\n              },\n              \"claimStart\": \"00026\"\n            },\n            \"claimAddress\": \"7e4Ec5dCe7AC0ded140Da1CFa6d7e8B81Eb48D6EdE37eA7FcCd69ec3cbBA12a3\",\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"199CbEf5CDDA9bf2BaD8FC394148dD5Ed371E10Ea9DbAaf10Dc5Ac55Ef80ccC1\",\n                \"cFE99D6fDfCFa38c2CcEC23beb4e2A5fEaf7BB756618bf1cBC0aA6CDFBDFCf6F\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"8BccFD30D7F7CdaefEbC9CB0DD89Df399d616cc81ACa8D5abac5acD237B86afd\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"bda35f2dceA18de64BBfFBE634c74CbCB577d0e43112Bb1b63ba3a533cE0a5aC\",\n                  \"97dD0872aF02d3df72Fd1FCA2eed58Ce5bDBE0fa34acbb0735098Ef66db3f4F0\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"<integer>\",\n                \"address\": \"049FcFAaB0E7Db8BD9FEA8c8b2f3Feec2bf42E090Ac1E2ef483139f573E6Add9\"\n              },\n              \"claimStart\": \"38178731663\"\n            },\n            \"claimAddress\": \"00Bf8BEb93A2Cf4FCef73ba154757F73Cbd2E2927cBC80dC74dB4ed66a2fbdc7\",\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"BFCc2bD18cFFbFC0DABCe760d046C4EeBaAA1BD22822e32e4bA9C5CEd598F4fF\",\n                \"e4d9eF2AAeDfa1e29CfD4553E6D389A199b61efdDFc03e857cC58fc81DeDF603\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        ],\n        \"siafundOutputs\": [\n          {\n            \"value\": \"<integer>\",\n            \"address\": \"bc5Bf1CD399163510AAe0824c0CfF01B2F44DFdD0Ac13cD463c27c7f7D88C37A\"\n          },\n          {\n            \"value\": \"<integer>\",\n            \"address\": \"134EaFDCfC54f5dB7148A8bFD6a73763e42fC6Be7ef1Cd51f95DBFDF85fD4Ac2\"\n          }\n        ],\n        \"fileContracts\": [\n          {\n            \"capacity\": \"<integer>\",\n            \"filesize\": \"<integer>\",\n            \"fileMerkleRoot\": \"e01Ac402Dd7C1cBacf9cBaEACe7eedfA33c7DA5f4f3Db30efEEc3edf34Dd1904\",\n            \"proofHeight\": \"<integer>\",\n            \"expirationHeight\": \"<integer>\",\n            \"renterOutput\": {\n              \"value\": \"821776\",\n              \"address\": \"9f917ad6ebcF56fbd583F0A8194Af5d8Fa0c7a3E75ED4B8CA85DD2Dce9EE5Ae5\"\n            },\n            \"hostOutput\": {\n              \"value\": \"3028\",\n              \"address\": \"2e81FBC59e7ab4e6D520ccec19C15776FdAd66FfFC74a3865E797DfCF2BAc0D9\"\n            },\n            \"missedHostValue\": \"34\",\n            \"totalCollateral\": \"50627\",\n            \"renterPublicKey\": \"ed25519:EcaBc589DfFcd0AbFc590C29740FD010Fb07F04BE3249BB49F5B1B6E5e2bdcaE\",\n            \"hostPublicKey\": \"ed25519:90F88fDF854Dd791a3B859Ab9bE73461533BeEBbEeeef1bdd2F259Acdbe2E7Ae\",\n            \"revisionNumber\": \"<integer>\",\n            \"renterSignature\": \"1297A6FDACB24D4a2502F53362B46A8583f2b5BBEe3c3eDcfE6FeA62b95AdcFa\",\n            \"hostSignature\": \"0D7EfFB015d0A185Bd31C6DaD44D00C75C9f4b737b8B750aAc3aF24924aefeec\"\n          },\n          {\n            \"capacity\": \"<integer>\",\n            \"filesize\": \"<integer>\",\n            \"fileMerkleRoot\": \"F12C5b876eeB4C5297b4DbFba080D6eA8b43FB0f57B18ddEcDA41016e2CF94AA\",\n            \"proofHeight\": \"<integer>\",\n            \"expirationHeight\": \"<integer>\",\n            \"renterOutput\": {\n              \"value\": \"79\",\n              \"address\": \"24d5189522049C1f8C87A3f2AFC1dBAEBaF7DcaB9bee29BDfA89EEae3E2d076d\"\n            },\n            \"hostOutput\": {\n              \"value\": \"483112\",\n              \"address\": \"BA7e1F467FAf3feddA1349cbd86fa1cFffBd3c32E1C8367da27d565943Eb93ce\"\n            },\n            \"missedHostValue\": \"889428314\",\n            \"totalCollateral\": \"062\",\n            \"renterPublicKey\": \"ed25519:c698Dc05c82b7e8edbC8Cb5c5DdebB4FDFC0f1B3FCa67b3ccC7F64aBcD75665B\",\n            \"hostPublicKey\": \"ed25519:44a0CE8B8Bc82d0aC4Afc3382970c59aE307F21caaaDC2868A4f8efDd95bd8b2\",\n            \"revisionNumber\": \"<integer>\",\n            \"renterSignature\": \"21F69FDa8e9ca4e47bcd1BBBe3c18bbb9deD40EBFDFC645b4c5cdbD37F2cF80D\",\n            \"hostSignature\": \"fcED0fCfaaF921e6FF342603fBA4Cfd6C29C33EFc3E2cAF341e84E5CAde4c6c1\"\n          }\n        ],\n        \"fileContractRevisions\": [\n          {\n            \"parent\": {\n              \"id\": \"fcid:D0AacD5dbA8A149938F0a72CFbEFafb4ADf8DEd892c60f8DD5ef24Dc0a83e0FE\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"A272E95CaCBcdc1DC9E84dAAEed85F6a04dfCEbE1E6fA9df8F2Fe43F3Afc2Ca1\",\n                  \"75b8B3b104f10c8d1BD898E5763cfdEB0CCfF21abeFcFaB0c6fAA4D0d9Ea9ad4\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"59eA2369eb425dDCB0Ece003Bcc3aaDb02ce38cbafEdC98B77CCFa394F452eD9\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"57046656\",\n                  \"address\": \"e0c7AB3A6F3Eb0aE1DdBe504F6C6aeBB4eecCDfBF677eC204aFFFD8B27F0B07f\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"21395\",\n                  \"address\": \"f3d5F9dbeBf2E0da08A93facdCBd8c4Aeea24f23d8B4EC5bc703Cb7A7FF9AC9B\"\n                },\n                \"missedHostValue\": \"359\",\n                \"totalCollateral\": \"8709\",\n                \"renterPublicKey\": \"ed25519:EDfEdD5D83d987DEF4B73E4AAF4b8bfbbAe72a3974CE7f932Dfd5B0ab522a08e\",\n                \"hostPublicKey\": \"ed25519:6615d347cfbe9d640d2A4AD05c1Af8cCC1cecB0Fed5084a0fef4e9c992A15A2a\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"b1edCB182948af96B06DcEf040D9567B204e6E8E337B3ea8ADdD2cF19C181112\",\n                \"hostSignature\": \"Bbc6d45ce88D132e6591dB93d879Fcb0aCB384c6F9fEE0C37fc4EaD764da530b\"\n              }\n            },\n            \"revision\": {\n              \"capacity\": \"<integer>\",\n              \"filesize\": \"<integer>\",\n              \"fileMerkleRoot\": \"3aa5E801d60cbD62dEFaF433bbBF4eF781B8C296DDdD9E62D59E4b57dfEfA5fC\",\n              \"proofHeight\": \"<integer>\",\n              \"expirationHeight\": \"<integer>\",\n              \"renterOutput\": {\n                \"value\": \"685961149\",\n                \"address\": \"0e34F0Aa57ca2ac8FF40cF5206Bc3C1FB82c521CFee7Ba23f9c5FB333069BeEb\"\n              },\n              \"hostOutput\": {\n                \"value\": \"286799\",\n                \"address\": \"bEC1Ad1f68bDbC5EED7c56bAEB53cBCaBacc2D77131aE1DA122e3D4bdC6B169F\"\n              },\n              \"missedHostValue\": \"5127900235\",\n              \"totalCollateral\": \"92123735506\",\n              \"renterPublicKey\": \"ed25519:cc8AdC4A79a8617621fCDFDB4c312B7cA76fA36EcAC3b6816b188FdA919AefAD\",\n              \"hostPublicKey\": \"ed25519:F8Bcf4de4cAbA190176dE6fAE5d68ffb925Bf98D4AAACCF5BC6e98979fBC8BaF\",\n              \"revisionNumber\": \"<integer>\",\n              \"renterSignature\": \"0dFD1BbAAae70a00af0C7d3ebF1Fb3eb14F9fa8cBAEBAdEdAedde62A20c3FAb9\",\n              \"hostSignature\": \"5992C72d5E61dda2e2DdFBeD9d76B6ea2eBa62Adb0Dc36dB15c1c55Ed6CcBAdb\"\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"fcid:e805b130f218eceDDAfE9ce5ae7c19A606fFb3AdC2263C0Be5cd0eA56D8CEBA4\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"71f6526fbb18b1af84Ab5c5A881B0A49e4AAAE9DD4EBdd30872eBAAAccDba55F\",\n                  \"1a588AAed0De7b64daEd03bE0F7Ac8fE8eAf1aaa4FB9f059422Bc5aE45Cbac7A\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"D09b392cAcaFfF33A0E25188fA21bC0b1feBe1f3a218225144902d4126f117bb\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"67\",\n                  \"address\": \"e1A8B8B0E17B455CB0B2Bc6AcDbA35eD2c43dc8a80c6381dFf3D5E3B92455f8D\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"6\",\n                  \"address\": \"bDb7CAdBe8742d66F70dedAb7a1a3ce2D3d52d36381bb17bcB7d44d75B1bfCC8\"\n                },\n                \"missedHostValue\": \"697640\",\n                \"totalCollateral\": \"1\",\n                \"renterPublicKey\": \"ed25519:9aCbf6fBc8E38A2Fb8E628E5032e9A8d4C06Bf37f3D16CcC3e5eDe8256EC48AB\",\n                \"hostPublicKey\": \"ed25519:Be41Ac3B9F2CdFfE30FdfbcE00CdDB6BfDAe9CC4DD1078B91DeD0ac81CcdFEF7\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"58Da3c27AFB93897B471275185B7F95c5dC00ff2b3Bf1bBdBCaCFEcd99eb7Da3\",\n                \"hostSignature\": \"dD9fcA20D2E8E932C8CAf825CD6cfACE38E095BFC78dcDfadf8C98E43A2d19AD\"\n              }\n            },\n            \"revision\": {\n              \"capacity\": \"<integer>\",\n              \"filesize\": \"<integer>\",\n              \"fileMerkleRoot\": \"9030d449AB4835f9A911ced2D644A28cD4aB6EFF99Fbc6a2edb53FCAfEb053e0\",\n              \"proofHeight\": \"<integer>\",\n              \"expirationHeight\": \"<integer>\",\n              \"renterOutput\": {\n                \"value\": \"5374425627\",\n                \"address\": \"BE7CB0Ee9F4adD8d6CC7E6EC99ebd786F72b1c9D23ecfEFB5daFd7ccEdAB4d06\"\n              },\n              \"hostOutput\": {\n                \"value\": \"54\",\n                \"address\": \"a176F1A1C4DcC329AC817626ebe22C0d3d1e9b98cDc6366BeBaF6Dc90bE3FF59\"\n              },\n              \"missedHostValue\": \"8407084960\",\n              \"totalCollateral\": \"585368679\",\n              \"renterPublicKey\": \"ed25519:8ff0c7C5ee3CC3B2b74Fc36CD5D92FCD204adB8769ce46c016785BfCCdD03ccb\",\n              \"hostPublicKey\": \"ed25519:Ef2E8fedbdeBdf4bccFeEfbba502ECD6dAc8a4CB4D3fc3ad581a2DD0add9F5bC\",\n              \"revisionNumber\": \"<integer>\",\n              \"renterSignature\": \"CAFC28fd4F08CA99A23a7Bd7adf0b5ae1AbcE2d65862b17eEf8d5A03b7c1c81d\",\n              \"hostSignature\": \"E1D17569410FdEfBF33A67C915F2DE3Ae5BA0e28a53D0D9Afe912EA68EFdDc3d\"\n            }\n          }\n        ],\n        \"fileContractResolutions\": [\n          {\n            \"parent\": {\n              \"id\": \"fcid:f163b63eAbC6f6668Cd3E1bcB233B82f20b8863A52cFBaaCeAdABAfeA4f4BeBc\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"d7DcfCa9dA1D3A96a3f11d8B57e65742017e1247d473F0879c26246DAED9a7f5\",\n                  \"D1edccbcCffA5a4D9ec0Bc6a55a91dd9360dcFCFb189CE53C7A53BBCb8Ab1a38\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"9ccdE72fDB48004f758a89CdE0fB17C217Af555FC3cde83B786FCAb2d20FCfAA\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"77\",\n                  \"address\": \"CFc0ACe518fecD3b8EcAaaB57dEeBf5360dae1bA63c408d373cFCeBA3853dD63\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"18\",\n                  \"address\": \"Ca736a75bDBb5dF9EAd40aDCf6E7c7b4be3FFDFA3A3b0a673eCdF4240EbDAa4E\"\n                },\n                \"missedHostValue\": \"0715\",\n                \"totalCollateral\": \"58207\",\n                \"renterPublicKey\": \"ed25519:DcBF3849CffB1380c74fC3BFeEb7d58D1d0E962BC3c0F9aE4b7baEb2AbBa4Adb\",\n                \"hostPublicKey\": \"ed25519:bd3884CFAFF8f33a09bCf2B7bb11D0D7eC8fE6C4553eaa34bdbFAeEE9daeDf09\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"7a73d8EAAd44Ac856086dFbb8F71c18C42d1Ce2EA9f7c1286fe7855C4cD7c4cC\",\n                \"hostSignature\": \"9b65DADE5CFD3CafD14cC6DbaBfF331DC31AC84FCF4EfD5f9BED2b1AB6A0fBCe\"\n              }\n            },\n            \"resolution\": {}\n          },\n          {\n            \"parent\": {\n              \"id\": \"fcid:79F44157DDb809fD5AAC49eD9B6E1B4433b6fFe0BBfCF415EEC5CdAFDd20EfBD\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"cAEc6fb3E4Eb21C4fce2DF734fD902CbA93CB7F44131d6CFaAcEFBeC39acaEEC\",\n                  \"aCbdDa53468ba382A558E3B54528CBDAEEb2D3FE9dE2D0c5A3A9a14772bD23a2\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"CDE7d6ddf46EeaB94ACA86EaDecE6e3f27F798895fA7A97Bccee7D9e64EaCAb1\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"213\",\n                  \"address\": \"B0E9dCea8cA9aEe5b6cF64903bfaDC79ef3B0aDDaAf43a9bFF572A499Dafa279\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"2248\",\n                  \"address\": \"1EeeaBED2dB76A9e550EFdDED62E1aaeDCb5a15EDf45D479c941726c967af223\"\n                },\n                \"missedHostValue\": \"36\",\n                \"totalCollateral\": \"05\",\n                \"renterPublicKey\": \"ed25519:3ecE74812d22bacdb8C7ab5ccfAe50354Ac5e804eeBB220ae8855dfe9BF0497e\",\n                \"hostPublicKey\": \"ed25519:bC1E4a39B4A807cAa112ba6D848A2dCC9A872FF2Bfa0086369FdC96DEeaD164b\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"CB3aDdf5c53C27618D5F08FCe5ca6E00FdF3728FFC0B52df46F968C563C33B3a\",\n                \"hostSignature\": \"49df07dBDD6CcdC9a8c8ef3cEeE520fC11fBc9ceDEAccDA74E2E2623CF3B9a72\"\n              }\n            },\n            \"resolution\": {}\n          }\n        ],\n        \"attestations\": [\n          {\n            \"publicKey\": \"ed25519:AFdc42C8Da2203eF2AeeA4C80BabA5e0ed549cb2fD9Edd6932Cfd2d2cfFAEbCf\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\",\n            \"signature\": \"6eEf62cdCF9fEAb21cDe7B1Cdb8c7d74daeEEA38Da3bEAAEB37dCF0A8e5Bd55A\"\n          },\n          {\n            \"publicKey\": \"ed25519:ED7eB20bFD30DeBf842C92f754B08ebb20D0200A151A57Eb36e784bD7E0bCBeE\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\",\n            \"signature\": \"D54ed79a48b9c0567cd600FCd4a6a87bfE22E347358FB8acf574fE86fc103C35\"\n          }\n        ],\n        \"arbitraryData\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"newFoundationAddress\": \"1FfCc86A2BdBAfF1e2CFC242aF8dDd7DEf50CC2D0c496BC80cFFA53DBC4fb2A2\",\n        \"minerFee\": \"689891\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/consensus/acceptblock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"consensus",
												"acceptblock"
											]
										},
										"description": "Accepts a block from the consensus set."
									},
									"response": [
										{
											"name": "Successfully accepted block",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"parentID\": \"cA7cf65CcCE57D06AcFFD625de0EeBB572cE765c713E30391Ac38C5C71520dea\",\n  \"nonce\": \"<integer>\",\n  \"timestamp\": \"<dateTime>\",\n  \"minerPayouts\": [\n    {\n      \"value\": \"2\",\n      \"address\": \"F5ccCaA63CF84FCee4bEc88d95B0aD9A7B20f01F12dcE7AD0Af935Acebfde784\"\n    },\n    {\n      \"value\": \"14\",\n      \"address\": \"3af89eFdfC5ABcbC430d63Cb72dC26748279fb2aEA36fEb6C00a0024bd47E00a\"\n    }\n  ],\n  \"transactions\": [\n    {\n      \"siacoinInputs\": [\n        {\n          \"parentID\": \"93C4DE95dBAA4F8f0BD9FA31bcC2F25fbC10Ab72FE1FD26ad29D3fdaDE85DE4b\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"F3EaFeB009aa2c5a0bCFaB4DABE2136e8E5Aa30b3a6e8Ce0A7292c9D2dDd3de4\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"cD33Df36302AdCFa85E76054B0942Ca07DEb34c9c43eDda73f54A2e93BCF57f2\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          }\n        },\n        {\n          \"parentID\": \"CaC25EF7C2369015a7f4aD6A64DED06baa5baf202fb48be2A948d06ab5F3a40f\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"8286342A76BCB2eec063bEbE72aD7Fdf353182f9006a8D3a36Ea5793B6aD57b3\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"54caAC369E1f7c6aC90e9D0f6D8B19cE8f0d5e3e791adAe5fb96DfbC3A8f5D8c\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          }\n        }\n      ],\n      \"siacoinOutputs\": [\n        {\n          \"value\": \"590030\",\n          \"address\": \"F0C2e1AcBeF1C58E2A46d10b4D6edF4338458e0CBcCFDEAdEFfb0C663cAa6428\"\n        },\n        {\n          \"value\": \"726356207\",\n          \"address\": \"b81A9E8ECBddCd95b818373e413890d7a1A4FD62FCD59AbCAE00ae56A137EB42\"\n        }\n      ],\n      \"fileContracts\": [\n        {\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"5e84De89B4dDcED67F0Fb03ceeA673b398Cb15b14F2a0fABB7a78BB8e2e1ACda\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"payout\": \"12\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"1681455853\",\n              \"address\": \"4Eb0bf119cA571CCA622e0B7d1F39d6d3dEFC559dEfF4a065cE8fd5Dddd41dcb\"\n            },\n            {\n              \"value\": \"311\",\n              \"address\": \"Ebb0F46CdcfaBf0c0FeD5f55890e08CDb6952ADBfa9cF93f3FeFFc5f1Cc12f32\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"062\",\n              \"address\": \"348424E62b473C915AA3E23FA411e04CDa90cB6F2560BE159AD5BbCD1ccFA6AD\"\n            },\n            {\n              \"value\": \"555\",\n              \"address\": \"aEf10c907D2e0ABECd08c4d5E239bA4Cf6AEfAE5038673dac80E15968b3Aa079\"\n            }\n          ],\n          \"unlockHash\": \"9ed6C37CDEd4c7BbD14d850CCcEa7CAA45CF3fcD2a7aa2438Eb8803bf3cb5fA5\",\n          \"revisionNumber\": \"<integer>\"\n        },\n        {\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"A7ae4302f66f84EDFDc1452B9Dca5ac11eB4dE89Ee1deB6799a74a271a9E488a\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"payout\": \"53739\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"72109056\",\n              \"address\": \"CdDde483c4F72C88eDb3050E6bDA0fA6eb6BDDB56Be8D1B25e7EC2CbA0a37B10\"\n            },\n            {\n              \"value\": \"579811703\",\n              \"address\": \"EBdE4cE0D50fEECd878eFec364dd7BDeED342ea17E9CCF9DfD6a3ec1AAeE96fd\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"0309\",\n              \"address\": \"BCEcd4866d8ae62e9203DCFF4E2c0cdEAB6EEed61Df88C16054CfC653b818b2D\"\n            },\n            {\n              \"value\": \"32864653\",\n              \"address\": \"A6cCcFbFe4Cf9a3f2D31B6CD47941C4dfda8a28e8FCfCe075E7FEf1D08af4F3B\"\n            }\n          ],\n          \"unlockHash\": \"4D4Fa6AF5080eFd58D0368fEEC96f7fE4EfAD5A0a9FEFA6d4f142aCFe6eF480E\",\n          \"revisionNumber\": \"<integer>\"\n        }\n      ],\n      \"fileContractRevisions\": [\n        {\n          \"parentID\": \"fcid:F85dde798E4DbCaca1400d7E6b8758f08adA43e6aFEdf66fc3e1Ec6DcaD5Ae6a\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"0FCcBfB87BeedCAcA23Bcee51eE3285B41AE20B18f4FbDeDcEB10e9eCAd8a44F\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"aFeCBBcF01fFeaEfe7BFA87aCcE64A73aF5B7cfE48544b1C9bBaAA9C4abAa3BD\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"B5c8f53eBf1EeAdAAF3b420C7EE6a5Aa86eDdeCfc69A05cEAc7C2F62F3F76EC5\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"24641553692\",\n              \"address\": \"88739481cbcd81D8E76eAE97cDDFac6911AbedeBfC6d7d6CBDab52DFDbfa0A03\"\n            },\n            {\n              \"value\": \"81\",\n              \"address\": \"C5bd46F1F30fcC9238e571aDccDAf807D89D87f45d5f3C08f26152d0AEd16CeF\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"61779638\",\n              \"address\": \"6BF1D3FcE7bAcAC228c42e405998DA7aFd8FD74bCFeab869Fbbf521Ead2aFACa\"\n            },\n            {\n              \"value\": \"4\",\n              \"address\": \"Dd6AcC629C286c6DAD7F6eE4001668BCDb11E3FF9cb75ddb603e8601Dc84e90A\"\n            }\n          ],\n          \"unlockHash\": \"7640E4694bB60902fF6e4B6Cd6DAafa50Cdde6E4F5CA81F163Edb85Fe8478064\",\n          \"revisionNumber\": \"<integer>\"\n        },\n        {\n          \"parentID\": \"fcid:948CAb021A5d556DcdfedEb4F1611cB3d8DB3DBdFa44FFfefddBbF4F4ac7e209\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"fCa6f404aA27c614DC03bfb4f022F0749C01dB61d2BfeA276dB1FA59B5DdFb96\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"Bcffb00c2db492FF44c419dd1D6bAfD579bE8AdDA6D3D4C3faeFE8369a8E95D2\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"CfbEeEabcCDA35Ab0Db11Bbc0686d7cb2d0EEa6ceE958a5ED03b3AFD0cAAbC70\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"0107\",\n              \"address\": \"7CeEaa7989a032E76fb8F9E476F7BABe7e5ebFfa3a5AccB2BAEDAaFeDf5E56d3\"\n            },\n            {\n              \"value\": \"77588861\",\n              \"address\": \"ab301F73A5CAFBc7ECf7Bc8996959D90Eda6C7Df36b30E72eC3f47FC4Bd43F4B\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"71723781432\",\n              \"address\": \"dcbDDa1aABF48cAb820fEbcE9336b3A22C4CAE5CfcBb0E93c06eCEd7bD3D1Fe3\"\n            },\n            {\n              \"value\": \"103578475\",\n              \"address\": \"bF8d4BcCcBDf655a7e384E7174eC92cd8e613DC62e11eCAAAd03Bfb5CcaFec77\"\n            }\n          ],\n          \"unlockHash\": \"D6ffadDEcED3c3eCA65D8E0604AA064277a2Db7780C85ad2D0695bfddc5ac4ed\",\n          \"revisionNumber\": \"<integer>\"\n        }\n      ],\n      \"storageProofs\": [\n        {\n          \"parentID\": \"fcid:DdBce3eabA6aEC6742EEde6239dEc3dc5FFee0Ea7A4D44c5fd02B8f883dC5cA6\",\n          \"leaf\": \"<string>\",\n          \"proof\": [\n            \"1ad6111DcA7f84a9F4A3FEf7cfa2AA4cbe4cc53ddc0998Aa271050B5Ea4dbdca\",\n            \"df17dD7eE46455C0Fa83b0B3Ff5e9cbf9cce4DFaa719cBcbD63a5e9A487c18c0\"\n          ]\n        },\n        {\n          \"parentID\": \"fcid:93Ee1e922FB8E31DBBEB7866b2c60C253AdCFE4BFaD9bE74058f96d65310dA3C\",\n          \"leaf\": \"<string>\",\n          \"proof\": [\n            \"B929EcdE070BC6fA91308C795FD9c0b1a830cf82dc4c98B1Be7473D5CCb182b0\",\n            \"7CFcAAeA8139ae4ceb5D3C7dB6c9A3b4bB0E5ca56EDcf328f7748B238c59DB77\"\n          ]\n        }\n      ],\n      \"siafundInputs\": [\n        {\n          \"parentID\": \"0B285BfdFEA84901aa8437cA1ADb9e81d8a1Ebc0D78a0406c8AB14AcdAEB4635\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"1BEf84dAd03ADEA5aEDf4961A90ec07De4f6C8bC6e75C0eee5afde1c2DB8BD9B\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"FD159FD1E9F934425Dd7D248D8e7D2F7e3a8E339957C05D1CdC52Fb0AC6d8d38\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"claimAddress\": \"bF666c4297cFCd3b2BEBf44De22B0DfeE5A8B7cae56ccC4E5432C3759fAF911D\"\n        },\n        {\n          \"parentID\": \"C577D9aFBf1eDebb0D9aFD57baCafd27cBFdC45A0cFF271CbCb80cdDa6db3a39\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"3C3bB88aA29dEEEeDde28ba2294fa2572F48084fbc3ebBe1b6FC89eABF83f58d\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"5d67D3cb6d66efF0DD115ca521DCAA807D03eEe83f5C05AD1E9990B5f336D9B2\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"claimAddress\": \"4b8b0Ae34ef5663282bC331d8BC1f18DFc4cafA681615b3Ac2f4dAFcf257E01B\"\n        }\n      ],\n      \"siafundOutputs\": [\n        {\n          \"value\": \"<integer>\",\n          \"address\": \"EF77BCfFBcE74987Dc9757b4D1C4F37db2d3ae5FB685cec70d0AF80A1FB49A3F\"\n        },\n        {\n          \"value\": \"<integer>\",\n          \"address\": \"5cA8F80ec1eeAF2Ff5bCF7cFFFACBAA15316dBc13B97E7CEaE790ebc2DCddBdD\"\n        }\n      ],\n      \"minerFees\": [\n        \"33856493266\",\n        \"799872\"\n      ],\n      \"arbitraryData\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"signatures\": [\n        {\n          \"parentID\": \"aBaB23efDecC0Df2C7dA2e3Cf81cC02Cf34CFD811e6CabEc181D6B6ABbDafAa4\",\n          \"publicKeyIndex\": \"<integer>\",\n          \"timelock\": \"<integer>\",\n          \"coveredFields\": {\n            \"wholeTransaction\": \"<boolean>\",\n            \"siacoinInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siacoinOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContracts\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContractRevisions\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"storageProofs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"minerFees\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"arbitraryData\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"signatures\": [\n              \"<integer>\",\n              \"<integer>\"\n            ]\n          },\n          \"signature\": \"7E91bA2cEb6aCFee32522765d9E1EF8DDeCe43cF7E56acA1B2A62276a12401a3\"\n        },\n        {\n          \"parentID\": \"A24dB8BAca93f4DBAe71eEFA7eb5CCF09ea80c2C71612Ccf0Cb68db9e6A87B1f\",\n          \"publicKeyIndex\": \"<integer>\",\n          \"timelock\": \"<integer>\",\n          \"coveredFields\": {\n            \"wholeTransaction\": \"<boolean>\",\n            \"siacoinInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siacoinOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContracts\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContractRevisions\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"storageProofs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"minerFees\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"arbitraryData\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"signatures\": [\n              \"<integer>\",\n              \"<integer>\"\n            ]\n          },\n          \"signature\": \"14517732d5dfbF27cDC87714A45dBfdd9EC13F5b20DE1Fc2216d9Fbefd88825c\"\n        }\n      ]\n    },\n    {\n      \"siacoinInputs\": [\n        {\n          \"parentID\": \"307ceDcF71A6dA885100fea3FA8B2516D8a33eDf6833fC42de8f06Aa65ecaEe6\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"44C1DF05FfdcEDAce7deBAcd4d11539EcC83Ae10B0e0c5E1bDe3CdE25a9f3ae7\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"5759C77A38f0fafac586ef6f800bB0A1bB6c6fAd06B719AC9147246C90dd27B5\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          }\n        },\n        {\n          \"parentID\": \"495ef96633bB2b84B3c4b28CFB98E2636F77Cdc0b5DdbAcfbBcfEf88af67d431\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"9FaAe5Badf4075cBCBfc15fA2e6cECfEfd1cdD38Ffbe8C0aBE67d6aC38e5C63C\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"eAeECBD30daC48DA874EA13a67DB4Ad41f26Ae7c0B79ca3d37eaEC92ACb3A8B2\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          }\n        }\n      ],\n      \"siacoinOutputs\": [\n        {\n          \"value\": \"8\",\n          \"address\": \"dAa9D04bC9BBaFDaAc8AD19bfCE0B83f6e342005fE4CBbF31bDEA8DE0cA1F6C9\"\n        },\n        {\n          \"value\": \"242870\",\n          \"address\": \"B5A8d0BcDe7f8C335DCc5D764653cE0ea95BBaDd60A96Bd7cdbd84dd9Ea19c8D\"\n        }\n      ],\n      \"fileContracts\": [\n        {\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"1dcDFf4DDbDd149bB17fBEFc3Eb561706AC747C3f38Fc84fcbF9E0Bb3BdCeddC\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"payout\": \"2118\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"295\",\n              \"address\": \"5eFE5DdfcdD1C7B8d9ea5cD15Da8E9987aDf8fBf2bBAd11Dc47DF4fdFB76CcfF\"\n            },\n            {\n              \"value\": \"01996490883\",\n              \"address\": \"88eb5F29BaB179a3cFebEBa8Aac388585d3ef9cEd66DDF5d177D80aCBC54c94F\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"097\",\n              \"address\": \"8A51B7fa5A1c562Bd0e3cb92eF8cAbcE34cD2Cbc9FdB3244B67bF0C4cc1FeE2b\"\n            },\n            {\n              \"value\": \"6081420\",\n              \"address\": \"a47ec46239B579e3C3f4B4FD6df20499dbA2c16Ebe9e02F6CeAe1edF5A1EbD75\"\n            }\n          ],\n          \"unlockHash\": \"0E8dF0f7F3edF5De29248a9aaA8dfe14ced1b5308cFF0a2Dd93ba4ba0C4B8Cf0\",\n          \"revisionNumber\": \"<integer>\"\n        },\n        {\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"01cf7EE51dCd27a57A6C7EacfbAd469f62E8F2d4Ec39fFaE2AdEABfe75eaBf72\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"payout\": \"876\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"61334902\",\n              \"address\": \"eBF546a17FEDfb7a3eC2aB8c075b543EcCB20A3BEB85D502CE4Fe9b5dAEd9fE8\"\n            },\n            {\n              \"value\": \"2841807382\",\n              \"address\": \"c215bbd8FE1EEB1C43C9DdC3e43831242c67F050C9aCf78E08ba637A1Cf41426\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"13388874\",\n              \"address\": \"9ef2F4AFCCcfA45be8edCfBCEe25e72ff7ca6E7A7367E52AFEDbCce00e0CBA16\"\n            },\n            {\n              \"value\": \"65645918322\",\n              \"address\": \"B429DF29135d2Fe24227aa0f4288fA5d85Aab905c6DA2fBd1d8BaD84a908fDab\"\n            }\n          ],\n          \"unlockHash\": \"D7CdfF3476ABf0ad7626ad37E03A59d4Bd4c50AC0D04FcBC4fA8B9aBc811fD0b\",\n          \"revisionNumber\": \"<integer>\"\n        }\n      ],\n      \"fileContractRevisions\": [\n        {\n          \"parentID\": \"fcid:6fF33bd5e7ebc6B3A9Adf290cA85ecc8dD9813c6c489b454A0b4a6ddC4DD8f2C\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"eAb14BAD1A68Cb0F5EE4cEc99BfB5518CE7bec07e952e4ef8f506DB35BdF4ECf\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"1bD4d9EcC8f3Eff5C3A20aD6EeA2BACF9f824E9BDaC5ED13B69d0FE59CCcDb0c\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"B4BfDd2aCAD31AEa62d7dCe4aDB3CCDBF4A02157bB8dDD11B2955EDb4461Bf1b\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"683\",\n              \"address\": \"333412A02A771170B8a1bcFF9D4066e5CC517D8e5ea5D00FC37d137A29fea3F6\"\n            },\n            {\n              \"value\": \"853995\",\n              \"address\": \"dc21E28cB4C0403EE1F5d27DBe449adD4E5D43B85864765EfA3De8aeDc8d2464\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"42925\",\n              \"address\": \"1FEcAEF0CEB2885Bbc35fD23dA8515822976Fb1C8e755Ca54a1e49F33277834C\"\n            },\n            {\n              \"value\": \"20312098357\",\n              \"address\": \"CD8dBE258Ee7bAeBEBD9b89a64dBC1eb5Bbc95fD6dFF1A4Eb0F558455aaCFdE2\"\n            }\n          ],\n          \"unlockHash\": \"e9755C12C456De0EF2E0C892AeE35F84d7CBe26041A83DcEdefeF46fe3A8A32D\",\n          \"revisionNumber\": \"<integer>\"\n        },\n        {\n          \"parentID\": \"fcid:BEEed24b2357b988aB48ed4E6c6D2dA4CaddE62FcF834E4BCA0C95C61C0F0Fc1\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"1A0F8BB60E66D1C331BF8b5c793fBD4E8eeE45ca3E1fE8AB52cf6ADBe755be70\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"26d27ac503Ece4A476Af24a2DaabECbAdf0dedFA4AFd7Eb6b2D7bDdaBAe9bFDc\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"a7475aE21190EEa3EF3A97a09eE70aCfEE082efa0Dea974DbacAc7AcB34B2c5B\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"5890\",\n              \"address\": \"3BFdF4cb37382c7144aEF994C82f212F84531AfaaA7820a86DFF75147DB786f4\"\n            },\n            {\n              \"value\": \"01\",\n              \"address\": \"BF261cDa9CEefb5693290DaCefdfC05725E50A73F3BB95A2FffddFEDaE4c18Df\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"6046\",\n              \"address\": \"d345bd7dcFfEF99d6a7e6700F343eAdB77010BDCB6FB0726cFd88d1Bc3Be1C22\"\n            },\n            {\n              \"value\": \"33802517\",\n              \"address\": \"Fe20cbbc4E68B662CA4aaebFAC0bdF2dE50E95EB88F6EbBaF41d2d528df2DfB0\"\n            }\n          ],\n          \"unlockHash\": \"792bAE92672d0bb9F03Dc8E4EfDcED6dC03E8eBf44678eEb0F884be275b72aAF\",\n          \"revisionNumber\": \"<integer>\"\n        }\n      ],\n      \"storageProofs\": [\n        {\n          \"parentID\": \"fcid:fE1484C9E7CCbFEe6a4c8a0b8CbA03B5E8A1911A5ba9c45befFCbaE8EFd18BB1\",\n          \"leaf\": \"<string>\",\n          \"proof\": [\n            \"f5E73a4D5A1051ACc342D2e81f8D3E074a015FDEc1742102ddAdcd14D3c76aAC\",\n            \"B744E4E4aa14A2A5Ea2AE36f5CDEf1F5Bf3d9AC69edf1aBA0AD5F07dA34DFDa4\"\n          ]\n        },\n        {\n          \"parentID\": \"fcid:840c3b9202aEcD39a13bA40CA5aEc93EDf27db50DfbCD382b5886AFF8cdA87E0\",\n          \"leaf\": \"<string>\",\n          \"proof\": [\n            \"aefcdf16dFE54587EFfe8f67EE6405cad7fa829236e30F7a010AA2c44da513F3\",\n            \"02ab9D1288E4bdd3bda16e2e5Ca08a9AF8EFb1fC7e620Fd8be546A69E3d5cbe9\"\n          ]\n        }\n      ],\n      \"siafundInputs\": [\n        {\n          \"parentID\": \"295a2f59Be9BBC80AeCA3FCf6d87AECB18d8FedAd96350a06Ad5C3bFC9A8f2cA\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"97ba53d72f8cd72f9E1E4bfF9DF2B4EDaf0Da9366111aBA19E973a9dFce9a25a\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"A1600BB949FEc8B929F5acD1260BC2Afc1EacB76FEe07878520d1991A27fC9bF\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"claimAddress\": \"10b4eD8eCEB8FE07A8AC3EE22DE287985CAEBD0E762B6EC14C8cCC4AFc6eF509\"\n        },\n        {\n          \"parentID\": \"4F007deC04F1228688Cb6Ed6f9c5C6BF348007D935B6A0696DDd3fE7687dcdFb\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"745F1E399Cbc3781dDCe31E1D5B5d4ebA7Ee6D26DD021E09826a0F3Dd3d47263\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"854149A01C2719F0Fdca4e0b309aba1bEc2c5beD6c6Bca32EeC5DFFC4B5e3F5f\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"claimAddress\": \"E3C769e3bed9C7cCd14feFCeE66122ac13205182eC7FB5fE0E5C13BBe06E88Ff\"\n        }\n      ],\n      \"siafundOutputs\": [\n        {\n          \"value\": \"<integer>\",\n          \"address\": \"4DC2B9FcC285E8153c007a0BCD2eD5FF4eF45e726b9fB3649bDb7d38ffBb50fF\"\n        },\n        {\n          \"value\": \"<integer>\",\n          \"address\": \"f54adF834A1b0F16aFe522eFcc6B4A607DA0ED16a72B9b4A7E021B02EDeF0F83\"\n        }\n      ],\n      \"minerFees\": [\n        \"8021692600\",\n        \"3392953476\"\n      ],\n      \"arbitraryData\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"signatures\": [\n        {\n          \"parentID\": \"CBECcBFeA8445BE726eb43Cb6D36ab6C36FEEebeb13FFC0FECA45FaF1bEcEc5A\",\n          \"publicKeyIndex\": \"<integer>\",\n          \"timelock\": \"<integer>\",\n          \"coveredFields\": {\n            \"wholeTransaction\": \"<boolean>\",\n            \"siacoinInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siacoinOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContracts\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContractRevisions\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"storageProofs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"minerFees\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"arbitraryData\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"signatures\": [\n              \"<integer>\",\n              \"<integer>\"\n            ]\n          },\n          \"signature\": \"8f57F6266B672B5EBAb1E5392d1FC1E5bF27c105CfD2EDCF7150c9C3Ee6b4eAD\"\n        },\n        {\n          \"parentID\": \"B5dC2eADd2CfA4B3Adb1deDCDa50Da963a2bbCE3Da6c73bFCC0BFBAE577B6aA7\",\n          \"publicKeyIndex\": \"<integer>\",\n          \"timelock\": \"<integer>\",\n          \"coveredFields\": {\n            \"wholeTransaction\": \"<boolean>\",\n            \"siacoinInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siacoinOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContracts\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContractRevisions\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"storageProofs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"minerFees\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"arbitraryData\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"signatures\": [\n              \"<integer>\",\n              \"<integer>\"\n            ]\n          },\n          \"signature\": \"25B939e76C0FeDA8e9B7fc4A762aC1CdD0EBdc05F406Ea1a8fad0efE3f75a5fa\"\n        }\n      ]\n    }\n  ],\n  \"v2\": {\n    \"height\": \"<integer>\",\n    \"commitment\": \"B55A32EEBd476E527e1542FEAbcE005EE214c2c2cFDBAfE63f3Bd5a1B1e1b196\",\n    \"transactions\": [\n      {\n        \"siacoinInputs\": [\n          {\n            \"parent\": {\n              \"id\": \"705fC5dD8E5C44Fc9A5FA8A7FbAf1C3b848e91BCfEB3ed22F827C440Bec66f3d\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"3aC5Aced0dEc1386D6FdB5edf61eDe69BAe2269EbBda53D28ae2CEeB2158abF1\",\n                  \"D77AcAfB5737ad38cfFdB8E95C87C961b327EA3CA45AFecBcbB52EbdC82A8b5E\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"79300\",\n                \"address\": \"b2ccD5c33B2a8DC6E5B22f3cD86D88608E0BD3b1dB94CCfAaBCEDdEB2CbaBAeA\"\n              },\n              \"maturityHeight\": \"<integer>\"\n            },\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"ACaAdabeEb13c596649E14ACBb7085C0effaaBCACc02fc392DfF374C2eBdCEDE\",\n                \"A66dE3ADdcC0171BBaf2E1fb8d7CEBdAcd941cDe15B04AAAB3eD24a0fB6fCfec\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"800FBEbC7ab703Df26bA89cCeE9145cF2a778B2cA179ce7a9AEdBfBdBdE9Cee1\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"04B1DC11E09FF5405F4c9bC8A6D36fF2369dcCfabbe0baA46cFc1cbFD3B47dAD\",\n                  \"7BEef3e1Bd85f5E15b08795eBA3fbffFA814EEFe2fBA48D56dF4D1eCddcC0Cc5\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"000\",\n                \"address\": \"2C0ABb03e7BDC2Ead3DE41baD7dbCf0f0AA5538291Bda1cfDaAD5cDcBC8D975d\"\n              },\n              \"maturityHeight\": \"<integer>\"\n            },\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"3F959BecCc7938946AAc311dfb0Fc72bFce0185bceaCFFFbda091EDc60cCaBbB\",\n                \"Fd4eaf2c911BBa30Eb7b62Eed3c159F28DC9C38de68649bC58eedeA8E6aCFC9c\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        ],\n        \"siacoinOutputs\": [\n          {\n            \"value\": \"93420603\",\n            \"address\": \"0E2e8dAd42247B64aBcf3Dd64554276cbEd05fBDDEA7edD409E6Eab1fBaD7CAd\"\n          },\n          {\n            \"value\": \"02518\",\n            \"address\": \"D19fcd5c2D3944D4CD55dD8a3c4282E49DE961AB5Ae8FDD72Eb9f97B4D234B20\"\n          }\n        ],\n        \"siafundInputs\": [\n          {\n            \"parent\": {\n              \"id\": \"2e4CeAf75bE95eDCBc4575Ed1b77beCf85BEbFbdbDBBA23eA1EefF87BBDA69FB\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"Af8Fcad3c9DCdcda7e4c23903C782Ae8Fe6C4fDf8b2AbE4394bCD01775A9c976\",\n                  \"D293ffAFA8BeF7ACbA97AB1Fbe27BD3Eb5b8A3fcC59A90D5a5eCEa53fDe9EE5B\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"<integer>\",\n                \"address\": \"EbE3bE49EE60dD5e8B2Dca7D0E80ADB7bF96b2f6c054efd12C3A3aCb9a123e12\"\n              },\n              \"claimStart\": \"605029\"\n            },\n            \"claimAddress\": \"dBfe94c98DaEcdfCa50a5A5e751dB4fB7bCC17Bd4fB70FBbaf9833cA126090f5\",\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"FA737f0C7fA5e497E37d8aBdaba8C5683370D89219bca37d7b6DDCfbcB3C520a\",\n                \"fEcaFB074ce5d11fA264ff3C7B62eF860Fefc0d745c0911AAb12123FDDDE75b2\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"Ffe5e7F1Ffb4e86d1d06941Afd829D69bdae59b4eaFBEFbfb2e348ff91abD90B\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"AFF1E6aAb95CcF6B77A4aFf9C5CCD29823edD6Cd275aEeB0feEeF0CfF99cf25B\",\n                  \"16d8065C4c66501e8ABaE672A173df75b576AfD8acCf5Bb5E7C58DBda1aA8BD6\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"<integer>\",\n                \"address\": \"A9E2eC7C6322dBaDCcDd743639122717B25cE7c10f3600ca9cE22B4fF77cAbCC\"\n              },\n              \"claimStart\": \"231063\"\n            },\n            \"claimAddress\": \"c23fEC5c09f87235dDAc07aC7aD76f4A85FBfBbdf25e6BEaBc49c0a82dbA2fab\",\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"11323A5E5D5AfC9688D76CAa5F8Ce128FB643EBC7d1dA6B125AbadBF6BA500fd\",\n                \"8FfCa2a2ecFae635dAa855f4cdeFaabCa8Bd0AF8baBc6F4ed4BF7FdC7dD5E49e\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        ],\n        \"siafundOutputs\": [\n          {\n            \"value\": \"<integer>\",\n            \"address\": \"AFA20cF54596CDceFe00e911a84dcfc2DfefaEDcded8475DBbE41DCeD6b69Bb1\"\n          },\n          {\n            \"value\": \"<integer>\",\n            \"address\": \"d70b1fa50eadddac35d983a0BF47cD8Da1E2ce200A7DBC55fdA7059cD03fE5e1\"\n          }\n        ],\n        \"fileContracts\": [\n          {\n            \"capacity\": \"<integer>\",\n            \"filesize\": \"<integer>\",\n            \"fileMerkleRoot\": \"0AaD9fdCaCAc2CEad7f61787CA2cEBef01C072b050Bfd3eBbf6d5388DaB57fEf\",\n            \"proofHeight\": \"<integer>\",\n            \"expirationHeight\": \"<integer>\",\n            \"renterOutput\": {\n              \"value\": \"223018\",\n              \"address\": \"417cBF4F19AF2cD3ceCFE618BcbA8b7cda46A76d2C1e0E1A49A8D71AFdd2A1d8\"\n            },\n            \"hostOutput\": {\n              \"value\": \"63234\",\n              \"address\": \"62cFBBca1651EdFE0d81fec9FB554fFA9fE3Afc5EF4cE6EaceddB2F7E74AE70C\"\n            },\n            \"missedHostValue\": \"8766394\",\n            \"totalCollateral\": \"4\",\n            \"renterPublicKey\": \"ed25519:fab12eCBeECe9eAAB42ECDc640b2eB8a0e048f7f2bB6d0b4Ff53C0bF482edD89\",\n            \"hostPublicKey\": \"ed25519:8aD848AB6FaB29a70BfFbdeDB6FEAa2EdC6eB56E81BEe935d102E6B1C4FE052F\",\n            \"revisionNumber\": \"<integer>\",\n            \"renterSignature\": \"3b857660F4517C72CEDdCE9D7E86b6bdAFDC1DaFf03A9C3dfDe6A0B0C9B0EFCC\",\n            \"hostSignature\": \"eabAE5BEf51C0c1256da91C8506e1CFDeefA2B25939fE5fEeCc560ddE04DEFEf\"\n          },\n          {\n            \"capacity\": \"<integer>\",\n            \"filesize\": \"<integer>\",\n            \"fileMerkleRoot\": \"CCDb1ab48FeaABd1D4a97819Ed1a8eE28f0e8E7A4AF8DeecABA16dfe6dB9A2e7\",\n            \"proofHeight\": \"<integer>\",\n            \"expirationHeight\": \"<integer>\",\n            \"renterOutput\": {\n              \"value\": \"50\",\n              \"address\": \"ffdfc0EEF57d9df4facc33Ebbd7FaE7beCc2f032DDE18009cd8c97eca6fff7A1\"\n            },\n            \"hostOutput\": {\n              \"value\": \"79\",\n              \"address\": \"6C2adb65c301D60c0E84065D6C0493eAaeD0723e1577B394cefea9EaA5d9b975\"\n            },\n            \"missedHostValue\": \"4846025\",\n            \"totalCollateral\": \"5566721628\",\n            \"renterPublicKey\": \"ed25519:170C46b0Fb44e10C20D6Ba82bcdbf3DEa4f2d8E7bcd49F7EEA6dBE3cdDD6eA4E\",\n            \"hostPublicKey\": \"ed25519:3ffd0bc3aEdfD5fCc70BCb5fc10e05555cBddCb79abfe32eFA20Cd71ECafaDF0\",\n            \"revisionNumber\": \"<integer>\",\n            \"renterSignature\": \"6dc85a2B8D60fA860798a784360aCE616ebE1A5BcF7BA5bb6Fc64c39FBA30E4E\",\n            \"hostSignature\": \"dba72a7e3560C82F29541D17dCB7FCcEa0a53fE4eaE723b93DFaEC3b482D9fF2\"\n          }\n        ],\n        \"fileContractRevisions\": [\n          {\n            \"parent\": {\n              \"id\": \"fcid:17473FCEBD2eeFDad8F265B4843A4cF9BFfABA9DC6e9AE74Fb7583aF6AFfE8A4\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"FEe1d75F1557ACCaA928EA0dc0Caab36dE70EBE4430A3dF8A7f4cfF9422f533f\",\n                  \"0e71B3C3192cd990356D893a50adccA6B78b9CCb07dfdEbbF3BF12d3e09b62E5\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"CbBE18eb4AE059BAab29Ac3891Debe3a774BE28EcEE73e849FDECfbdC76F6366\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"8111252673\",\n                  \"address\": \"D99b4Bb30AC3b34DcAD3C0DFD4B4f871ba1De90b4e084eEBD4DaB962caEA4CA3\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"20\",\n                  \"address\": \"1cDCdfaAA190871abC1a9DfAbCacD31bCcDE46596d2C1dcccacCFC2dd2BbBDE1\"\n                },\n                \"missedHostValue\": \"57\",\n                \"totalCollateral\": \"704377\",\n                \"renterPublicKey\": \"ed25519:Bf60fe9b4fcb62De5Bd9a0aCE87Ed5a0d5aadd76BEaeee46398E23e0eda9B17b\",\n                \"hostPublicKey\": \"ed25519:B907b1C6CedDFe6AB47F6f8d5309cd2f00af65ffA67c91807E6b93939892F8EC\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"A17Ad9c7DFBdC84cfbDeaE397fB5994ADFdDa1d6F11f2F4c465e8240867Eb712\",\n                \"hostSignature\": \"4B0767ef0E5fb1AD9F2fea4B01ffaC10a733B1aeFCAD9DA10d53B2bB6AEaB85a\"\n              }\n            },\n            \"revision\": {\n              \"capacity\": \"<integer>\",\n              \"filesize\": \"<integer>\",\n              \"fileMerkleRoot\": \"CF2bad7c6268630Ca523e43dB92781bDb8DfdBDcD93bfa6439aAeD1a2eFC9cFe\",\n              \"proofHeight\": \"<integer>\",\n              \"expirationHeight\": \"<integer>\",\n              \"renterOutput\": {\n                \"value\": \"30041237766\",\n                \"address\": \"7ECae785F75Be2Cd8D8Fb5D7eDAAe8F94AFf4e6F0afCDEF7F505FDBfce3FC9F0\"\n              },\n              \"hostOutput\": {\n                \"value\": \"59\",\n                \"address\": \"bbae59A7255B3A88a9dfFadF6Fdc9adF5dF6F1BDAaA380E3d11BF27bD309522B\"\n              },\n              \"missedHostValue\": \"8311381261\",\n              \"totalCollateral\": \"3836\",\n              \"renterPublicKey\": \"ed25519:BF7D3ecfBd1a68Ed3c08EbeE489b5B0da84a86f4bC37d4cB8F6c8FF598fe9dbb\",\n              \"hostPublicKey\": \"ed25519:0aA06Df5Af14033dE6a292b50036DcdD16C9Fb3ed5A5B67F7CceDffa8f6ee47C\",\n              \"revisionNumber\": \"<integer>\",\n              \"renterSignature\": \"0DAAF5A99E623fD88f9Ee1aa0BE9c1a0c5f17D66AfcC48EaDC7A2a3089a8E5Fc\",\n              \"hostSignature\": \"E1D856bBFceAA51d8aBc2843DB101d278585DbbFe99E4E4539EFBa9c3bDeEC5A\"\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"fcid:0ADaF4dCEA91f3ecee27a64c2d0afB0ff81B0c500a3CCEbb28FCFB84DdcAb8C1\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"2A1634bd3f7468a4CF7da0386301f4c52fF7a1D3e9ab1BDb01ad499B34f8eB04\",\n                  \"6abee36eFe2e7bdb591E5457E35dBB7d0Fa9DF3336fdD093a6ACDCeCe6880866\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"68F3CC5DBE2fEaC36fFA3d34ebAd5CAD0faA44Bb55Ec25EBeFff3bC8B4bcfe83\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"032863901\",\n                  \"address\": \"f5f1f93C1d3948a1401cBD1dA7C90e51aA3bC799DAA416b2badC6cbDD2EC924E\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"771933\",\n                  \"address\": \"B7d838ceD5dFC8fC22d1C47BE1BD5f43c067BC10b7D1e7CE552c3F3213CE0FAB\"\n                },\n                \"missedHostValue\": \"587\",\n                \"totalCollateral\": \"32959\",\n                \"renterPublicKey\": \"ed25519:4b7DcBD2BefD9cF3F2e5feFe9DD72Fc79DDBE05cBb6FDaEcD714d04cbF9Bf0e9\",\n                \"hostPublicKey\": \"ed25519:DE2a1Fc11Aef446508d40E0a245F50DebcB6084daBfFD96eDA4BCCAEB779d5f9\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"6C7660399D3A1bA27E2561BDDfaCAefC4B20Ea0caEe0ebEF3BbDebcBEA7fbFe4\",\n                \"hostSignature\": \"6B1Df1C3057BFE7E9A625E23A8BB43948E59f0E6db6278Ad665FBa5B6772AfdC\"\n              }\n            },\n            \"revision\": {\n              \"capacity\": \"<integer>\",\n              \"filesize\": \"<integer>\",\n              \"fileMerkleRoot\": \"Ac89CedD6ae15AB9a06eCBe42Cd9AC891eEb21F1f195cD8bCBf6E00FEf4ccfde\",\n              \"proofHeight\": \"<integer>\",\n              \"expirationHeight\": \"<integer>\",\n              \"renterOutput\": {\n                \"value\": \"98740639\",\n                \"address\": \"5e6547C2DDFeb6fEa215be5BbD2029E93128ba372490a6E1A2dC982b3cd6CCCc\"\n              },\n              \"hostOutput\": {\n                \"value\": \"779\",\n                \"address\": \"4bdb5cdca9cfD3a606d6ae55fdCE74e9eb92c2Ae9FCf21f6B92fbEca6EED6e41\"\n              },\n              \"missedHostValue\": \"95075028\",\n              \"totalCollateral\": \"50\",\n              \"renterPublicKey\": \"ed25519:515DCc3cd1FCc02e5ffc881Eb26e7F8B8E9BdfbCCa4a5a0Aa8FFcaE75477e82D\",\n              \"hostPublicKey\": \"ed25519:DED2DAb75AAcE51Cc5B5Fd5eCcB4FA207C992deCCbafd5eefBaa3F987d7ACc09\",\n              \"revisionNumber\": \"<integer>\",\n              \"renterSignature\": \"EDCB1e7b7DEfAEC11ae8422c419afcbFf7eeCdF982A2d65CdAECDDc5Cd14657B\",\n              \"hostSignature\": \"79aD4Cc9d5cd3c13deE25AEFc9Dd87EBAbfaff4AAd446bD692F6EcDbce5d46ac\"\n            }\n          }\n        ],\n        \"fileContractResolutions\": [\n          {\n            \"parent\": {\n              \"id\": \"fcid:e9Ae35BA0A7B12DBFaA7d4f7153a6ff7937fFdD07A0cf897f96ce5EaCdf7C4b7\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"fcB26aCa5D4FfBb58eF0cF0c3F6da33637aDc1cAcc2a7B6e09eAEac8DD696a47\",\n                  \"B0e644BcdE47B39de008e3A71CEa76a2CB7a96dFd7D53EAA1A90CAb346FaaAF1\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"DD003A8d24Ae57D3AEBc3AB53D40DF095dEbDFa36EBB77E936DdCB87CFC5fbef\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"28\",\n                  \"address\": \"9Dc231a4f2b075f1769a7cAebB853EE5341afaB7BD03820aA2FEbbb6BA52ADe1\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"00\",\n                  \"address\": \"641c0b1953Cf4B0c2E2EdaAaD00FD87565B2F7E30BfCB356fc71133BFeCD1caB\"\n                },\n                \"missedHostValue\": \"1425976521\",\n                \"totalCollateral\": \"378957598\",\n                \"renterPublicKey\": \"ed25519:C8ED1dC6d7a0CDC9B21fcF98daEBc7Fe36d43daE8bE696686aDBD52bdF597EFC\",\n                \"hostPublicKey\": \"ed25519:b4DBA959DD2BCBE6EbC16EabD2aa099D573bcbdCb771beA5FAEa2ED41Df186D6\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"759dD6aa569Ee948AA5afF4c09cffE3abd46DC0CBd036ca5DafD425DfAB47B2b\",\n                \"hostSignature\": \"aF9DB0fF7aEB3A7d50700C0fb8AC0c4D2b55263DDC119084faEBfaDC72FFD9de\"\n              }\n            },\n            \"resolution\": {}\n          },\n          {\n            \"parent\": {\n              \"id\": \"fcid:AD9AF804e2dDdF3F0DbAfc677084a84D85Fec45Fa30e8b2eE6dFbAA77F25c1fD\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"45EBCE20E63cb78Da2341a9aCB103CAF34b62d4D4fc6edeE9ebBDE9FeB5D7fc8\",\n                  \"42aD46EabaA5ECB9bf5bB2FB3ee89B612d11143Bc2F57d9680bAAc6CDbcc95C5\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"48dB27cFEe0b101E99B4c24c605fFB4DcdB6ACCB3027EE576FDf53AFADE69e68\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"762\",\n                  \"address\": \"BD7f3fB72Cf9eeFfDBbc977e09DBE9C0E7a982C1D7C168f4872ADf7f985f69A0\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"98573103\",\n                  \"address\": \"8Ed26Ed43F2Bf5Eb6A2072Ca8CE0a62e922213e9F73C2e5CefCAEF17AdC3E8F2\"\n                },\n                \"missedHostValue\": \"2970134374\",\n                \"totalCollateral\": \"7065\",\n                \"renterPublicKey\": \"ed25519:B1c9Fa49Fd80a7a03af2E2c13dF51052EcEA235D4d9a2D6AEDb0635Ef2aDEbaB\",\n                \"hostPublicKey\": \"ed25519:973aAf446AeE8e7c9E6B1D8a4b1FbA411c0eEBf7af88412EdFdd9bF6c541bA84\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"088B56AeD0A6ab6fdC07EFBB48aeDd36c3eE279bbcdAAFf70fd6CCF6DFA3DEA6\",\n                \"hostSignature\": \"1EEF4aBb6dBa0ceeBf3bE52001CA8d552e2ee9CcEA5bFadDdEE2Dc44bb67DcfD\"\n              }\n            },\n            \"resolution\": {}\n          }\n        ],\n        \"attestations\": [\n          {\n            \"publicKey\": \"ed25519:F6Ccd32906F1BFB4fF2AFddeaBCbACea24e9feD61E9D6f1aDaD16341fE3EF49c\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\",\n            \"signature\": \"6eC5c1F31AeEa556414Dd8Ca4bBEcd05EC4C9e1Cd8D49C70AfCe29ed46D90226\"\n          },\n          {\n            \"publicKey\": \"ed25519:dc2d64b7f01422F6af457018DE6edfdddB91629da9a0dCD94A2F5BD2EA3ab7EC\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\",\n            \"signature\": \"fAe1c0Ee29d923e1fFFf2ac8FE20FDEC98fE8ed3Bc6B3AdBe8eD2F6321E1B234\"\n          }\n        ],\n        \"arbitraryData\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"newFoundationAddress\": \"8c9519E57C4BFdfFbB09b16EDc257Ec13D66A6a9fC4d2e48982a1CbF4aBd89F4\",\n        \"minerFee\": \"89740602040\"\n      },\n      {\n        \"siacoinInputs\": [\n          {\n            \"parent\": {\n              \"id\": \"D2C7A2cbE8BCFdDf5aa72a7a8cee1AB3472baec1f5DE345E5ca998D81aADa31F\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"3cf1C38689eAEcFc4dAb84bC7b3393F33C2c4d990DA66336E3E3671a4DcdfB1B\",\n                  \"FFAd9DB99cBe74bCA37A7Cf51d5bD4BC3f64CDD83AC82889Df70aEbEF4e9c818\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"326964\",\n                \"address\": \"BDfeF8B41cA8FFF9Dbc3192eA50BF6e3Ad85631c817ceF146D6826C58b3c810C\"\n              },\n              \"maturityHeight\": \"<integer>\"\n            },\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"6A7cc215BB4ba7DdBA0EA6CCcAaC2E19BC36394Cd50D2a97fE2bAab98F4B00a4\",\n                \"CC59a1EdAF961fAd26aDA6ce5a45E79cdB1fAAD1E9Ffb9ECc4ef22EC71BE344c\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"cEeABbd3DA55Ead5Dfe21B2c58DE14f2c6E0aEe6ca75DacE07ef9D7AaacF03CD\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"0F4e2fceef538CBfCB5DF5947d9A09D5c8B2ffE4AE5e04AdcBeAadeCeA2Fe6aE\",\n                  \"1eDc9eda94a2CEB70182eBf1C35ec3BC9bEa57D1219ea7CFb54F987EeaA4A57f\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"1819061847\",\n                \"address\": \"DAD78bFade9E3a0BabCb8A48dF8cBaB076A35fD2492E9Aaa9DDcd7b3dF62eB3f\"\n              },\n              \"maturityHeight\": \"<integer>\"\n            },\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"9bEDcdb0Bdc0fBb9ce058317a6BCDBb3E85F0DbcA8Cab65878d16b3F7C62A3c9\",\n                \"f24eF831C8ee7F5bA4e00d194ddC2f2b31591f35FCeeA6fee128eCAD6EeF91a2\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        ],\n        \"siacoinOutputs\": [\n          {\n            \"value\": \"59\",\n            \"address\": \"14D6F2e215b0eAF9b620D54CBCbF09dec94A8bDe58B64C8Cf0EF0Ecf68773Ecb\"\n          },\n          {\n            \"value\": \"79623866368\",\n            \"address\": \"0b9cee2abBaDbd0bDf7cEB9aee83026F3e88a6389066cF8286DDb4d2d28D96Dc\"\n          }\n        ],\n        \"siafundInputs\": [\n          {\n            \"parent\": {\n              \"id\": \"C46ac66Af77BDaF042828aFaC6ead0AA3DA89CaD8C39fefcf3d8C9aB221de29c\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"9486f0E9b7F3086Aa99ffdD3CDb06aaBa1261B5dDFa18ebc6eB8d67F2fe838Ad\",\n                  \"7226aF41db57F7C5BbFfF31673ef1E4bd459cDF9533Ad40aB6EBdaede124cBe6\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"<integer>\",\n                \"address\": \"4b3Cc70879EfEB6bb3a94bC311C3dECeeA9c7AA53c94beAD605d0b70B9D360F8\"\n              },\n              \"claimStart\": \"00026\"\n            },\n            \"claimAddress\": \"7e4Ec5dCe7AC0ded140Da1CFa6d7e8B81Eb48D6EdE37eA7FcCd69ec3cbBA12a3\",\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"199CbEf5CDDA9bf2BaD8FC394148dD5Ed371E10Ea9DbAaf10Dc5Ac55Ef80ccC1\",\n                \"cFE99D6fDfCFa38c2CcEC23beb4e2A5fEaf7BB756618bf1cBC0aA6CDFBDFCf6F\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"8BccFD30D7F7CdaefEbC9CB0DD89Df399d616cc81ACa8D5abac5acD237B86afd\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"bda35f2dceA18de64BBfFBE634c74CbCB577d0e43112Bb1b63ba3a533cE0a5aC\",\n                  \"97dD0872aF02d3df72Fd1FCA2eed58Ce5bDBE0fa34acbb0735098Ef66db3f4F0\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"<integer>\",\n                \"address\": \"049FcFAaB0E7Db8BD9FEA8c8b2f3Feec2bf42E090Ac1E2ef483139f573E6Add9\"\n              },\n              \"claimStart\": \"38178731663\"\n            },\n            \"claimAddress\": \"00Bf8BEb93A2Cf4FCef73ba154757F73Cbd2E2927cBC80dC74dB4ed66a2fbdc7\",\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"BFCc2bD18cFFbFC0DABCe760d046C4EeBaAA1BD22822e32e4bA9C5CEd598F4fF\",\n                \"e4d9eF2AAeDfa1e29CfD4553E6D389A199b61efdDFc03e857cC58fc81DeDF603\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        ],\n        \"siafundOutputs\": [\n          {\n            \"value\": \"<integer>\",\n            \"address\": \"bc5Bf1CD399163510AAe0824c0CfF01B2F44DFdD0Ac13cD463c27c7f7D88C37A\"\n          },\n          {\n            \"value\": \"<integer>\",\n            \"address\": \"134EaFDCfC54f5dB7148A8bFD6a73763e42fC6Be7ef1Cd51f95DBFDF85fD4Ac2\"\n          }\n        ],\n        \"fileContracts\": [\n          {\n            \"capacity\": \"<integer>\",\n            \"filesize\": \"<integer>\",\n            \"fileMerkleRoot\": \"e01Ac402Dd7C1cBacf9cBaEACe7eedfA33c7DA5f4f3Db30efEEc3edf34Dd1904\",\n            \"proofHeight\": \"<integer>\",\n            \"expirationHeight\": \"<integer>\",\n            \"renterOutput\": {\n              \"value\": \"821776\",\n              \"address\": \"9f917ad6ebcF56fbd583F0A8194Af5d8Fa0c7a3E75ED4B8CA85DD2Dce9EE5Ae5\"\n            },\n            \"hostOutput\": {\n              \"value\": \"3028\",\n              \"address\": \"2e81FBC59e7ab4e6D520ccec19C15776FdAd66FfFC74a3865E797DfCF2BAc0D9\"\n            },\n            \"missedHostValue\": \"34\",\n            \"totalCollateral\": \"50627\",\n            \"renterPublicKey\": \"ed25519:EcaBc589DfFcd0AbFc590C29740FD010Fb07F04BE3249BB49F5B1B6E5e2bdcaE\",\n            \"hostPublicKey\": \"ed25519:90F88fDF854Dd791a3B859Ab9bE73461533BeEBbEeeef1bdd2F259Acdbe2E7Ae\",\n            \"revisionNumber\": \"<integer>\",\n            \"renterSignature\": \"1297A6FDACB24D4a2502F53362B46A8583f2b5BBEe3c3eDcfE6FeA62b95AdcFa\",\n            \"hostSignature\": \"0D7EfFB015d0A185Bd31C6DaD44D00C75C9f4b737b8B750aAc3aF24924aefeec\"\n          },\n          {\n            \"capacity\": \"<integer>\",\n            \"filesize\": \"<integer>\",\n            \"fileMerkleRoot\": \"F12C5b876eeB4C5297b4DbFba080D6eA8b43FB0f57B18ddEcDA41016e2CF94AA\",\n            \"proofHeight\": \"<integer>\",\n            \"expirationHeight\": \"<integer>\",\n            \"renterOutput\": {\n              \"value\": \"79\",\n              \"address\": \"24d5189522049C1f8C87A3f2AFC1dBAEBaF7DcaB9bee29BDfA89EEae3E2d076d\"\n            },\n            \"hostOutput\": {\n              \"value\": \"483112\",\n              \"address\": \"BA7e1F467FAf3feddA1349cbd86fa1cFffBd3c32E1C8367da27d565943Eb93ce\"\n            },\n            \"missedHostValue\": \"889428314\",\n            \"totalCollateral\": \"062\",\n            \"renterPublicKey\": \"ed25519:c698Dc05c82b7e8edbC8Cb5c5DdebB4FDFC0f1B3FCa67b3ccC7F64aBcD75665B\",\n            \"hostPublicKey\": \"ed25519:44a0CE8B8Bc82d0aC4Afc3382970c59aE307F21caaaDC2868A4f8efDd95bd8b2\",\n            \"revisionNumber\": \"<integer>\",\n            \"renterSignature\": \"21F69FDa8e9ca4e47bcd1BBBe3c18bbb9deD40EBFDFC645b4c5cdbD37F2cF80D\",\n            \"hostSignature\": \"fcED0fCfaaF921e6FF342603fBA4Cfd6C29C33EFc3E2cAF341e84E5CAde4c6c1\"\n          }\n        ],\n        \"fileContractRevisions\": [\n          {\n            \"parent\": {\n              \"id\": \"fcid:D0AacD5dbA8A149938F0a72CFbEFafb4ADf8DEd892c60f8DD5ef24Dc0a83e0FE\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"A272E95CaCBcdc1DC9E84dAAEed85F6a04dfCEbE1E6fA9df8F2Fe43F3Afc2Ca1\",\n                  \"75b8B3b104f10c8d1BD898E5763cfdEB0CCfF21abeFcFaB0c6fAA4D0d9Ea9ad4\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"59eA2369eb425dDCB0Ece003Bcc3aaDb02ce38cbafEdC98B77CCFa394F452eD9\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"57046656\",\n                  \"address\": \"e0c7AB3A6F3Eb0aE1DdBe504F6C6aeBB4eecCDfBF677eC204aFFFD8B27F0B07f\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"21395\",\n                  \"address\": \"f3d5F9dbeBf2E0da08A93facdCBd8c4Aeea24f23d8B4EC5bc703Cb7A7FF9AC9B\"\n                },\n                \"missedHostValue\": \"359\",\n                \"totalCollateral\": \"8709\",\n                \"renterPublicKey\": \"ed25519:EDfEdD5D83d987DEF4B73E4AAF4b8bfbbAe72a3974CE7f932Dfd5B0ab522a08e\",\n                \"hostPublicKey\": \"ed25519:6615d347cfbe9d640d2A4AD05c1Af8cCC1cecB0Fed5084a0fef4e9c992A15A2a\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"b1edCB182948af96B06DcEf040D9567B204e6E8E337B3ea8ADdD2cF19C181112\",\n                \"hostSignature\": \"Bbc6d45ce88D132e6591dB93d879Fcb0aCB384c6F9fEE0C37fc4EaD764da530b\"\n              }\n            },\n            \"revision\": {\n              \"capacity\": \"<integer>\",\n              \"filesize\": \"<integer>\",\n              \"fileMerkleRoot\": \"3aa5E801d60cbD62dEFaF433bbBF4eF781B8C296DDdD9E62D59E4b57dfEfA5fC\",\n              \"proofHeight\": \"<integer>\",\n              \"expirationHeight\": \"<integer>\",\n              \"renterOutput\": {\n                \"value\": \"685961149\",\n                \"address\": \"0e34F0Aa57ca2ac8FF40cF5206Bc3C1FB82c521CFee7Ba23f9c5FB333069BeEb\"\n              },\n              \"hostOutput\": {\n                \"value\": \"286799\",\n                \"address\": \"bEC1Ad1f68bDbC5EED7c56bAEB53cBCaBacc2D77131aE1DA122e3D4bdC6B169F\"\n              },\n              \"missedHostValue\": \"5127900235\",\n              \"totalCollateral\": \"92123735506\",\n              \"renterPublicKey\": \"ed25519:cc8AdC4A79a8617621fCDFDB4c312B7cA76fA36EcAC3b6816b188FdA919AefAD\",\n              \"hostPublicKey\": \"ed25519:F8Bcf4de4cAbA190176dE6fAE5d68ffb925Bf98D4AAACCF5BC6e98979fBC8BaF\",\n              \"revisionNumber\": \"<integer>\",\n              \"renterSignature\": \"0dFD1BbAAae70a00af0C7d3ebF1Fb3eb14F9fa8cBAEBAdEdAedde62A20c3FAb9\",\n              \"hostSignature\": \"5992C72d5E61dda2e2DdFBeD9d76B6ea2eBa62Adb0Dc36dB15c1c55Ed6CcBAdb\"\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"fcid:e805b130f218eceDDAfE9ce5ae7c19A606fFb3AdC2263C0Be5cd0eA56D8CEBA4\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"71f6526fbb18b1af84Ab5c5A881B0A49e4AAAE9DD4EBdd30872eBAAAccDba55F\",\n                  \"1a588AAed0De7b64daEd03bE0F7Ac8fE8eAf1aaa4FB9f059422Bc5aE45Cbac7A\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"D09b392cAcaFfF33A0E25188fA21bC0b1feBe1f3a218225144902d4126f117bb\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"67\",\n                  \"address\": \"e1A8B8B0E17B455CB0B2Bc6AcDbA35eD2c43dc8a80c6381dFf3D5E3B92455f8D\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"6\",\n                  \"address\": \"bDb7CAdBe8742d66F70dedAb7a1a3ce2D3d52d36381bb17bcB7d44d75B1bfCC8\"\n                },\n                \"missedHostValue\": \"697640\",\n                \"totalCollateral\": \"1\",\n                \"renterPublicKey\": \"ed25519:9aCbf6fBc8E38A2Fb8E628E5032e9A8d4C06Bf37f3D16CcC3e5eDe8256EC48AB\",\n                \"hostPublicKey\": \"ed25519:Be41Ac3B9F2CdFfE30FdfbcE00CdDB6BfDAe9CC4DD1078B91DeD0ac81CcdFEF7\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"58Da3c27AFB93897B471275185B7F95c5dC00ff2b3Bf1bBdBCaCFEcd99eb7Da3\",\n                \"hostSignature\": \"dD9fcA20D2E8E932C8CAf825CD6cfACE38E095BFC78dcDfadf8C98E43A2d19AD\"\n              }\n            },\n            \"revision\": {\n              \"capacity\": \"<integer>\",\n              \"filesize\": \"<integer>\",\n              \"fileMerkleRoot\": \"9030d449AB4835f9A911ced2D644A28cD4aB6EFF99Fbc6a2edb53FCAfEb053e0\",\n              \"proofHeight\": \"<integer>\",\n              \"expirationHeight\": \"<integer>\",\n              \"renterOutput\": {\n                \"value\": \"5374425627\",\n                \"address\": \"BE7CB0Ee9F4adD8d6CC7E6EC99ebd786F72b1c9D23ecfEFB5daFd7ccEdAB4d06\"\n              },\n              \"hostOutput\": {\n                \"value\": \"54\",\n                \"address\": \"a176F1A1C4DcC329AC817626ebe22C0d3d1e9b98cDc6366BeBaF6Dc90bE3FF59\"\n              },\n              \"missedHostValue\": \"8407084960\",\n              \"totalCollateral\": \"585368679\",\n              \"renterPublicKey\": \"ed25519:8ff0c7C5ee3CC3B2b74Fc36CD5D92FCD204adB8769ce46c016785BfCCdD03ccb\",\n              \"hostPublicKey\": \"ed25519:Ef2E8fedbdeBdf4bccFeEfbba502ECD6dAc8a4CB4D3fc3ad581a2DD0add9F5bC\",\n              \"revisionNumber\": \"<integer>\",\n              \"renterSignature\": \"CAFC28fd4F08CA99A23a7Bd7adf0b5ae1AbcE2d65862b17eEf8d5A03b7c1c81d\",\n              \"hostSignature\": \"E1D17569410FdEfBF33A67C915F2DE3Ae5BA0e28a53D0D9Afe912EA68EFdDc3d\"\n            }\n          }\n        ],\n        \"fileContractResolutions\": [\n          {\n            \"parent\": {\n              \"id\": \"fcid:f163b63eAbC6f6668Cd3E1bcB233B82f20b8863A52cFBaaCeAdABAfeA4f4BeBc\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"d7DcfCa9dA1D3A96a3f11d8B57e65742017e1247d473F0879c26246DAED9a7f5\",\n                  \"D1edccbcCffA5a4D9ec0Bc6a55a91dd9360dcFCFb189CE53C7A53BBCb8Ab1a38\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"9ccdE72fDB48004f758a89CdE0fB17C217Af555FC3cde83B786FCAb2d20FCfAA\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"77\",\n                  \"address\": \"CFc0ACe518fecD3b8EcAaaB57dEeBf5360dae1bA63c408d373cFCeBA3853dD63\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"18\",\n                  \"address\": \"Ca736a75bDBb5dF9EAd40aDCf6E7c7b4be3FFDFA3A3b0a673eCdF4240EbDAa4E\"\n                },\n                \"missedHostValue\": \"0715\",\n                \"totalCollateral\": \"58207\",\n                \"renterPublicKey\": \"ed25519:DcBF3849CffB1380c74fC3BFeEb7d58D1d0E962BC3c0F9aE4b7baEb2AbBa4Adb\",\n                \"hostPublicKey\": \"ed25519:bd3884CFAFF8f33a09bCf2B7bb11D0D7eC8fE6C4553eaa34bdbFAeEE9daeDf09\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"7a73d8EAAd44Ac856086dFbb8F71c18C42d1Ce2EA9f7c1286fe7855C4cD7c4cC\",\n                \"hostSignature\": \"9b65DADE5CFD3CafD14cC6DbaBfF331DC31AC84FCF4EfD5f9BED2b1AB6A0fBCe\"\n              }\n            },\n            \"resolution\": {}\n          },\n          {\n            \"parent\": {\n              \"id\": \"fcid:79F44157DDb809fD5AAC49eD9B6E1B4433b6fFe0BBfCF415EEC5CdAFDd20EfBD\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"cAEc6fb3E4Eb21C4fce2DF734fD902CbA93CB7F44131d6CFaAcEFBeC39acaEEC\",\n                  \"aCbdDa53468ba382A558E3B54528CBDAEEb2D3FE9dE2D0c5A3A9a14772bD23a2\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"CDE7d6ddf46EeaB94ACA86EaDecE6e3f27F798895fA7A97Bccee7D9e64EaCAb1\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"213\",\n                  \"address\": \"B0E9dCea8cA9aEe5b6cF64903bfaDC79ef3B0aDDaAf43a9bFF572A499Dafa279\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"2248\",\n                  \"address\": \"1EeeaBED2dB76A9e550EFdDED62E1aaeDCb5a15EDf45D479c941726c967af223\"\n                },\n                \"missedHostValue\": \"36\",\n                \"totalCollateral\": \"05\",\n                \"renterPublicKey\": \"ed25519:3ecE74812d22bacdb8C7ab5ccfAe50354Ac5e804eeBB220ae8855dfe9BF0497e\",\n                \"hostPublicKey\": \"ed25519:bC1E4a39B4A807cAa112ba6D848A2dCC9A872FF2Bfa0086369FdC96DEeaD164b\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"CB3aDdf5c53C27618D5F08FCe5ca6E00FdF3728FFC0B52df46F968C563C33B3a\",\n                \"hostSignature\": \"49df07dBDD6CcdC9a8c8ef3cEeE520fC11fBc9ceDEAccDA74E2E2623CF3B9a72\"\n              }\n            },\n            \"resolution\": {}\n          }\n        ],\n        \"attestations\": [\n          {\n            \"publicKey\": \"ed25519:AFdc42C8Da2203eF2AeeA4C80BabA5e0ed549cb2fD9Edd6932Cfd2d2cfFAEbCf\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\",\n            \"signature\": \"6eEf62cdCF9fEAb21cDe7B1Cdb8c7d74daeEEA38Da3bEAAEB37dCF0A8e5Bd55A\"\n          },\n          {\n            \"publicKey\": \"ed25519:ED7eB20bFD30DeBf842C92f754B08ebb20D0200A151A57Eb36e784bD7E0bCBeE\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\",\n            \"signature\": \"D54ed79a48b9c0567cd600FCd4a6a87bfE22E347358FB8acf574fE86fc103C35\"\n          }\n        ],\n        \"arbitraryData\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"newFoundationAddress\": \"1FfCc86A2BdBAfF1e2CFC242aF8dDd7DEf50CC2D0c496BC80cFFA53DBC4fb2A2\",\n        \"minerFee\": \"689891\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/consensus/acceptblock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"consensus",
														"acceptblock"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"parentID\": \"cA7cf65CcCE57D06AcFFD625de0EeBB572cE765c713E30391Ac38C5C71520dea\",\n  \"nonce\": \"<integer>\",\n  \"timestamp\": \"<dateTime>\",\n  \"minerPayouts\": [\n    {\n      \"value\": \"2\",\n      \"address\": \"F5ccCaA63CF84FCee4bEc88d95B0aD9A7B20f01F12dcE7AD0Af935Acebfde784\"\n    },\n    {\n      \"value\": \"14\",\n      \"address\": \"3af89eFdfC5ABcbC430d63Cb72dC26748279fb2aEA36fEb6C00a0024bd47E00a\"\n    }\n  ],\n  \"transactions\": [\n    {\n      \"siacoinInputs\": [\n        {\n          \"parentID\": \"93C4DE95dBAA4F8f0BD9FA31bcC2F25fbC10Ab72FE1FD26ad29D3fdaDE85DE4b\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"F3EaFeB009aa2c5a0bCFaB4DABE2136e8E5Aa30b3a6e8Ce0A7292c9D2dDd3de4\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"cD33Df36302AdCFa85E76054B0942Ca07DEb34c9c43eDda73f54A2e93BCF57f2\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          }\n        },\n        {\n          \"parentID\": \"CaC25EF7C2369015a7f4aD6A64DED06baa5baf202fb48be2A948d06ab5F3a40f\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"8286342A76BCB2eec063bEbE72aD7Fdf353182f9006a8D3a36Ea5793B6aD57b3\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"54caAC369E1f7c6aC90e9D0f6D8B19cE8f0d5e3e791adAe5fb96DfbC3A8f5D8c\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          }\n        }\n      ],\n      \"siacoinOutputs\": [\n        {\n          \"value\": \"590030\",\n          \"address\": \"F0C2e1AcBeF1C58E2A46d10b4D6edF4338458e0CBcCFDEAdEFfb0C663cAa6428\"\n        },\n        {\n          \"value\": \"726356207\",\n          \"address\": \"b81A9E8ECBddCd95b818373e413890d7a1A4FD62FCD59AbCAE00ae56A137EB42\"\n        }\n      ],\n      \"fileContracts\": [\n        {\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"5e84De89B4dDcED67F0Fb03ceeA673b398Cb15b14F2a0fABB7a78BB8e2e1ACda\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"payout\": \"12\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"1681455853\",\n              \"address\": \"4Eb0bf119cA571CCA622e0B7d1F39d6d3dEFC559dEfF4a065cE8fd5Dddd41dcb\"\n            },\n            {\n              \"value\": \"311\",\n              \"address\": \"Ebb0F46CdcfaBf0c0FeD5f55890e08CDb6952ADBfa9cF93f3FeFFc5f1Cc12f32\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"062\",\n              \"address\": \"348424E62b473C915AA3E23FA411e04CDa90cB6F2560BE159AD5BbCD1ccFA6AD\"\n            },\n            {\n              \"value\": \"555\",\n              \"address\": \"aEf10c907D2e0ABECd08c4d5E239bA4Cf6AEfAE5038673dac80E15968b3Aa079\"\n            }\n          ],\n          \"unlockHash\": \"9ed6C37CDEd4c7BbD14d850CCcEa7CAA45CF3fcD2a7aa2438Eb8803bf3cb5fA5\",\n          \"revisionNumber\": \"<integer>\"\n        },\n        {\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"A7ae4302f66f84EDFDc1452B9Dca5ac11eB4dE89Ee1deB6799a74a271a9E488a\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"payout\": \"53739\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"72109056\",\n              \"address\": \"CdDde483c4F72C88eDb3050E6bDA0fA6eb6BDDB56Be8D1B25e7EC2CbA0a37B10\"\n            },\n            {\n              \"value\": \"579811703\",\n              \"address\": \"EBdE4cE0D50fEECd878eFec364dd7BDeED342ea17E9CCF9DfD6a3ec1AAeE96fd\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"0309\",\n              \"address\": \"BCEcd4866d8ae62e9203DCFF4E2c0cdEAB6EEed61Df88C16054CfC653b818b2D\"\n            },\n            {\n              \"value\": \"32864653\",\n              \"address\": \"A6cCcFbFe4Cf9a3f2D31B6CD47941C4dfda8a28e8FCfCe075E7FEf1D08af4F3B\"\n            }\n          ],\n          \"unlockHash\": \"4D4Fa6AF5080eFd58D0368fEEC96f7fE4EfAD5A0a9FEFA6d4f142aCFe6eF480E\",\n          \"revisionNumber\": \"<integer>\"\n        }\n      ],\n      \"fileContractRevisions\": [\n        {\n          \"parentID\": \"fcid:F85dde798E4DbCaca1400d7E6b8758f08adA43e6aFEdf66fc3e1Ec6DcaD5Ae6a\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"0FCcBfB87BeedCAcA23Bcee51eE3285B41AE20B18f4FbDeDcEB10e9eCAd8a44F\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"aFeCBBcF01fFeaEfe7BFA87aCcE64A73aF5B7cfE48544b1C9bBaAA9C4abAa3BD\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"B5c8f53eBf1EeAdAAF3b420C7EE6a5Aa86eDdeCfc69A05cEAc7C2F62F3F76EC5\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"24641553692\",\n              \"address\": \"88739481cbcd81D8E76eAE97cDDFac6911AbedeBfC6d7d6CBDab52DFDbfa0A03\"\n            },\n            {\n              \"value\": \"81\",\n              \"address\": \"C5bd46F1F30fcC9238e571aDccDAf807D89D87f45d5f3C08f26152d0AEd16CeF\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"61779638\",\n              \"address\": \"6BF1D3FcE7bAcAC228c42e405998DA7aFd8FD74bCFeab869Fbbf521Ead2aFACa\"\n            },\n            {\n              \"value\": \"4\",\n              \"address\": \"Dd6AcC629C286c6DAD7F6eE4001668BCDb11E3FF9cb75ddb603e8601Dc84e90A\"\n            }\n          ],\n          \"unlockHash\": \"7640E4694bB60902fF6e4B6Cd6DAafa50Cdde6E4F5CA81F163Edb85Fe8478064\",\n          \"revisionNumber\": \"<integer>\"\n        },\n        {\n          \"parentID\": \"fcid:948CAb021A5d556DcdfedEb4F1611cB3d8DB3DBdFa44FFfefddBbF4F4ac7e209\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"fCa6f404aA27c614DC03bfb4f022F0749C01dB61d2BfeA276dB1FA59B5DdFb96\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"Bcffb00c2db492FF44c419dd1D6bAfD579bE8AdDA6D3D4C3faeFE8369a8E95D2\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"CfbEeEabcCDA35Ab0Db11Bbc0686d7cb2d0EEa6ceE958a5ED03b3AFD0cAAbC70\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"0107\",\n              \"address\": \"7CeEaa7989a032E76fb8F9E476F7BABe7e5ebFfa3a5AccB2BAEDAaFeDf5E56d3\"\n            },\n            {\n              \"value\": \"77588861\",\n              \"address\": \"ab301F73A5CAFBc7ECf7Bc8996959D90Eda6C7Df36b30E72eC3f47FC4Bd43F4B\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"71723781432\",\n              \"address\": \"dcbDDa1aABF48cAb820fEbcE9336b3A22C4CAE5CfcBb0E93c06eCEd7bD3D1Fe3\"\n            },\n            {\n              \"value\": \"103578475\",\n              \"address\": \"bF8d4BcCcBDf655a7e384E7174eC92cd8e613DC62e11eCAAAd03Bfb5CcaFec77\"\n            }\n          ],\n          \"unlockHash\": \"D6ffadDEcED3c3eCA65D8E0604AA064277a2Db7780C85ad2D0695bfddc5ac4ed\",\n          \"revisionNumber\": \"<integer>\"\n        }\n      ],\n      \"storageProofs\": [\n        {\n          \"parentID\": \"fcid:DdBce3eabA6aEC6742EEde6239dEc3dc5FFee0Ea7A4D44c5fd02B8f883dC5cA6\",\n          \"leaf\": \"<string>\",\n          \"proof\": [\n            \"1ad6111DcA7f84a9F4A3FEf7cfa2AA4cbe4cc53ddc0998Aa271050B5Ea4dbdca\",\n            \"df17dD7eE46455C0Fa83b0B3Ff5e9cbf9cce4DFaa719cBcbD63a5e9A487c18c0\"\n          ]\n        },\n        {\n          \"parentID\": \"fcid:93Ee1e922FB8E31DBBEB7866b2c60C253AdCFE4BFaD9bE74058f96d65310dA3C\",\n          \"leaf\": \"<string>\",\n          \"proof\": [\n            \"B929EcdE070BC6fA91308C795FD9c0b1a830cf82dc4c98B1Be7473D5CCb182b0\",\n            \"7CFcAAeA8139ae4ceb5D3C7dB6c9A3b4bB0E5ca56EDcf328f7748B238c59DB77\"\n          ]\n        }\n      ],\n      \"siafundInputs\": [\n        {\n          \"parentID\": \"0B285BfdFEA84901aa8437cA1ADb9e81d8a1Ebc0D78a0406c8AB14AcdAEB4635\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"1BEf84dAd03ADEA5aEDf4961A90ec07De4f6C8bC6e75C0eee5afde1c2DB8BD9B\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"FD159FD1E9F934425Dd7D248D8e7D2F7e3a8E339957C05D1CdC52Fb0AC6d8d38\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"claimAddress\": \"bF666c4297cFCd3b2BEBf44De22B0DfeE5A8B7cae56ccC4E5432C3759fAF911D\"\n        },\n        {\n          \"parentID\": \"C577D9aFBf1eDebb0D9aFD57baCafd27cBFdC45A0cFF271CbCb80cdDa6db3a39\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"3C3bB88aA29dEEEeDde28ba2294fa2572F48084fbc3ebBe1b6FC89eABF83f58d\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"5d67D3cb6d66efF0DD115ca521DCAA807D03eEe83f5C05AD1E9990B5f336D9B2\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"claimAddress\": \"4b8b0Ae34ef5663282bC331d8BC1f18DFc4cafA681615b3Ac2f4dAFcf257E01B\"\n        }\n      ],\n      \"siafundOutputs\": [\n        {\n          \"value\": \"<integer>\",\n          \"address\": \"EF77BCfFBcE74987Dc9757b4D1C4F37db2d3ae5FB685cec70d0AF80A1FB49A3F\"\n        },\n        {\n          \"value\": \"<integer>\",\n          \"address\": \"5cA8F80ec1eeAF2Ff5bCF7cFFFACBAA15316dBc13B97E7CEaE790ebc2DCddBdD\"\n        }\n      ],\n      \"minerFees\": [\n        \"33856493266\",\n        \"799872\"\n      ],\n      \"arbitraryData\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"signatures\": [\n        {\n          \"parentID\": \"aBaB23efDecC0Df2C7dA2e3Cf81cC02Cf34CFD811e6CabEc181D6B6ABbDafAa4\",\n          \"publicKeyIndex\": \"<integer>\",\n          \"timelock\": \"<integer>\",\n          \"coveredFields\": {\n            \"wholeTransaction\": \"<boolean>\",\n            \"siacoinInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siacoinOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContracts\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContractRevisions\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"storageProofs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"minerFees\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"arbitraryData\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"signatures\": [\n              \"<integer>\",\n              \"<integer>\"\n            ]\n          },\n          \"signature\": \"7E91bA2cEb6aCFee32522765d9E1EF8DDeCe43cF7E56acA1B2A62276a12401a3\"\n        },\n        {\n          \"parentID\": \"A24dB8BAca93f4DBAe71eEFA7eb5CCF09ea80c2C71612Ccf0Cb68db9e6A87B1f\",\n          \"publicKeyIndex\": \"<integer>\",\n          \"timelock\": \"<integer>\",\n          \"coveredFields\": {\n            \"wholeTransaction\": \"<boolean>\",\n            \"siacoinInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siacoinOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContracts\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContractRevisions\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"storageProofs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"minerFees\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"arbitraryData\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"signatures\": [\n              \"<integer>\",\n              \"<integer>\"\n            ]\n          },\n          \"signature\": \"14517732d5dfbF27cDC87714A45dBfdd9EC13F5b20DE1Fc2216d9Fbefd88825c\"\n        }\n      ]\n    },\n    {\n      \"siacoinInputs\": [\n        {\n          \"parentID\": \"307ceDcF71A6dA885100fea3FA8B2516D8a33eDf6833fC42de8f06Aa65ecaEe6\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"44C1DF05FfdcEDAce7deBAcd4d11539EcC83Ae10B0e0c5E1bDe3CdE25a9f3ae7\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"5759C77A38f0fafac586ef6f800bB0A1bB6c6fAd06B719AC9147246C90dd27B5\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          }\n        },\n        {\n          \"parentID\": \"495ef96633bB2b84B3c4b28CFB98E2636F77Cdc0b5DdbAcfbBcfEf88af67d431\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"9FaAe5Badf4075cBCBfc15fA2e6cECfEfd1cdD38Ffbe8C0aBE67d6aC38e5C63C\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"eAeECBD30daC48DA874EA13a67DB4Ad41f26Ae7c0B79ca3d37eaEC92ACb3A8B2\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          }\n        }\n      ],\n      \"siacoinOutputs\": [\n        {\n          \"value\": \"8\",\n          \"address\": \"dAa9D04bC9BBaFDaAc8AD19bfCE0B83f6e342005fE4CBbF31bDEA8DE0cA1F6C9\"\n        },\n        {\n          \"value\": \"242870\",\n          \"address\": \"B5A8d0BcDe7f8C335DCc5D764653cE0ea95BBaDd60A96Bd7cdbd84dd9Ea19c8D\"\n        }\n      ],\n      \"fileContracts\": [\n        {\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"1dcDFf4DDbDd149bB17fBEFc3Eb561706AC747C3f38Fc84fcbF9E0Bb3BdCeddC\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"payout\": \"2118\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"295\",\n              \"address\": \"5eFE5DdfcdD1C7B8d9ea5cD15Da8E9987aDf8fBf2bBAd11Dc47DF4fdFB76CcfF\"\n            },\n            {\n              \"value\": \"01996490883\",\n              \"address\": \"88eb5F29BaB179a3cFebEBa8Aac388585d3ef9cEd66DDF5d177D80aCBC54c94F\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"097\",\n              \"address\": \"8A51B7fa5A1c562Bd0e3cb92eF8cAbcE34cD2Cbc9FdB3244B67bF0C4cc1FeE2b\"\n            },\n            {\n              \"value\": \"6081420\",\n              \"address\": \"a47ec46239B579e3C3f4B4FD6df20499dbA2c16Ebe9e02F6CeAe1edF5A1EbD75\"\n            }\n          ],\n          \"unlockHash\": \"0E8dF0f7F3edF5De29248a9aaA8dfe14ced1b5308cFF0a2Dd93ba4ba0C4B8Cf0\",\n          \"revisionNumber\": \"<integer>\"\n        },\n        {\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"01cf7EE51dCd27a57A6C7EacfbAd469f62E8F2d4Ec39fFaE2AdEABfe75eaBf72\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"payout\": \"876\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"61334902\",\n              \"address\": \"eBF546a17FEDfb7a3eC2aB8c075b543EcCB20A3BEB85D502CE4Fe9b5dAEd9fE8\"\n            },\n            {\n              \"value\": \"2841807382\",\n              \"address\": \"c215bbd8FE1EEB1C43C9DdC3e43831242c67F050C9aCf78E08ba637A1Cf41426\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"13388874\",\n              \"address\": \"9ef2F4AFCCcfA45be8edCfBCEe25e72ff7ca6E7A7367E52AFEDbCce00e0CBA16\"\n            },\n            {\n              \"value\": \"65645918322\",\n              \"address\": \"B429DF29135d2Fe24227aa0f4288fA5d85Aab905c6DA2fBd1d8BaD84a908fDab\"\n            }\n          ],\n          \"unlockHash\": \"D7CdfF3476ABf0ad7626ad37E03A59d4Bd4c50AC0D04FcBC4fA8B9aBc811fD0b\",\n          \"revisionNumber\": \"<integer>\"\n        }\n      ],\n      \"fileContractRevisions\": [\n        {\n          \"parentID\": \"fcid:6fF33bd5e7ebc6B3A9Adf290cA85ecc8dD9813c6c489b454A0b4a6ddC4DD8f2C\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"eAb14BAD1A68Cb0F5EE4cEc99BfB5518CE7bec07e952e4ef8f506DB35BdF4ECf\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"1bD4d9EcC8f3Eff5C3A20aD6EeA2BACF9f824E9BDaC5ED13B69d0FE59CCcDb0c\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"B4BfDd2aCAD31AEa62d7dCe4aDB3CCDBF4A02157bB8dDD11B2955EDb4461Bf1b\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"683\",\n              \"address\": \"333412A02A771170B8a1bcFF9D4066e5CC517D8e5ea5D00FC37d137A29fea3F6\"\n            },\n            {\n              \"value\": \"853995\",\n              \"address\": \"dc21E28cB4C0403EE1F5d27DBe449adD4E5D43B85864765EfA3De8aeDc8d2464\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"42925\",\n              \"address\": \"1FEcAEF0CEB2885Bbc35fD23dA8515822976Fb1C8e755Ca54a1e49F33277834C\"\n            },\n            {\n              \"value\": \"20312098357\",\n              \"address\": \"CD8dBE258Ee7bAeBEBD9b89a64dBC1eb5Bbc95fD6dFF1A4Eb0F558455aaCFdE2\"\n            }\n          ],\n          \"unlockHash\": \"e9755C12C456De0EF2E0C892AeE35F84d7CBe26041A83DcEdefeF46fe3A8A32D\",\n          \"revisionNumber\": \"<integer>\"\n        },\n        {\n          \"parentID\": \"fcid:BEEed24b2357b988aB48ed4E6c6D2dA4CaddE62FcF834E4BCA0C95C61C0F0Fc1\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"1A0F8BB60E66D1C331BF8b5c793fBD4E8eeE45ca3E1fE8AB52cf6ADBe755be70\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"26d27ac503Ece4A476Af24a2DaabECbAdf0dedFA4AFd7Eb6b2D7bDdaBAe9bFDc\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"filesize\": \"<integer>\",\n          \"fileMerkleRoot\": \"a7475aE21190EEa3EF3A97a09eE70aCfEE082efa0Dea974DbacAc7AcB34B2c5B\",\n          \"windowStart\": \"<integer>\",\n          \"windowEnd\": \"<integer>\",\n          \"validProofOutputs\": [\n            {\n              \"value\": \"5890\",\n              \"address\": \"3BFdF4cb37382c7144aEF994C82f212F84531AfaaA7820a86DFF75147DB786f4\"\n            },\n            {\n              \"value\": \"01\",\n              \"address\": \"BF261cDa9CEefb5693290DaCefdfC05725E50A73F3BB95A2FffddFEDaE4c18Df\"\n            }\n          ],\n          \"missedProofOutputs\": [\n            {\n              \"value\": \"6046\",\n              \"address\": \"d345bd7dcFfEF99d6a7e6700F343eAdB77010BDCB6FB0726cFd88d1Bc3Be1C22\"\n            },\n            {\n              \"value\": \"33802517\",\n              \"address\": \"Fe20cbbc4E68B662CA4aaebFAC0bdF2dE50E95EB88F6EbBaF41d2d528df2DfB0\"\n            }\n          ],\n          \"unlockHash\": \"792bAE92672d0bb9F03Dc8E4EfDcED6dC03E8eBf44678eEb0F884be275b72aAF\",\n          \"revisionNumber\": \"<integer>\"\n        }\n      ],\n      \"storageProofs\": [\n        {\n          \"parentID\": \"fcid:fE1484C9E7CCbFEe6a4c8a0b8CbA03B5E8A1911A5ba9c45befFCbaE8EFd18BB1\",\n          \"leaf\": \"<string>\",\n          \"proof\": [\n            \"f5E73a4D5A1051ACc342D2e81f8D3E074a015FDEc1742102ddAdcd14D3c76aAC\",\n            \"B744E4E4aa14A2A5Ea2AE36f5CDEf1F5Bf3d9AC69edf1aBA0AD5F07dA34DFDa4\"\n          ]\n        },\n        {\n          \"parentID\": \"fcid:840c3b9202aEcD39a13bA40CA5aEc93EDf27db50DfbCD382b5886AFF8cdA87E0\",\n          \"leaf\": \"<string>\",\n          \"proof\": [\n            \"aefcdf16dFE54587EFfe8f67EE6405cad7fa829236e30F7a010AA2c44da513F3\",\n            \"02ab9D1288E4bdd3bda16e2e5Ca08a9AF8EFb1fC7e620Fd8be546A69E3d5cbe9\"\n          ]\n        }\n      ],\n      \"siafundInputs\": [\n        {\n          \"parentID\": \"295a2f59Be9BBC80AeCA3FCf6d87AECB18d8FedAd96350a06Ad5C3bFC9A8f2cA\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"97ba53d72f8cd72f9E1E4bfF9DF2B4EDaf0Da9366111aBA19E973a9dFce9a25a\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"A1600BB949FEc8B929F5acD1260BC2Afc1EacB76FEe07878520d1991A27fC9bF\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"claimAddress\": \"10b4eD8eCEB8FE07A8AC3EE22DE287985CAEBD0E762B6EC14C8cCC4AFc6eF509\"\n        },\n        {\n          \"parentID\": \"4F007deC04F1228688Cb6Ed6f9c5C6BF348007D935B6A0696DDd3fE7687dcdFb\",\n          \"unlockConditions\": {\n            \"timelock\": \"<integer>\",\n            \"publicKeys\": [\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"745F1E399Cbc3781dDCe31E1D5B5d4ebA7Ee6D26DD021E09826a0F3Dd3d47263\"\n              },\n              {\n                \"algorithm\": \"<string>\",\n                \"key\": \"854149A01C2719F0Fdca4e0b309aba1bEc2c5beD6c6Bca32EeC5DFFC4B5e3F5f\"\n              }\n            ],\n            \"signaturesRequired\": \"<integer>\"\n          },\n          \"claimAddress\": \"E3C769e3bed9C7cCd14feFCeE66122ac13205182eC7FB5fE0E5C13BBe06E88Ff\"\n        }\n      ],\n      \"siafundOutputs\": [\n        {\n          \"value\": \"<integer>\",\n          \"address\": \"4DC2B9FcC285E8153c007a0BCD2eD5FF4eF45e726b9fB3649bDb7d38ffBb50fF\"\n        },\n        {\n          \"value\": \"<integer>\",\n          \"address\": \"f54adF834A1b0F16aFe522eFcc6B4A607DA0ED16a72B9b4A7E021B02EDeF0F83\"\n        }\n      ],\n      \"minerFees\": [\n        \"8021692600\",\n        \"3392953476\"\n      ],\n      \"arbitraryData\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"signatures\": [\n        {\n          \"parentID\": \"CBECcBFeA8445BE726eb43Cb6D36ab6C36FEEebeb13FFC0FECA45FaF1bEcEc5A\",\n          \"publicKeyIndex\": \"<integer>\",\n          \"timelock\": \"<integer>\",\n          \"coveredFields\": {\n            \"wholeTransaction\": \"<boolean>\",\n            \"siacoinInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siacoinOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContracts\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContractRevisions\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"storageProofs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"minerFees\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"arbitraryData\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"signatures\": [\n              \"<integer>\",\n              \"<integer>\"\n            ]\n          },\n          \"signature\": \"8f57F6266B672B5EBAb1E5392d1FC1E5bF27c105CfD2EDCF7150c9C3Ee6b4eAD\"\n        },\n        {\n          \"parentID\": \"B5dC2eADd2CfA4B3Adb1deDCDa50Da963a2bbCE3Da6c73bFCC0BFBAE577B6aA7\",\n          \"publicKeyIndex\": \"<integer>\",\n          \"timelock\": \"<integer>\",\n          \"coveredFields\": {\n            \"wholeTransaction\": \"<boolean>\",\n            \"siacoinInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siacoinOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContracts\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"fileContractRevisions\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"storageProofs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundInputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"siafundOutputs\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"minerFees\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"arbitraryData\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"signatures\": [\n              \"<integer>\",\n              \"<integer>\"\n            ]\n          },\n          \"signature\": \"25B939e76C0FeDA8e9B7fc4A762aC1CdD0EBdc05F406Ea1a8fad0efE3f75a5fa\"\n        }\n      ]\n    }\n  ],\n  \"v2\": {\n    \"height\": \"<integer>\",\n    \"commitment\": \"B55A32EEBd476E527e1542FEAbcE005EE214c2c2cFDBAfE63f3Bd5a1B1e1b196\",\n    \"transactions\": [\n      {\n        \"siacoinInputs\": [\n          {\n            \"parent\": {\n              \"id\": \"705fC5dD8E5C44Fc9A5FA8A7FbAf1C3b848e91BCfEB3ed22F827C440Bec66f3d\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"3aC5Aced0dEc1386D6FdB5edf61eDe69BAe2269EbBda53D28ae2CEeB2158abF1\",\n                  \"D77AcAfB5737ad38cfFdB8E95C87C961b327EA3CA45AFecBcbB52EbdC82A8b5E\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"79300\",\n                \"address\": \"b2ccD5c33B2a8DC6E5B22f3cD86D88608E0BD3b1dB94CCfAaBCEDdEB2CbaBAeA\"\n              },\n              \"maturityHeight\": \"<integer>\"\n            },\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"ACaAdabeEb13c596649E14ACBb7085C0effaaBCACc02fc392DfF374C2eBdCEDE\",\n                \"A66dE3ADdcC0171BBaf2E1fb8d7CEBdAcd941cDe15B04AAAB3eD24a0fB6fCfec\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"800FBEbC7ab703Df26bA89cCeE9145cF2a778B2cA179ce7a9AEdBfBdBdE9Cee1\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"04B1DC11E09FF5405F4c9bC8A6D36fF2369dcCfabbe0baA46cFc1cbFD3B47dAD\",\n                  \"7BEef3e1Bd85f5E15b08795eBA3fbffFA814EEFe2fBA48D56dF4D1eCddcC0Cc5\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"000\",\n                \"address\": \"2C0ABb03e7BDC2Ead3DE41baD7dbCf0f0AA5538291Bda1cfDaAD5cDcBC8D975d\"\n              },\n              \"maturityHeight\": \"<integer>\"\n            },\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"3F959BecCc7938946AAc311dfb0Fc72bFce0185bceaCFFFbda091EDc60cCaBbB\",\n                \"Fd4eaf2c911BBa30Eb7b62Eed3c159F28DC9C38de68649bC58eedeA8E6aCFC9c\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        ],\n        \"siacoinOutputs\": [\n          {\n            \"value\": \"93420603\",\n            \"address\": \"0E2e8dAd42247B64aBcf3Dd64554276cbEd05fBDDEA7edD409E6Eab1fBaD7CAd\"\n          },\n          {\n            \"value\": \"02518\",\n            \"address\": \"D19fcd5c2D3944D4CD55dD8a3c4282E49DE961AB5Ae8FDD72Eb9f97B4D234B20\"\n          }\n        ],\n        \"siafundInputs\": [\n          {\n            \"parent\": {\n              \"id\": \"2e4CeAf75bE95eDCBc4575Ed1b77beCf85BEbFbdbDBBA23eA1EefF87BBDA69FB\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"Af8Fcad3c9DCdcda7e4c23903C782Ae8Fe6C4fDf8b2AbE4394bCD01775A9c976\",\n                  \"D293ffAFA8BeF7ACbA97AB1Fbe27BD3Eb5b8A3fcC59A90D5a5eCEa53fDe9EE5B\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"<integer>\",\n                \"address\": \"EbE3bE49EE60dD5e8B2Dca7D0E80ADB7bF96b2f6c054efd12C3A3aCb9a123e12\"\n              },\n              \"claimStart\": \"605029\"\n            },\n            \"claimAddress\": \"dBfe94c98DaEcdfCa50a5A5e751dB4fB7bCC17Bd4fB70FBbaf9833cA126090f5\",\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"FA737f0C7fA5e497E37d8aBdaba8C5683370D89219bca37d7b6DDCfbcB3C520a\",\n                \"fEcaFB074ce5d11fA264ff3C7B62eF860Fefc0d745c0911AAb12123FDDDE75b2\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"Ffe5e7F1Ffb4e86d1d06941Afd829D69bdae59b4eaFBEFbfb2e348ff91abD90B\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"AFF1E6aAb95CcF6B77A4aFf9C5CCD29823edD6Cd275aEeB0feEeF0CfF99cf25B\",\n                  \"16d8065C4c66501e8ABaE672A173df75b576AfD8acCf5Bb5E7C58DBda1aA8BD6\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"<integer>\",\n                \"address\": \"A9E2eC7C6322dBaDCcDd743639122717B25cE7c10f3600ca9cE22B4fF77cAbCC\"\n              },\n              \"claimStart\": \"231063\"\n            },\n            \"claimAddress\": \"c23fEC5c09f87235dDAc07aC7aD76f4A85FBfBbdf25e6BEaBc49c0a82dbA2fab\",\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"11323A5E5D5AfC9688D76CAa5F8Ce128FB643EBC7d1dA6B125AbadBF6BA500fd\",\n                \"8FfCa2a2ecFae635dAa855f4cdeFaabCa8Bd0AF8baBc6F4ed4BF7FdC7dD5E49e\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        ],\n        \"siafundOutputs\": [\n          {\n            \"value\": \"<integer>\",\n            \"address\": \"AFA20cF54596CDceFe00e911a84dcfc2DfefaEDcded8475DBbE41DCeD6b69Bb1\"\n          },\n          {\n            \"value\": \"<integer>\",\n            \"address\": \"d70b1fa50eadddac35d983a0BF47cD8Da1E2ce200A7DBC55fdA7059cD03fE5e1\"\n          }\n        ],\n        \"fileContracts\": [\n          {\n            \"capacity\": \"<integer>\",\n            \"filesize\": \"<integer>\",\n            \"fileMerkleRoot\": \"0AaD9fdCaCAc2CEad7f61787CA2cEBef01C072b050Bfd3eBbf6d5388DaB57fEf\",\n            \"proofHeight\": \"<integer>\",\n            \"expirationHeight\": \"<integer>\",\n            \"renterOutput\": {\n              \"value\": \"223018\",\n              \"address\": \"417cBF4F19AF2cD3ceCFE618BcbA8b7cda46A76d2C1e0E1A49A8D71AFdd2A1d8\"\n            },\n            \"hostOutput\": {\n              \"value\": \"63234\",\n              \"address\": \"62cFBBca1651EdFE0d81fec9FB554fFA9fE3Afc5EF4cE6EaceddB2F7E74AE70C\"\n            },\n            \"missedHostValue\": \"8766394\",\n            \"totalCollateral\": \"4\",\n            \"renterPublicKey\": \"ed25519:fab12eCBeECe9eAAB42ECDc640b2eB8a0e048f7f2bB6d0b4Ff53C0bF482edD89\",\n            \"hostPublicKey\": \"ed25519:8aD848AB6FaB29a70BfFbdeDB6FEAa2EdC6eB56E81BEe935d102E6B1C4FE052F\",\n            \"revisionNumber\": \"<integer>\",\n            \"renterSignature\": \"3b857660F4517C72CEDdCE9D7E86b6bdAFDC1DaFf03A9C3dfDe6A0B0C9B0EFCC\",\n            \"hostSignature\": \"eabAE5BEf51C0c1256da91C8506e1CFDeefA2B25939fE5fEeCc560ddE04DEFEf\"\n          },\n          {\n            \"capacity\": \"<integer>\",\n            \"filesize\": \"<integer>\",\n            \"fileMerkleRoot\": \"CCDb1ab48FeaABd1D4a97819Ed1a8eE28f0e8E7A4AF8DeecABA16dfe6dB9A2e7\",\n            \"proofHeight\": \"<integer>\",\n            \"expirationHeight\": \"<integer>\",\n            \"renterOutput\": {\n              \"value\": \"50\",\n              \"address\": \"ffdfc0EEF57d9df4facc33Ebbd7FaE7beCc2f032DDE18009cd8c97eca6fff7A1\"\n            },\n            \"hostOutput\": {\n              \"value\": \"79\",\n              \"address\": \"6C2adb65c301D60c0E84065D6C0493eAaeD0723e1577B394cefea9EaA5d9b975\"\n            },\n            \"missedHostValue\": \"4846025\",\n            \"totalCollateral\": \"5566721628\",\n            \"renterPublicKey\": \"ed25519:170C46b0Fb44e10C20D6Ba82bcdbf3DEa4f2d8E7bcd49F7EEA6dBE3cdDD6eA4E\",\n            \"hostPublicKey\": \"ed25519:3ffd0bc3aEdfD5fCc70BCb5fc10e05555cBddCb79abfe32eFA20Cd71ECafaDF0\",\n            \"revisionNumber\": \"<integer>\",\n            \"renterSignature\": \"6dc85a2B8D60fA860798a784360aCE616ebE1A5BcF7BA5bb6Fc64c39FBA30E4E\",\n            \"hostSignature\": \"dba72a7e3560C82F29541D17dCB7FCcEa0a53fE4eaE723b93DFaEC3b482D9fF2\"\n          }\n        ],\n        \"fileContractRevisions\": [\n          {\n            \"parent\": {\n              \"id\": \"fcid:17473FCEBD2eeFDad8F265B4843A4cF9BFfABA9DC6e9AE74Fb7583aF6AFfE8A4\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"FEe1d75F1557ACCaA928EA0dc0Caab36dE70EBE4430A3dF8A7f4cfF9422f533f\",\n                  \"0e71B3C3192cd990356D893a50adccA6B78b9CCb07dfdEbbF3BF12d3e09b62E5\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"CbBE18eb4AE059BAab29Ac3891Debe3a774BE28EcEE73e849FDECfbdC76F6366\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"8111252673\",\n                  \"address\": \"D99b4Bb30AC3b34DcAD3C0DFD4B4f871ba1De90b4e084eEBD4DaB962caEA4CA3\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"20\",\n                  \"address\": \"1cDCdfaAA190871abC1a9DfAbCacD31bCcDE46596d2C1dcccacCFC2dd2BbBDE1\"\n                },\n                \"missedHostValue\": \"57\",\n                \"totalCollateral\": \"704377\",\n                \"renterPublicKey\": \"ed25519:Bf60fe9b4fcb62De5Bd9a0aCE87Ed5a0d5aadd76BEaeee46398E23e0eda9B17b\",\n                \"hostPublicKey\": \"ed25519:B907b1C6CedDFe6AB47F6f8d5309cd2f00af65ffA67c91807E6b93939892F8EC\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"A17Ad9c7DFBdC84cfbDeaE397fB5994ADFdDa1d6F11f2F4c465e8240867Eb712\",\n                \"hostSignature\": \"4B0767ef0E5fb1AD9F2fea4B01ffaC10a733B1aeFCAD9DA10d53B2bB6AEaB85a\"\n              }\n            },\n            \"revision\": {\n              \"capacity\": \"<integer>\",\n              \"filesize\": \"<integer>\",\n              \"fileMerkleRoot\": \"CF2bad7c6268630Ca523e43dB92781bDb8DfdBDcD93bfa6439aAeD1a2eFC9cFe\",\n              \"proofHeight\": \"<integer>\",\n              \"expirationHeight\": \"<integer>\",\n              \"renterOutput\": {\n                \"value\": \"30041237766\",\n                \"address\": \"7ECae785F75Be2Cd8D8Fb5D7eDAAe8F94AFf4e6F0afCDEF7F505FDBfce3FC9F0\"\n              },\n              \"hostOutput\": {\n                \"value\": \"59\",\n                \"address\": \"bbae59A7255B3A88a9dfFadF6Fdc9adF5dF6F1BDAaA380E3d11BF27bD309522B\"\n              },\n              \"missedHostValue\": \"8311381261\",\n              \"totalCollateral\": \"3836\",\n              \"renterPublicKey\": \"ed25519:BF7D3ecfBd1a68Ed3c08EbeE489b5B0da84a86f4bC37d4cB8F6c8FF598fe9dbb\",\n              \"hostPublicKey\": \"ed25519:0aA06Df5Af14033dE6a292b50036DcdD16C9Fb3ed5A5B67F7CceDffa8f6ee47C\",\n              \"revisionNumber\": \"<integer>\",\n              \"renterSignature\": \"0DAAF5A99E623fD88f9Ee1aa0BE9c1a0c5f17D66AfcC48EaDC7A2a3089a8E5Fc\",\n              \"hostSignature\": \"E1D856bBFceAA51d8aBc2843DB101d278585DbbFe99E4E4539EFBa9c3bDeEC5A\"\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"fcid:0ADaF4dCEA91f3ecee27a64c2d0afB0ff81B0c500a3CCEbb28FCFB84DdcAb8C1\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"2A1634bd3f7468a4CF7da0386301f4c52fF7a1D3e9ab1BDb01ad499B34f8eB04\",\n                  \"6abee36eFe2e7bdb591E5457E35dBB7d0Fa9DF3336fdD093a6ACDCeCe6880866\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"68F3CC5DBE2fEaC36fFA3d34ebAd5CAD0faA44Bb55Ec25EBeFff3bC8B4bcfe83\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"032863901\",\n                  \"address\": \"f5f1f93C1d3948a1401cBD1dA7C90e51aA3bC799DAA416b2badC6cbDD2EC924E\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"771933\",\n                  \"address\": \"B7d838ceD5dFC8fC22d1C47BE1BD5f43c067BC10b7D1e7CE552c3F3213CE0FAB\"\n                },\n                \"missedHostValue\": \"587\",\n                \"totalCollateral\": \"32959\",\n                \"renterPublicKey\": \"ed25519:4b7DcBD2BefD9cF3F2e5feFe9DD72Fc79DDBE05cBb6FDaEcD714d04cbF9Bf0e9\",\n                \"hostPublicKey\": \"ed25519:DE2a1Fc11Aef446508d40E0a245F50DebcB6084daBfFD96eDA4BCCAEB779d5f9\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"6C7660399D3A1bA27E2561BDDfaCAefC4B20Ea0caEe0ebEF3BbDebcBEA7fbFe4\",\n                \"hostSignature\": \"6B1Df1C3057BFE7E9A625E23A8BB43948E59f0E6db6278Ad665FBa5B6772AfdC\"\n              }\n            },\n            \"revision\": {\n              \"capacity\": \"<integer>\",\n              \"filesize\": \"<integer>\",\n              \"fileMerkleRoot\": \"Ac89CedD6ae15AB9a06eCBe42Cd9AC891eEb21F1f195cD8bCBf6E00FEf4ccfde\",\n              \"proofHeight\": \"<integer>\",\n              \"expirationHeight\": \"<integer>\",\n              \"renterOutput\": {\n                \"value\": \"98740639\",\n                \"address\": \"5e6547C2DDFeb6fEa215be5BbD2029E93128ba372490a6E1A2dC982b3cd6CCCc\"\n              },\n              \"hostOutput\": {\n                \"value\": \"779\",\n                \"address\": \"4bdb5cdca9cfD3a606d6ae55fdCE74e9eb92c2Ae9FCf21f6B92fbEca6EED6e41\"\n              },\n              \"missedHostValue\": \"95075028\",\n              \"totalCollateral\": \"50\",\n              \"renterPublicKey\": \"ed25519:515DCc3cd1FCc02e5ffc881Eb26e7F8B8E9BdfbCCa4a5a0Aa8FFcaE75477e82D\",\n              \"hostPublicKey\": \"ed25519:DED2DAb75AAcE51Cc5B5Fd5eCcB4FA207C992deCCbafd5eefBaa3F987d7ACc09\",\n              \"revisionNumber\": \"<integer>\",\n              \"renterSignature\": \"EDCB1e7b7DEfAEC11ae8422c419afcbFf7eeCdF982A2d65CdAECDDc5Cd14657B\",\n              \"hostSignature\": \"79aD4Cc9d5cd3c13deE25AEFc9Dd87EBAbfaff4AAd446bD692F6EcDbce5d46ac\"\n            }\n          }\n        ],\n        \"fileContractResolutions\": [\n          {\n            \"parent\": {\n              \"id\": \"fcid:e9Ae35BA0A7B12DBFaA7d4f7153a6ff7937fFdD07A0cf897f96ce5EaCdf7C4b7\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"fcB26aCa5D4FfBb58eF0cF0c3F6da33637aDc1cAcc2a7B6e09eAEac8DD696a47\",\n                  \"B0e644BcdE47B39de008e3A71CEa76a2CB7a96dFd7D53EAA1A90CAb346FaaAF1\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"DD003A8d24Ae57D3AEBc3AB53D40DF095dEbDFa36EBB77E936DdCB87CFC5fbef\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"28\",\n                  \"address\": \"9Dc231a4f2b075f1769a7cAebB853EE5341afaB7BD03820aA2FEbbb6BA52ADe1\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"00\",\n                  \"address\": \"641c0b1953Cf4B0c2E2EdaAaD00FD87565B2F7E30BfCB356fc71133BFeCD1caB\"\n                },\n                \"missedHostValue\": \"1425976521\",\n                \"totalCollateral\": \"378957598\",\n                \"renterPublicKey\": \"ed25519:C8ED1dC6d7a0CDC9B21fcF98daEBc7Fe36d43daE8bE696686aDBD52bdF597EFC\",\n                \"hostPublicKey\": \"ed25519:b4DBA959DD2BCBE6EbC16EabD2aa099D573bcbdCb771beA5FAEa2ED41Df186D6\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"759dD6aa569Ee948AA5afF4c09cffE3abd46DC0CBd036ca5DafD425DfAB47B2b\",\n                \"hostSignature\": \"aF9DB0fF7aEB3A7d50700C0fb8AC0c4D2b55263DDC119084faEBfaDC72FFD9de\"\n              }\n            },\n            \"resolution\": {}\n          },\n          {\n            \"parent\": {\n              \"id\": \"fcid:AD9AF804e2dDdF3F0DbAfc677084a84D85Fec45Fa30e8b2eE6dFbAA77F25c1fD\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"45EBCE20E63cb78Da2341a9aCB103CAF34b62d4D4fc6edeE9ebBDE9FeB5D7fc8\",\n                  \"42aD46EabaA5ECB9bf5bB2FB3ee89B612d11143Bc2F57d9680bAAc6CDbcc95C5\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"48dB27cFEe0b101E99B4c24c605fFB4DcdB6ACCB3027EE576FDf53AFADE69e68\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"762\",\n                  \"address\": \"BD7f3fB72Cf9eeFfDBbc977e09DBE9C0E7a982C1D7C168f4872ADf7f985f69A0\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"98573103\",\n                  \"address\": \"8Ed26Ed43F2Bf5Eb6A2072Ca8CE0a62e922213e9F73C2e5CefCAEF17AdC3E8F2\"\n                },\n                \"missedHostValue\": \"2970134374\",\n                \"totalCollateral\": \"7065\",\n                \"renterPublicKey\": \"ed25519:B1c9Fa49Fd80a7a03af2E2c13dF51052EcEA235D4d9a2D6AEDb0635Ef2aDEbaB\",\n                \"hostPublicKey\": \"ed25519:973aAf446AeE8e7c9E6B1D8a4b1FbA411c0eEBf7af88412EdFdd9bF6c541bA84\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"088B56AeD0A6ab6fdC07EFBB48aeDd36c3eE279bbcdAAFf70fd6CCF6DFA3DEA6\",\n                \"hostSignature\": \"1EEF4aBb6dBa0ceeBf3bE52001CA8d552e2ee9CcEA5bFadDdEE2Dc44bb67DcfD\"\n              }\n            },\n            \"resolution\": {}\n          }\n        ],\n        \"attestations\": [\n          {\n            \"publicKey\": \"ed25519:F6Ccd32906F1BFB4fF2AFddeaBCbACea24e9feD61E9D6f1aDaD16341fE3EF49c\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\",\n            \"signature\": \"6eC5c1F31AeEa556414Dd8Ca4bBEcd05EC4C9e1Cd8D49C70AfCe29ed46D90226\"\n          },\n          {\n            \"publicKey\": \"ed25519:dc2d64b7f01422F6af457018DE6edfdddB91629da9a0dCD94A2F5BD2EA3ab7EC\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\",\n            \"signature\": \"fAe1c0Ee29d923e1fFFf2ac8FE20FDEC98fE8ed3Bc6B3AdBe8eD2F6321E1B234\"\n          }\n        ],\n        \"arbitraryData\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"newFoundationAddress\": \"8c9519E57C4BFdfFbB09b16EDc257Ec13D66A6a9fC4d2e48982a1CbF4aBd89F4\",\n        \"minerFee\": \"89740602040\"\n      },\n      {\n        \"siacoinInputs\": [\n          {\n            \"parent\": {\n              \"id\": \"D2C7A2cbE8BCFdDf5aa72a7a8cee1AB3472baec1f5DE345E5ca998D81aADa31F\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"3cf1C38689eAEcFc4dAb84bC7b3393F33C2c4d990DA66336E3E3671a4DcdfB1B\",\n                  \"FFAd9DB99cBe74bCA37A7Cf51d5bD4BC3f64CDD83AC82889Df70aEbEF4e9c818\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"326964\",\n                \"address\": \"BDfeF8B41cA8FFF9Dbc3192eA50BF6e3Ad85631c817ceF146D6826C58b3c810C\"\n              },\n              \"maturityHeight\": \"<integer>\"\n            },\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"6A7cc215BB4ba7DdBA0EA6CCcAaC2E19BC36394Cd50D2a97fE2bAab98F4B00a4\",\n                \"CC59a1EdAF961fAd26aDA6ce5a45E79cdB1fAAD1E9Ffb9ECc4ef22EC71BE344c\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"cEeABbd3DA55Ead5Dfe21B2c58DE14f2c6E0aEe6ca75DacE07ef9D7AaacF03CD\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"0F4e2fceef538CBfCB5DF5947d9A09D5c8B2ffE4AE5e04AdcBeAadeCeA2Fe6aE\",\n                  \"1eDc9eda94a2CEB70182eBf1C35ec3BC9bEa57D1219ea7CFb54F987EeaA4A57f\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"1819061847\",\n                \"address\": \"DAD78bFade9E3a0BabCb8A48dF8cBaB076A35fD2492E9Aaa9DDcd7b3dF62eB3f\"\n              },\n              \"maturityHeight\": \"<integer>\"\n            },\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"9bEDcdb0Bdc0fBb9ce058317a6BCDBb3E85F0DbcA8Cab65878d16b3F7C62A3c9\",\n                \"f24eF831C8ee7F5bA4e00d194ddC2f2b31591f35FCeeA6fee128eCAD6EeF91a2\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        ],\n        \"siacoinOutputs\": [\n          {\n            \"value\": \"59\",\n            \"address\": \"14D6F2e215b0eAF9b620D54CBCbF09dec94A8bDe58B64C8Cf0EF0Ecf68773Ecb\"\n          },\n          {\n            \"value\": \"79623866368\",\n            \"address\": \"0b9cee2abBaDbd0bDf7cEB9aee83026F3e88a6389066cF8286DDb4d2d28D96Dc\"\n          }\n        ],\n        \"siafundInputs\": [\n          {\n            \"parent\": {\n              \"id\": \"C46ac66Af77BDaF042828aFaC6ead0AA3DA89CaD8C39fefcf3d8C9aB221de29c\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"9486f0E9b7F3086Aa99ffdD3CDb06aaBa1261B5dDFa18ebc6eB8d67F2fe838Ad\",\n                  \"7226aF41db57F7C5BbFfF31673ef1E4bd459cDF9533Ad40aB6EBdaede124cBe6\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"<integer>\",\n                \"address\": \"4b3Cc70879EfEB6bb3a94bC311C3dECeeA9c7AA53c94beAD605d0b70B9D360F8\"\n              },\n              \"claimStart\": \"00026\"\n            },\n            \"claimAddress\": \"7e4Ec5dCe7AC0ded140Da1CFa6d7e8B81Eb48D6EdE37eA7FcCd69ec3cbBA12a3\",\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"199CbEf5CDDA9bf2BaD8FC394148dD5Ed371E10Ea9DbAaf10Dc5Ac55Ef80ccC1\",\n                \"cFE99D6fDfCFa38c2CcEC23beb4e2A5fEaf7BB756618bf1cBC0aA6CDFBDFCf6F\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"8BccFD30D7F7CdaefEbC9CB0DD89Df399d616cc81ACa8D5abac5acD237B86afd\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"bda35f2dceA18de64BBfFBE634c74CbCB577d0e43112Bb1b63ba3a533cE0a5aC\",\n                  \"97dD0872aF02d3df72Fd1FCA2eed58Ce5bDBE0fa34acbb0735098Ef66db3f4F0\"\n                ]\n              },\n              \"siafundOutput\": {\n                \"value\": \"<integer>\",\n                \"address\": \"049FcFAaB0E7Db8BD9FEA8c8b2f3Feec2bf42E090Ac1E2ef483139f573E6Add9\"\n              },\n              \"claimStart\": \"38178731663\"\n            },\n            \"claimAddress\": \"00Bf8BEb93A2Cf4FCef73ba154757F73Cbd2E2927cBC80dC74dB4ed66a2fbdc7\",\n            \"satisfiedPolicy\": {\n              \"policy\": {},\n              \"signature\": [\n                \"BFCc2bD18cFFbFC0DABCe760d046C4EeBaAA1BD22822e32e4bA9C5CEd598F4fF\",\n                \"e4d9eF2AAeDfa1e29CfD4553E6D389A199b61efdDFc03e857cC58fc81DeDF603\"\n              ],\n              \"preimages\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          }\n        ],\n        \"siafundOutputs\": [\n          {\n            \"value\": \"<integer>\",\n            \"address\": \"bc5Bf1CD399163510AAe0824c0CfF01B2F44DFdD0Ac13cD463c27c7f7D88C37A\"\n          },\n          {\n            \"value\": \"<integer>\",\n            \"address\": \"134EaFDCfC54f5dB7148A8bFD6a73763e42fC6Be7ef1Cd51f95DBFDF85fD4Ac2\"\n          }\n        ],\n        \"fileContracts\": [\n          {\n            \"capacity\": \"<integer>\",\n            \"filesize\": \"<integer>\",\n            \"fileMerkleRoot\": \"e01Ac402Dd7C1cBacf9cBaEACe7eedfA33c7DA5f4f3Db30efEEc3edf34Dd1904\",\n            \"proofHeight\": \"<integer>\",\n            \"expirationHeight\": \"<integer>\",\n            \"renterOutput\": {\n              \"value\": \"821776\",\n              \"address\": \"9f917ad6ebcF56fbd583F0A8194Af5d8Fa0c7a3E75ED4B8CA85DD2Dce9EE5Ae5\"\n            },\n            \"hostOutput\": {\n              \"value\": \"3028\",\n              \"address\": \"2e81FBC59e7ab4e6D520ccec19C15776FdAd66FfFC74a3865E797DfCF2BAc0D9\"\n            },\n            \"missedHostValue\": \"34\",\n            \"totalCollateral\": \"50627\",\n            \"renterPublicKey\": \"ed25519:EcaBc589DfFcd0AbFc590C29740FD010Fb07F04BE3249BB49F5B1B6E5e2bdcaE\",\n            \"hostPublicKey\": \"ed25519:90F88fDF854Dd791a3B859Ab9bE73461533BeEBbEeeef1bdd2F259Acdbe2E7Ae\",\n            \"revisionNumber\": \"<integer>\",\n            \"renterSignature\": \"1297A6FDACB24D4a2502F53362B46A8583f2b5BBEe3c3eDcfE6FeA62b95AdcFa\",\n            \"hostSignature\": \"0D7EfFB015d0A185Bd31C6DaD44D00C75C9f4b737b8B750aAc3aF24924aefeec\"\n          },\n          {\n            \"capacity\": \"<integer>\",\n            \"filesize\": \"<integer>\",\n            \"fileMerkleRoot\": \"F12C5b876eeB4C5297b4DbFba080D6eA8b43FB0f57B18ddEcDA41016e2CF94AA\",\n            \"proofHeight\": \"<integer>\",\n            \"expirationHeight\": \"<integer>\",\n            \"renterOutput\": {\n              \"value\": \"79\",\n              \"address\": \"24d5189522049C1f8C87A3f2AFC1dBAEBaF7DcaB9bee29BDfA89EEae3E2d076d\"\n            },\n            \"hostOutput\": {\n              \"value\": \"483112\",\n              \"address\": \"BA7e1F467FAf3feddA1349cbd86fa1cFffBd3c32E1C8367da27d565943Eb93ce\"\n            },\n            \"missedHostValue\": \"889428314\",\n            \"totalCollateral\": \"062\",\n            \"renterPublicKey\": \"ed25519:c698Dc05c82b7e8edbC8Cb5c5DdebB4FDFC0f1B3FCa67b3ccC7F64aBcD75665B\",\n            \"hostPublicKey\": \"ed25519:44a0CE8B8Bc82d0aC4Afc3382970c59aE307F21caaaDC2868A4f8efDd95bd8b2\",\n            \"revisionNumber\": \"<integer>\",\n            \"renterSignature\": \"21F69FDa8e9ca4e47bcd1BBBe3c18bbb9deD40EBFDFC645b4c5cdbD37F2cF80D\",\n            \"hostSignature\": \"fcED0fCfaaF921e6FF342603fBA4Cfd6C29C33EFc3E2cAF341e84E5CAde4c6c1\"\n          }\n        ],\n        \"fileContractRevisions\": [\n          {\n            \"parent\": {\n              \"id\": \"fcid:D0AacD5dbA8A149938F0a72CFbEFafb4ADf8DEd892c60f8DD5ef24Dc0a83e0FE\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"A272E95CaCBcdc1DC9E84dAAEed85F6a04dfCEbE1E6fA9df8F2Fe43F3Afc2Ca1\",\n                  \"75b8B3b104f10c8d1BD898E5763cfdEB0CCfF21abeFcFaB0c6fAA4D0d9Ea9ad4\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"59eA2369eb425dDCB0Ece003Bcc3aaDb02ce38cbafEdC98B77CCFa394F452eD9\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"57046656\",\n                  \"address\": \"e0c7AB3A6F3Eb0aE1DdBe504F6C6aeBB4eecCDfBF677eC204aFFFD8B27F0B07f\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"21395\",\n                  \"address\": \"f3d5F9dbeBf2E0da08A93facdCBd8c4Aeea24f23d8B4EC5bc703Cb7A7FF9AC9B\"\n                },\n                \"missedHostValue\": \"359\",\n                \"totalCollateral\": \"8709\",\n                \"renterPublicKey\": \"ed25519:EDfEdD5D83d987DEF4B73E4AAF4b8bfbbAe72a3974CE7f932Dfd5B0ab522a08e\",\n                \"hostPublicKey\": \"ed25519:6615d347cfbe9d640d2A4AD05c1Af8cCC1cecB0Fed5084a0fef4e9c992A15A2a\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"b1edCB182948af96B06DcEf040D9567B204e6E8E337B3ea8ADdD2cF19C181112\",\n                \"hostSignature\": \"Bbc6d45ce88D132e6591dB93d879Fcb0aCB384c6F9fEE0C37fc4EaD764da530b\"\n              }\n            },\n            \"revision\": {\n              \"capacity\": \"<integer>\",\n              \"filesize\": \"<integer>\",\n              \"fileMerkleRoot\": \"3aa5E801d60cbD62dEFaF433bbBF4eF781B8C296DDdD9E62D59E4b57dfEfA5fC\",\n              \"proofHeight\": \"<integer>\",\n              \"expirationHeight\": \"<integer>\",\n              \"renterOutput\": {\n                \"value\": \"685961149\",\n                \"address\": \"0e34F0Aa57ca2ac8FF40cF5206Bc3C1FB82c521CFee7Ba23f9c5FB333069BeEb\"\n              },\n              \"hostOutput\": {\n                \"value\": \"286799\",\n                \"address\": \"bEC1Ad1f68bDbC5EED7c56bAEB53cBCaBacc2D77131aE1DA122e3D4bdC6B169F\"\n              },\n              \"missedHostValue\": \"5127900235\",\n              \"totalCollateral\": \"92123735506\",\n              \"renterPublicKey\": \"ed25519:cc8AdC4A79a8617621fCDFDB4c312B7cA76fA36EcAC3b6816b188FdA919AefAD\",\n              \"hostPublicKey\": \"ed25519:F8Bcf4de4cAbA190176dE6fAE5d68ffb925Bf98D4AAACCF5BC6e98979fBC8BaF\",\n              \"revisionNumber\": \"<integer>\",\n              \"renterSignature\": \"0dFD1BbAAae70a00af0C7d3ebF1Fb3eb14F9fa8cBAEBAdEdAedde62A20c3FAb9\",\n              \"hostSignature\": \"5992C72d5E61dda2e2DdFBeD9d76B6ea2eBa62Adb0Dc36dB15c1c55Ed6CcBAdb\"\n            }\n          },\n          {\n            \"parent\": {\n              \"id\": \"fcid:e805b130f218eceDDAfE9ce5ae7c19A606fFb3AdC2263C0Be5cd0eA56D8CEBA4\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"71f6526fbb18b1af84Ab5c5A881B0A49e4AAAE9DD4EBdd30872eBAAAccDba55F\",\n                  \"1a588AAed0De7b64daEd03bE0F7Ac8fE8eAf1aaa4FB9f059422Bc5aE45Cbac7A\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"D09b392cAcaFfF33A0E25188fA21bC0b1feBe1f3a218225144902d4126f117bb\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"67\",\n                  \"address\": \"e1A8B8B0E17B455CB0B2Bc6AcDbA35eD2c43dc8a80c6381dFf3D5E3B92455f8D\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"6\",\n                  \"address\": \"bDb7CAdBe8742d66F70dedAb7a1a3ce2D3d52d36381bb17bcB7d44d75B1bfCC8\"\n                },\n                \"missedHostValue\": \"697640\",\n                \"totalCollateral\": \"1\",\n                \"renterPublicKey\": \"ed25519:9aCbf6fBc8E38A2Fb8E628E5032e9A8d4C06Bf37f3D16CcC3e5eDe8256EC48AB\",\n                \"hostPublicKey\": \"ed25519:Be41Ac3B9F2CdFfE30FdfbcE00CdDB6BfDAe9CC4DD1078B91DeD0ac81CcdFEF7\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"58Da3c27AFB93897B471275185B7F95c5dC00ff2b3Bf1bBdBCaCFEcd99eb7Da3\",\n                \"hostSignature\": \"dD9fcA20D2E8E932C8CAf825CD6cfACE38E095BFC78dcDfadf8C98E43A2d19AD\"\n              }\n            },\n            \"revision\": {\n              \"capacity\": \"<integer>\",\n              \"filesize\": \"<integer>\",\n              \"fileMerkleRoot\": \"9030d449AB4835f9A911ced2D644A28cD4aB6EFF99Fbc6a2edb53FCAfEb053e0\",\n              \"proofHeight\": \"<integer>\",\n              \"expirationHeight\": \"<integer>\",\n              \"renterOutput\": {\n                \"value\": \"5374425627\",\n                \"address\": \"BE7CB0Ee9F4adD8d6CC7E6EC99ebd786F72b1c9D23ecfEFB5daFd7ccEdAB4d06\"\n              },\n              \"hostOutput\": {\n                \"value\": \"54\",\n                \"address\": \"a176F1A1C4DcC329AC817626ebe22C0d3d1e9b98cDc6366BeBaF6Dc90bE3FF59\"\n              },\n              \"missedHostValue\": \"8407084960\",\n              \"totalCollateral\": \"585368679\",\n              \"renterPublicKey\": \"ed25519:8ff0c7C5ee3CC3B2b74Fc36CD5D92FCD204adB8769ce46c016785BfCCdD03ccb\",\n              \"hostPublicKey\": \"ed25519:Ef2E8fedbdeBdf4bccFeEfbba502ECD6dAc8a4CB4D3fc3ad581a2DD0add9F5bC\",\n              \"revisionNumber\": \"<integer>\",\n              \"renterSignature\": \"CAFC28fd4F08CA99A23a7Bd7adf0b5ae1AbcE2d65862b17eEf8d5A03b7c1c81d\",\n              \"hostSignature\": \"E1D17569410FdEfBF33A67C915F2DE3Ae5BA0e28a53D0D9Afe912EA68EFdDc3d\"\n            }\n          }\n        ],\n        \"fileContractResolutions\": [\n          {\n            \"parent\": {\n              \"id\": \"fcid:f163b63eAbC6f6668Cd3E1bcB233B82f20b8863A52cFBaaCeAdABAfeA4f4BeBc\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"d7DcfCa9dA1D3A96a3f11d8B57e65742017e1247d473F0879c26246DAED9a7f5\",\n                  \"D1edccbcCffA5a4D9ec0Bc6a55a91dd9360dcFCFb189CE53C7A53BBCb8Ab1a38\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"9ccdE72fDB48004f758a89CdE0fB17C217Af555FC3cde83B786FCAb2d20FCfAA\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"77\",\n                  \"address\": \"CFc0ACe518fecD3b8EcAaaB57dEeBf5360dae1bA63c408d373cFCeBA3853dD63\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"18\",\n                  \"address\": \"Ca736a75bDBb5dF9EAd40aDCf6E7c7b4be3FFDFA3A3b0a673eCdF4240EbDAa4E\"\n                },\n                \"missedHostValue\": \"0715\",\n                \"totalCollateral\": \"58207\",\n                \"renterPublicKey\": \"ed25519:DcBF3849CffB1380c74fC3BFeEb7d58D1d0E962BC3c0F9aE4b7baEb2AbBa4Adb\",\n                \"hostPublicKey\": \"ed25519:bd3884CFAFF8f33a09bCf2B7bb11D0D7eC8fE6C4553eaa34bdbFAeEE9daeDf09\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"7a73d8EAAd44Ac856086dFbb8F71c18C42d1Ce2EA9f7c1286fe7855C4cD7c4cC\",\n                \"hostSignature\": \"9b65DADE5CFD3CafD14cC6DbaBfF331DC31AC84FCF4EfD5f9BED2b1AB6A0fBCe\"\n              }\n            },\n            \"resolution\": {}\n          },\n          {\n            \"parent\": {\n              \"id\": \"fcid:79F44157DDb809fD5AAC49eD9B6E1B4433b6fFe0BBfCF415EEC5CdAFDd20EfBD\",\n              \"stateElement\": {\n                \"leafIndex\": \"<integer>\",\n                \"merkleProof\": [\n                  \"cAEc6fb3E4Eb21C4fce2DF734fD902CbA93CB7F44131d6CFaAcEFBeC39acaEEC\",\n                  \"aCbdDa53468ba382A558E3B54528CBDAEEb2D3FE9dE2D0c5A3A9a14772bD23a2\"\n                ]\n              },\n              \"v2FileContract\": {\n                \"capacity\": \"<integer>\",\n                \"filesize\": \"<integer>\",\n                \"fileMerkleRoot\": \"CDE7d6ddf46EeaB94ACA86EaDecE6e3f27F798895fA7A97Bccee7D9e64EaCAb1\",\n                \"proofHeight\": \"<integer>\",\n                \"expirationHeight\": \"<integer>\",\n                \"renterOutput\": {\n                  \"value\": \"213\",\n                  \"address\": \"B0E9dCea8cA9aEe5b6cF64903bfaDC79ef3B0aDDaAf43a9bFF572A499Dafa279\"\n                },\n                \"hostOutput\": {\n                  \"value\": \"2248\",\n                  \"address\": \"1EeeaBED2dB76A9e550EFdDED62E1aaeDCb5a15EDf45D479c941726c967af223\"\n                },\n                \"missedHostValue\": \"36\",\n                \"totalCollateral\": \"05\",\n                \"renterPublicKey\": \"ed25519:3ecE74812d22bacdb8C7ab5ccfAe50354Ac5e804eeBB220ae8855dfe9BF0497e\",\n                \"hostPublicKey\": \"ed25519:bC1E4a39B4A807cAa112ba6D848A2dCC9A872FF2Bfa0086369FdC96DEeaD164b\",\n                \"revisionNumber\": \"<integer>\",\n                \"renterSignature\": \"CB3aDdf5c53C27618D5F08FCe5ca6E00FdF3728FFC0B52df46F968C563C33B3a\",\n                \"hostSignature\": \"49df07dBDD6CcdC9a8c8ef3cEeE520fC11fBc9ceDEAccDA74E2E2623CF3B9a72\"\n              }\n            },\n            \"resolution\": {}\n          }\n        ],\n        \"attestations\": [\n          {\n            \"publicKey\": \"ed25519:AFdc42C8Da2203eF2AeeA4C80BabA5e0ed549cb2fD9Edd6932Cfd2d2cfFAEbCf\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\",\n            \"signature\": \"6eEf62cdCF9fEAb21cDe7B1Cdb8c7d74daeEEA38Da3bEAAEB37dCF0A8e5Bd55A\"\n          },\n          {\n            \"publicKey\": \"ed25519:ED7eB20bFD30DeBf842C92f754B08ebb20D0200A151A57Eb36e784bD7E0bCBeE\",\n            \"key\": \"<string>\",\n            \"value\": \"<string>\",\n            \"signature\": \"D54ed79a48b9c0567cd600FCd4a6a87bfE22E347358FB8acf574fE86fc103C35\"\n          }\n        ],\n        \"arbitraryData\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"newFoundationAddress\": \"1FfCc86A2BdBAfF1e2CFC242aF8dDd7DEf50CC2D0c496BC80cFFA53DBC4fb2A2\",\n        \"minerFee\": \"689891\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/consensus/acceptblock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"consensus",
														"acceptblock"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "network",
							"item": [
								{
									"name": "Get network details",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/consensus/network",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"consensus",
												"network"
											]
										},
										"description": "Returns various details about the network."
									},
									"response": [
										{
											"name": "Successfully retrieved network",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/consensus/network",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"consensus",
														"network"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"<string>\",\n  \"initialCoinbase\": \"300000000000000000000000000000\",\n  \"minimumCoinbase\": \"30000000000000000000000000000\",\n  \"initialTarget\": \"0000000020000000000000000000000000000000000000000000000000000000\",\n  \"blockInterval\": 600000000000,\n  \"maturityDelay\": 144,\n  \"hardforkDevAddr\": {\n    \"height\": \"<integer>\",\n    \"oldAddress\": \"7d0c44f7664e2d34e53efde0661a6f628ec9264785ae8e3cd7c973e8d190c3c97b5e3ecbc567\",\n    \"newAddress\": \"f371c70bce9eb8979cd5099f599ec4e4fcb14e0afcf31f9791e03e6496a4c0b358c98279730b\"\n  },\n  \"hardforkTax\": {\n    \"height\": \"<integer>\"\n  },\n  \"hardforkStorageProof\": {\n    \"height\": \"<integer>\"\n  },\n  \"hardforkOak\": {\n    \"height\": \"<integer>\",\n    \"fixHeight\": \"<integer>\",\n    \"genesisTimestamp\": \"2015-06-06T16:13:20+02:00\"\n  },\n  \"hardforkASIC\": {\n    \"height\": \"<integer>\",\n    \"oakTime\": \"<integer>\",\n    \"oakTarget\": \"0a2cA6080D90C1dCF2Cf0dB8C941ce2ef4de36B2828cCB1b1b40DBBF57A8F8F6\"\n  },\n  \"hardforkFoundation\": {\n    \"height\": \"<integer>\",\n    \"primaryAddress\": \"053b2def3cbdd078c19d62ce2b4f0b1a3c5e0ffbeeff01280efb1f8969b2f5bb4fdc680f0807\",\n    \"failsafeAddress\": \"27c22a6c6e6645802a3b8fa0e5374657438ef12716d2205d3e866272de1b644dbabd53d6d560\"\n  },\n  \"hardforkV2\": {\n    \"allowHeight\": \"<integer>\",\n    \"requireHeight\": \"<integer>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "siafundfee",
							"item": [
								{
									"name": "{payout}",
									"item": [
										{
											"name": "Get siafund fee",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/consensus/siafundfee/:payout",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"consensus",
														"siafundfee",
														":payout"
													],
													"variable": [
														{
															"key": "payout",
															"value": "0",
															"description": "(Required) The payout to calculate the fee for"
														}
													]
												},
												"description": "Returns the siafund fee for the specified payout."
											},
											"response": [
												{
													"name": "Successfully retrieved siafund fee",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/bus/consensus/siafundfee/:payout",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"consensus",
																"siafundfee",
																":payout"
															],
															"variable": [
																{
																	"key": "payout"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "0"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/bus/consensus/siafundfee/:payout",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"consensus",
																"siafundfee",
																":payout"
															],
															"variable": [
																{
																	"key": "payout"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "state",
							"item": [
								{
									"name": "Get consensus state",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/consensus/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"consensus",
												"state"
											]
										},
										"description": "Returns the current consensus state."
									},
									"response": [
										{
											"name": "Successfully retrieved consensus state",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/consensus/state",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"consensus",
														"state"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"blockHeight\": \"<integer>\",\n  \"lastBlockTime\": \"<dateTime>\",\n  \"synced\": \"<boolean>\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/consensus/state",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"consensus",
														"state"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "contracts",
					"item": [
						{
							"name": "all",
							"item": [
								{
									"name": "Archives all contracts",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bus/contracts/all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"contracts",
												"all"
											]
										}
									},
									"response": [
										{
											"name": "All contracts where archived successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/contracts/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contracts",
														"all"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/contracts/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contracts",
														"all"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "archive",
							"item": [
								{
									"name": "Archive contracts",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"veniam_4\": \"fcid:F266B7faF4650B37a5aC8ac6AEAEcACfeBcB5ad282af77fe10ED31b1C59dfabd\",\n  \"incididunt7a\": \"fcid:02f15b0047Bc3Df0e13c2Df0efE1D4994DFcB7e43393a9cE0bC9397cab5e193c\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/contracts/archive",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"contracts",
												"archive"
											]
										}
									},
									"response": [
										{
											"name": "Contracts archived successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"veniam_4\": \"fcid:F266B7faF4650B37a5aC8ac6AEAEcACfeBcB5ad282af77fe10ED31b1C59dfabd\",\n  \"incididunt7a\": \"fcid:02f15b0047Bc3Df0e13c2Df0efE1D4994DFcB7e43393a9cE0bC9397cab5e193c\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/contracts/archive",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contracts",
														"archive"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"veniam_4\": \"fcid:F266B7faF4650B37a5aC8ac6AEAEcACfeBcB5ad282af77fe10ED31b1C59dfabd\",\n  \"incididunt7a\": \"fcid:02f15b0047Bc3Df0e13c2Df0efE1D4994DFcB7e43393a9cE0bC9397cab5e193c\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/contracts/archive",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contracts",
														"archive"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "form",
							"item": [
								{
									"name": "Form a new contract",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"endHeight\": \"<integer>\",\n  \"hostCollateral\": \"08\",\n  \"hostKey\": \"ed25519:fEF7ed0b6Adb58CFEDdfa0D33F582b9033C3d33AF2db002F7e603ECcACbA40B2\",\n  \"renterFunds\": \"8297\",\n  \"renterAddress\": \"A10374AfB9bD2a2edB58B8174EC1BD2aD94DB8DaFbd643FBeBa7DCCEa4D7ce5D\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/contracts/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"contracts",
												"form"
											]
										}
									},
									"response": [
										{
											"name": "Contract formed successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"endHeight\": \"<integer>\",\n  \"hostCollateral\": \"08\",\n  \"hostKey\": \"ed25519:fEF7ed0b6Adb58CFEDdfa0D33F582b9033C3d33AF2db002F7e603ECcACbA40B2\",\n  \"renterFunds\": \"8297\",\n  \"renterAddress\": \"A10374AfB9bD2a2edB58B8174EC1BD2aD94DB8DaFbd643FBeBa7DCCEa4D7ce5D\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/contracts/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contracts",
														"form"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"fcid:a51ac2C73fe081E6b9F47E961DbBB7bA75Fb39D47622ADCB7b367fbe12fa7A7A\",\n  \"hostKey\": \"ed25519:ae91A3dc9100AaDcD9eA9fA9FBc7dcE0b820Aa0eCbD0De6FcDDe59D46fFB8b0c\",\n  \"v2\": \"<boolean>\",\n  \"proofHeight\": \"<integer>\",\n  \"renewedFrom\": \"fcid:41A00b90Cdc74a3DDAbFEAb14cAeADc798fEdaABb4eabf6f0AcCD7A820F1305A\",\n  \"revisionHeight\": \"<integer>\",\n  \"revisionNumber\": \"<integer>\",\n  \"size\": \"<integer>\",\n  \"startHeight\": \"<integer>\",\n  \"state\": \"failed\",\n  \"usability\": \"bad\",\n  \"windowStart\": \"<integer>\",\n  \"windowEnd\": \"<integer>\",\n  \"contractPrice\": \"1186\",\n  \"initialRenterFunds\": \"84\",\n  \"spending\": {\n    \"deletions\": \"93907\",\n    \"fundAccount\": \"938854\",\n    \"sectorRoots\": \"690535089\",\n    \"uploads\": \"10247194\"\n  },\n  \"archivalReason\": \"renewed\",\n  \"renewedTo\": \"fcid:0F89dead9fd1f576E2C513E2B1f9BD272B80a8C71feAc81c692Fcdd3D0CB9bEb\"\n}"
										},
										{
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"endHeight\": \"<integer>\",\n  \"hostCollateral\": \"08\",\n  \"hostKey\": \"ed25519:fEF7ed0b6Adb58CFEDdfa0D33F582b9033C3d33AF2db002F7e603ECcACbA40B2\",\n  \"renterFunds\": \"8297\",\n  \"renterAddress\": \"A10374AfB9bD2a2edB58B8174EC1BD2aD94DB8DaFbd643FBeBa7DCCEa4D7ce5D\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/contracts/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contracts",
														"form"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Host not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"endHeight\": \"<integer>\",\n  \"hostCollateral\": \"08\",\n  \"hostKey\": \"ed25519:fEF7ed0b6Adb58CFEDdfa0D33F582b9033C3d33AF2db002F7e603ECcACbA40B2\",\n  \"renterFunds\": \"8297\",\n  \"renterAddress\": \"A10374AfB9bD2a2edB58B8174EC1BD2aD94DB8DaFbd643FBeBa7DCCEa4D7ce5D\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/contracts/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contracts",
														"form"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"endHeight\": \"<integer>\",\n  \"hostCollateral\": \"08\",\n  \"hostKey\": \"ed25519:fEF7ed0b6Adb58CFEDdfa0D33F582b9033C3d33AF2db002F7e603ECcACbA40B2\",\n  \"renterFunds\": \"8297\",\n  \"renterAddress\": \"A10374AfB9bD2a2edB58B8174EC1BD2aD94DB8DaFbd643FBeBa7DCCEa4D7ce5D\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/contracts/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contracts",
														"form"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "prunable",
							"item": [
								{
									"name": "Get prunable contract data",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/contracts/prunable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"contracts",
												"prunable"
											]
										}
									},
									"response": [
										{
											"name": "Prunable contract data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/contracts/prunable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contracts",
														"prunable"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"contracts\": [\n    {\n      \"prunable\": \"<integer>\",\n      \"size\": \"<integer>\"\n    },\n    {\n      \"prunable\": \"<integer>\",\n      \"size\": \"<integer>\"\n    }\n  ],\n  \"totalPrunable\": \"<integer>\",\n  \"totalSize\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "renewed",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Get renewed contract",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/contracts/renewed/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contracts",
														"renewed",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Renewed contract metadata",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/bus/contracts/renewed/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contracts",
																"renewed",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"fcid:a51ac2C73fe081E6b9F47E961DbBB7bA75Fb39D47622ADCB7b367fbe12fa7A7A\",\n  \"hostKey\": \"ed25519:ae91A3dc9100AaDcD9eA9fA9FBc7dcE0b820Aa0eCbD0De6FcDDe59D46fFB8b0c\",\n  \"v2\": \"<boolean>\",\n  \"proofHeight\": \"<integer>\",\n  \"renewedFrom\": \"fcid:41A00b90Cdc74a3DDAbFEAb14cAeADc798fEdaABb4eabf6f0AcCD7A820F1305A\",\n  \"revisionHeight\": \"<integer>\",\n  \"revisionNumber\": \"<integer>\",\n  \"size\": \"<integer>\",\n  \"startHeight\": \"<integer>\",\n  \"state\": \"failed\",\n  \"usability\": \"bad\",\n  \"windowStart\": \"<integer>\",\n  \"windowEnd\": \"<integer>\",\n  \"contractPrice\": \"1186\",\n  \"initialRenterFunds\": \"84\",\n  \"spending\": {\n    \"deletions\": \"93907\",\n    \"fundAccount\": \"938854\",\n    \"sectorRoots\": \"690535089\",\n    \"uploads\": \"10247194\"\n  },\n  \"archivalReason\": \"renewed\",\n  \"renewedTo\": \"fcid:0F89dead9fd1f576E2C513E2B1f9BD272B80a8C71feAc81c692Fcdd3D0CB9bEb\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/bus/contracts/renewed/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contracts",
																"renewed",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "spending",
							"item": [
								{
									"name": "Record contract spending",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"deletions\": \"395730122\",\n    \"fundAccount\": \"42333107\",\n    \"sectorRoots\": \"417\",\n    \"uploads\": \"52988\",\n    \"contractID\": \"fcid:A5DdfAeB11BBC00A9b212B07e8C033cC6cCae8bbb5ED7A5Ff7DBaCF4069eaB5b\",\n    \"revisionNumber\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"missedHostPayout\": \"402867233\",\n    \"validRenterPayout\": \"9503\"\n  },\n  {\n    \"deletions\": \"3\",\n    \"fundAccount\": \"38409\",\n    \"sectorRoots\": \"3\",\n    \"uploads\": \"3677167\",\n    \"contractID\": \"fcid:f74C6114Cc15CE2A0a0862b6Bd15AC0909B37B43FB624c3b103EB15eE2EceDFa\",\n    \"revisionNumber\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"missedHostPayout\": \"40109\",\n    \"validRenterPayout\": \"8913412\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/contracts/spending",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"contracts",
												"spending"
											]
										}
									},
									"response": [
										{
											"name": "Spending recorded successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"deletions\": \"395730122\",\n    \"fundAccount\": \"42333107\",\n    \"sectorRoots\": \"417\",\n    \"uploads\": \"52988\",\n    \"contractID\": \"fcid:A5DdfAeB11BBC00A9b212B07e8C033cC6cCae8bbb5ED7A5Ff7DBaCF4069eaB5b\",\n    \"revisionNumber\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"missedHostPayout\": \"402867233\",\n    \"validRenterPayout\": \"9503\"\n  },\n  {\n    \"deletions\": \"3\",\n    \"fundAccount\": \"38409\",\n    \"sectorRoots\": \"3\",\n    \"uploads\": \"3677167\",\n    \"contractID\": \"fcid:f74C6114Cc15CE2A0a0862b6Bd15AC0909B37B43FB624c3b103EB15eE2EceDFa\",\n    \"revisionNumber\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"missedHostPayout\": \"40109\",\n    \"validRenterPayout\": \"8913412\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/contracts/spending",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contracts",
														"spending"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"deletions\": \"395730122\",\n    \"fundAccount\": \"42333107\",\n    \"sectorRoots\": \"417\",\n    \"uploads\": \"52988\",\n    \"contractID\": \"fcid:A5DdfAeB11BBC00A9b212B07e8C033cC6cCae8bbb5ED7A5Ff7DBaCF4069eaB5b\",\n    \"revisionNumber\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"missedHostPayout\": \"402867233\",\n    \"validRenterPayout\": \"9503\"\n  },\n  {\n    \"deletions\": \"3\",\n    \"fundAccount\": \"38409\",\n    \"sectorRoots\": \"3\",\n    \"uploads\": \"3677167\",\n    \"contractID\": \"fcid:f74C6114Cc15CE2A0a0862b6Bd15AC0909B37B43FB624c3b103EB15eE2EceDFa\",\n    \"revisionNumber\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"missedHostPayout\": \"40109\",\n    \"validRenterPayout\": \"8913412\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/contracts/spending",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contracts",
														"spending"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all contracts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bus/contracts?filtermode=active",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bus",
										"contracts"
									],
									"query": [
										{
											"key": "filtermode",
											"value": "active"
										}
									]
								}
							},
							"response": [
								{
									"name": "List of contracts",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/contracts?filtermode=active",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"contracts"
											],
											"query": [
												{
													"key": "filtermode",
													"value": "active"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"fcid:279bfC4fC0DD4bdADFAC6b5e50Bbc0c23c6DBF6A6Bb06a8d4EcFcAddD0caC801\",\n    \"hostKey\": \"ed25519:08f0e75f0A322F4616ac98d91Ecbe0C02f4E9Fb53C6a0eba685e36efA9D89390\",\n    \"v2\": \"<boolean>\",\n    \"proofHeight\": \"<integer>\",\n    \"renewedFrom\": \"fcid:CA92e8a8cEe562664d4Ef90b70CcECf0Ba4cd9DdE4df277CE5A2ae1AE4726fEF\",\n    \"revisionHeight\": \"<integer>\",\n    \"revisionNumber\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"startHeight\": \"<integer>\",\n    \"state\": \"complete\",\n    \"usability\": \"bad\",\n    \"windowStart\": \"<integer>\",\n    \"windowEnd\": \"<integer>\",\n    \"contractPrice\": \"818\",\n    \"initialRenterFunds\": \"248\",\n    \"spending\": {\n      \"deletions\": \"33225416258\",\n      \"fundAccount\": \"0210\",\n      \"sectorRoots\": \"03331279\",\n      \"uploads\": \"6\"\n    },\n    \"archivalReason\": \"hostpruned\",\n    \"renewedTo\": \"fcid:e8Cdf0ccF3fdC46a0087b6C94F11687cce1D1cD93BCb9a22F04D2FEd5AdbEb55\"\n  },\n  {\n    \"id\": \"fcid:5dA8165D4027d8D2A5119b4BDBeD23Efd47b7Ec2CD3d4c06d032d5dCE1Acbf61\",\n    \"hostKey\": \"ed25519:5cc7B0617e55acff1a01fBB77B0daba9a5DBf40DbB9fd66EC93F6DcFfFBF80aC\",\n    \"v2\": \"<boolean>\",\n    \"proofHeight\": \"<integer>\",\n    \"renewedFrom\": \"fcid:Bfe45DBdf5dD50FAdbd0bdda881b00624cf7Fae2F2c5e54E0FF5D14E2D104EEB\",\n    \"revisionHeight\": \"<integer>\",\n    \"revisionNumber\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"startHeight\": \"<integer>\",\n    \"state\": \"active\",\n    \"usability\": \"good\",\n    \"windowStart\": \"<integer>\",\n    \"windowEnd\": \"<integer>\",\n    \"contractPrice\": \"028\",\n    \"initialRenterFunds\": \"8\",\n    \"spending\": {\n      \"deletions\": \"355523188\",\n      \"fundAccount\": \"56\",\n      \"sectorRoots\": \"8499488\",\n      \"uploads\": \"42\"\n    },\n    \"archivalReason\": \"renewed\",\n    \"renewedTo\": \"fcid:Cf16AaA6a9Ce84BdA9e7F5CCdFAA9dC6b74FfC3cC1e12c694A1e407faC0fbfF1\"\n  }\n]"
								},
								{
									"name": "Malformed request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/contracts?filtermode=active",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"contracts"
											],
											"query": [
												{
													"key": "filtermode",
													"value": "active"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "<string>"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bus/contracts?filtermode=active",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"contracts"
											],
											"query": [
												{
													"key": "filtermode",
													"value": "active"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add a contract",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"fcid:a51ac2C73fe081E6b9F47E961DbBB7bA75Fb39D47622ADCB7b367fbe12fa7A7A\",\n  \"hostKey\": \"ed25519:ae91A3dc9100AaDcD9eA9fA9FBc7dcE0b820Aa0eCbD0De6FcDDe59D46fFB8b0c\",\n  \"v2\": \"<boolean>\",\n  \"proofHeight\": \"<integer>\",\n  \"renewedFrom\": \"fcid:41A00b90Cdc74a3DDAbFEAb14cAeADc798fEdaABb4eabf6f0AcCD7A820F1305A\",\n  \"revisionHeight\": \"<integer>\",\n  \"revisionNumber\": \"<integer>\",\n  \"size\": \"<integer>\",\n  \"startHeight\": \"<integer>\",\n  \"state\": \"failed\",\n  \"usability\": \"bad\",\n  \"windowStart\": \"<integer>\",\n  \"windowEnd\": \"<integer>\",\n  \"contractPrice\": \"1186\",\n  \"initialRenterFunds\": \"84\",\n  \"spending\": {\n    \"deletions\": \"93907\",\n    \"fundAccount\": \"938854\",\n    \"sectorRoots\": \"690535089\",\n    \"uploads\": \"10247194\"\n  },\n  \"archivalReason\": \"renewed\",\n  \"renewedTo\": \"fcid:0F89dead9fd1f576E2C513E2B1f9BD272B80a8C71feAc81c692Fcdd3D0CB9bEb\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bus/contracts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bus",
										"contracts"
									]
								}
							},
							"response": [
								{
									"name": "Successfully updated contract",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"fcid:a51ac2C73fe081E6b9F47E961DbBB7bA75Fb39D47622ADCB7b367fbe12fa7A7A\",\n  \"hostKey\": \"ed25519:ae91A3dc9100AaDcD9eA9fA9FBc7dcE0b820Aa0eCbD0De6FcDDe59D46fFB8b0c\",\n  \"v2\": \"<boolean>\",\n  \"proofHeight\": \"<integer>\",\n  \"renewedFrom\": \"fcid:41A00b90Cdc74a3DDAbFEAb14cAeADc798fEdaABb4eabf6f0AcCD7A820F1305A\",\n  \"revisionHeight\": \"<integer>\",\n  \"revisionNumber\": \"<integer>\",\n  \"size\": \"<integer>\",\n  \"startHeight\": \"<integer>\",\n  \"state\": \"failed\",\n  \"usability\": \"bad\",\n  \"windowStart\": \"<integer>\",\n  \"windowEnd\": \"<integer>\",\n  \"contractPrice\": \"1186\",\n  \"initialRenterFunds\": \"84\",\n  \"spending\": {\n    \"deletions\": \"93907\",\n    \"fundAccount\": \"938854\",\n    \"sectorRoots\": \"690535089\",\n    \"uploads\": \"10247194\"\n  },\n  \"archivalReason\": \"renewed\",\n  \"renewedTo\": \"fcid:0F89dead9fd1f576E2C513E2B1f9BD272B80a8C71feAc81c692Fcdd3D0CB9bEb\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/contracts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"contracts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"fcid:a51ac2C73fe081E6b9F47E961DbBB7bA75Fb39D47622ADCB7b367fbe12fa7A7A\",\n  \"hostKey\": \"ed25519:ae91A3dc9100AaDcD9eA9fA9FBc7dcE0b820Aa0eCbD0De6FcDDe59D46fFB8b0c\",\n  \"v2\": \"<boolean>\",\n  \"proofHeight\": \"<integer>\",\n  \"renewedFrom\": \"fcid:41A00b90Cdc74a3DDAbFEAb14cAeADc798fEdaABb4eabf6f0AcCD7A820F1305A\",\n  \"revisionHeight\": \"<integer>\",\n  \"revisionNumber\": \"<integer>\",\n  \"size\": \"<integer>\",\n  \"startHeight\": \"<integer>\",\n  \"state\": \"failed\",\n  \"usability\": \"bad\",\n  \"windowStart\": \"<integer>\",\n  \"windowEnd\": \"<integer>\",\n  \"contractPrice\": \"1186\",\n  \"initialRenterFunds\": \"84\",\n  \"spending\": {\n    \"deletions\": \"93907\",\n    \"fundAccount\": \"938854\",\n    \"sectorRoots\": \"690535089\",\n    \"uploads\": \"10247194\"\n  },\n  \"archivalReason\": \"renewed\",\n  \"renewedTo\": \"fcid:0F89dead9fd1f576E2C513E2B1f9BD272B80a8C71feAc81c692Fcdd3D0CB9bEb\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/contracts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"contracts"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "contract",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "acquire",
									"item": [
										{
											"name": "Acquire contract lock",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"duration\": \"<long>\",\n  \"priority\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/contract/:id/acquire",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contract",
														":id",
														"acquire"
													],
													"variable": [
														{
															"key": "id",
															"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Contract lock acquired",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"duration\": \"<long>\",\n  \"priority\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/acquire",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"acquire"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"lockID\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "ancestors",
									"item": [
										{
											"name": "Get contract ancestors",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/contract/:id/ancestors?minstartheight=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contract",
														":id",
														"ancestors"
													],
													"query": [
														{
															"key": "minstartheight",
															"value": "<integer>",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Contract ancestors",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/ancestors?minstartheight=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"ancestors"
															],
															"query": [
																{
																	"key": "minstartheight",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"fcid:279bfC4fC0DD4bdADFAC6b5e50Bbc0c23c6DBF6A6Bb06a8d4EcFcAddD0caC801\",\n    \"hostKey\": \"ed25519:08f0e75f0A322F4616ac98d91Ecbe0C02f4E9Fb53C6a0eba685e36efA9D89390\",\n    \"v2\": \"<boolean>\",\n    \"proofHeight\": \"<integer>\",\n    \"renewedFrom\": \"fcid:CA92e8a8cEe562664d4Ef90b70CcECf0Ba4cd9DdE4df277CE5A2ae1AE4726fEF\",\n    \"revisionHeight\": \"<integer>\",\n    \"revisionNumber\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"startHeight\": \"<integer>\",\n    \"state\": \"complete\",\n    \"usability\": \"bad\",\n    \"windowStart\": \"<integer>\",\n    \"windowEnd\": \"<integer>\",\n    \"contractPrice\": \"818\",\n    \"initialRenterFunds\": \"248\",\n    \"spending\": {\n      \"deletions\": \"33225416258\",\n      \"fundAccount\": \"0210\",\n      \"sectorRoots\": \"03331279\",\n      \"uploads\": \"6\"\n    },\n    \"archivalReason\": \"hostpruned\",\n    \"renewedTo\": \"fcid:e8Cdf0ccF3fdC46a0087b6C94F11687cce1D1cD93BCb9a22F04D2FEd5AdbEb55\"\n  },\n  {\n    \"id\": \"fcid:5dA8165D4027d8D2A5119b4BDBeD23Efd47b7Ec2CD3d4c06d032d5dCE1Acbf61\",\n    \"hostKey\": \"ed25519:5cc7B0617e55acff1a01fBB77B0daba9a5DBf40DbB9fd66EC93F6DcFfFBF80aC\",\n    \"v2\": \"<boolean>\",\n    \"proofHeight\": \"<integer>\",\n    \"renewedFrom\": \"fcid:Bfe45DBdf5dD50FAdbd0bdda881b00624cf7Fae2F2c5e54E0FF5D14E2D104EEB\",\n    \"revisionHeight\": \"<integer>\",\n    \"revisionNumber\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"startHeight\": \"<integer>\",\n    \"state\": \"active\",\n    \"usability\": \"good\",\n    \"windowStart\": \"<integer>\",\n    \"windowEnd\": \"<integer>\",\n    \"contractPrice\": \"028\",\n    \"initialRenterFunds\": \"8\",\n    \"spending\": {\n      \"deletions\": \"355523188\",\n      \"fundAccount\": \"56\",\n      \"sectorRoots\": \"8499488\",\n      \"uploads\": \"42\"\n    },\n    \"archivalReason\": \"renewed\",\n    \"renewedTo\": \"fcid:Cf16AaA6a9Ce84BdA9e7F5CCdFAA9dC6b74FfC3cC1e12c694A1e407faC0fbfF1\"\n  }\n]"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/ancestors?minstartheight=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"ancestors"
															],
															"query": [
																{
																	"key": "minstartheight",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "broadcast",
									"item": [
										{
											"name": "Broadcast contract's revision",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/contract/:id/broadcast",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contract",
														":id",
														"broadcast"
													],
													"variable": [
														{
															"key": "id",
															"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Contract's revision broadcasted successfully",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/broadcast",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"broadcast"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/broadcast",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"broadcast"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "keepalive",
									"item": [
										{
											"name": "Keep contract lock alive",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"duration\": \"<long>\",\n  \"lockID\": {\n    \"lockID\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/contract/:id/keepalive",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contract",
														":id",
														"keepalive"
													],
													"variable": [
														{
															"key": "id",
															"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Contract lock keepalive successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"duration\": \"<long>\",\n  \"lockID\": {\n    \"lockID\": \"<integer>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/keepalive",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"keepalive"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"duration\": \"<long>\",\n  \"lockID\": {\n    \"lockID\": \"<integer>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/keepalive",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"keepalive"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "revision",
									"item": [
										{
											"name": "Get latest contract revision",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/contract/:id/revision",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contract",
														":id",
														"revision"
													],
													"variable": [
														{
															"key": "id",
															"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Latest contract revision",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/revision",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"revision"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"contractID\": \"fcid:7F2EA8DC324bAab75E08d4069F4a74dDA9c97bfbc8Dd9EC088157f860Dd3B4a2\",\n  \"missedHostValue\": \"1750\",\n  \"renterFunds\": \"476859\",\n  \"revisionNumber\": \"<integer>\",\n  \"size\": \"<integer>\"\n}"
												},
												{
													"name": "Contract not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/revision",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"revision"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/revision",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"revision"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "prune",
									"item": [
										{
											"name": "Prune contract data",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"timeout\": \"<long>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/contract/:id/prune",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contract",
														":id",
														"prune"
													],
													"variable": [
														{
															"key": "id",
															"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Contract pruned successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"timeout\": \"<long>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/prune",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"prune"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"size\": \"<integer>\",\n  \"pruned\": \"<integer>\",\n  \"remaining\": \"<integer>\",\n  \"error\": \"<string>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"timeout\": \"<long>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/prune",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"prune"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "renew",
									"item": [
										{
											"name": "Renew contract",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"endHeight\": \"<integer>\",\n  \"expectedNewStorage\": \"<integer>\",\n  \"minNewCollateral\": \"232\",\n  \"renterFunds\": \"8653\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/contract/:id/renew",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contract",
														":id",
														"renew"
													],
													"variable": [
														{
															"key": "id",
															"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Contract renewed successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"endHeight\": \"<integer>\",\n  \"expectedNewStorage\": \"<integer>\",\n  \"minNewCollateral\": \"232\",\n  \"renterFunds\": \"8653\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/renew",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"renew"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"fcid:a51ac2C73fe081E6b9F47E961DbBB7bA75Fb39D47622ADCB7b367fbe12fa7A7A\",\n  \"hostKey\": \"ed25519:ae91A3dc9100AaDcD9eA9fA9FBc7dcE0b820Aa0eCbD0De6FcDDe59D46fFB8b0c\",\n  \"v2\": \"<boolean>\",\n  \"proofHeight\": \"<integer>\",\n  \"renewedFrom\": \"fcid:41A00b90Cdc74a3DDAbFEAb14cAeADc798fEdaABb4eabf6f0AcCD7A820F1305A\",\n  \"revisionHeight\": \"<integer>\",\n  \"revisionNumber\": \"<integer>\",\n  \"size\": \"<integer>\",\n  \"startHeight\": \"<integer>\",\n  \"state\": \"failed\",\n  \"usability\": \"bad\",\n  \"windowStart\": \"<integer>\",\n  \"windowEnd\": \"<integer>\",\n  \"contractPrice\": \"1186\",\n  \"initialRenterFunds\": \"84\",\n  \"spending\": {\n    \"deletions\": \"93907\",\n    \"fundAccount\": \"938854\",\n    \"sectorRoots\": \"690535089\",\n    \"uploads\": \"10247194\"\n  },\n  \"archivalReason\": \"renewed\",\n  \"renewedTo\": \"fcid:0F89dead9fd1f576E2C513E2B1f9BD272B80a8C71feAc81c692Fcdd3D0CB9bEb\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "release",
									"item": [
										{
											"name": "Release contract lock",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"lockID\": {\n    \"lockID\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/contract/:id/release",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contract",
														":id",
														"release"
													],
													"variable": [
														{
															"key": "id",
															"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Contract lock released successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"lockID\": {\n    \"lockID\": \"<integer>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/release",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"release"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"lockID\": {\n    \"lockID\": \"<integer>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/release",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"release"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "roots",
									"item": [
										{
											"name": "Get contract sector roots",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/contract/:id/roots",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contract",
														":id",
														"roots"
													],
													"variable": [
														{
															"key": "id",
															"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Contract sector roots",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/roots",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"roots"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  \"68dC10fdA98d140dcfF0Ab52B85D1D1f3E750bC8DB3016e3cE6b96808a1B6e4f\",\n  \"0BFb9a0Cb77A9d886BdCc2fBbFB50c1200af0ab76cD4013b2aE3CCe3465ec5d1\"\n]"
												}
											]
										}
									]
								},
								{
									"name": "size",
									"item": [
										{
											"name": "Get contract size",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/contract/:id/size",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contract",
														":id",
														"size"
													],
													"variable": [
														{
															"key": "id",
															"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Contract size information",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/size",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"size"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prunable\": \"<integer>\",\n  \"size\": \"<integer>\"\n}"
												},
												{
													"name": "Contract not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/size",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"size"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/size",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"size"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "usability",
									"item": [
										{
											"name": "Update contract usability",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "good",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/contract/:id/usability",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contract",
														":id",
														"usability"
													],
													"variable": [
														{
															"key": "id",
															"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Contract usability updated successfully",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "good",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/usability",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"usability"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Malformed request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "good",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/usability",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"usability"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Contract not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "good",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/usability",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"usability"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "good",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/contract/:id/usability",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"contract",
																":id",
																"usability"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get contract by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/contract/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"contract",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Contract metadata",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/contract/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contract",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"fcid:a51ac2C73fe081E6b9F47E961DbBB7bA75Fb39D47622ADCB7b367fbe12fa7A7A\",\n  \"hostKey\": \"ed25519:ae91A3dc9100AaDcD9eA9fA9FBc7dcE0b820Aa0eCbD0De6FcDDe59D46fFB8b0c\",\n  \"v2\": \"<boolean>\",\n  \"proofHeight\": \"<integer>\",\n  \"renewedFrom\": \"fcid:41A00b90Cdc74a3DDAbFEAb14cAeADc798fEdaABb4eabf6f0AcCD7A820F1305A\",\n  \"revisionHeight\": \"<integer>\",\n  \"revisionNumber\": \"<integer>\",\n  \"size\": \"<integer>\",\n  \"startHeight\": \"<integer>\",\n  \"state\": \"failed\",\n  \"usability\": \"bad\",\n  \"windowStart\": \"<integer>\",\n  \"windowEnd\": \"<integer>\",\n  \"contractPrice\": \"1186\",\n  \"initialRenterFunds\": \"84\",\n  \"spending\": {\n    \"deletions\": \"93907\",\n    \"fundAccount\": \"938854\",\n    \"sectorRoots\": \"690535089\",\n    \"uploads\": \"10247194\"\n  },\n  \"archivalReason\": \"renewed\",\n  \"renewedTo\": \"fcid:0F89dead9fd1f576E2C513E2B1f9BD272B80a8C71feAc81c692Fcdd3D0CB9bEb\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/contract/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contract",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Archive contract with archival reason 'removed'",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bus/contract/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"contract",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Contract archived successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/contract/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contract",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/contract/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"contract",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "hosts",
					"item": [
						{
							"name": "allowlist",
							"item": [
								{
									"name": "Get host allowlist",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/hosts/allowlist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"hosts",
												"allowlist"
											]
										},
										"description": "Returns the list of allowed host public keys"
									},
									"response": [
										{
											"name": "List of allowed host public keys",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/hosts/allowlist",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"hosts",
														"allowlist"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  \"ed25519:eE5A5D5aDcA8Bc02af4dfb1fA75A5c4eEfc7d7Fad1A5Ab5fE9F8f6Dcb15ee26D\",\n  \"ed25519:d73e06a692b3E9Dbc70a55193D3E61F1dEd159BAcc53cbaa3a7df1124DDC03EA\"\n]"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/hosts/allowlist",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"hosts",
														"allowlist"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update host allowlist",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"add\": [\n    \"ed25519:4B9E4020Efd512Eccf681B4dD45e8CC586c10D6aAb1AD3515A90AcCBdCdfFAba\",\n    \"ed25519:abD5d18A2D17Cd4423cca58ed4ea60A7BbB19aDfC1E0BD5eEfaBAba9f5157ccF\"\n  ],\n  \"remove\": [\n    \"ed25519:40a2AEe57c66D3769d0F8eEE29FFA6DfB47ef15e85cCeFE8f7cB0Ae3EBDbF9B1\",\n    \"ed25519:bCE3Efba7B6fc300ebC8dAFfC909A1B9d9adABD9BFbA44dFf1db2Ee7fd4D72D1\"\n  ],\n  \"clear\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/hosts/allowlist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"hosts",
												"allowlist"
											]
										},
										"description": "Updates the list of allowed host public keys"
									},
									"response": [
										{
											"name": "Allowlist updated successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"add\": [\n    \"ed25519:4B9E4020Efd512Eccf681B4dD45e8CC586c10D6aAb1AD3515A90AcCBdCdfFAba\",\n    \"ed25519:abD5d18A2D17Cd4423cca58ed4ea60A7BbB19aDfC1E0BD5eEfaBAba9f5157ccF\"\n  ],\n  \"remove\": [\n    \"ed25519:40a2AEe57c66D3769d0F8eEE29FFA6DfB47ef15e85cCeFE8f7cB0Ae3EBDbF9B1\",\n    \"ed25519:bCE3Efba7B6fc300ebC8dAFfC909A1B9d9adABD9BFbA44dFf1db2Ee7fd4D72D1\"\n  ],\n  \"clear\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/hosts/allowlist",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"hosts",
														"allowlist"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"add\": [\n    \"ed25519:4B9E4020Efd512Eccf681B4dD45e8CC586c10D6aAb1AD3515A90AcCBdCdfFAba\",\n    \"ed25519:abD5d18A2D17Cd4423cca58ed4ea60A7BbB19aDfC1E0BD5eEfaBAba9f5157ccF\"\n  ],\n  \"remove\": [\n    \"ed25519:40a2AEe57c66D3769d0F8eEE29FFA6DfB47ef15e85cCeFE8f7cB0Ae3EBDbF9B1\",\n    \"ed25519:bCE3Efba7B6fc300ebC8dAFfC909A1B9d9adABD9BFbA44dFf1db2Ee7fd4D72D1\"\n  ],\n  \"clear\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/hosts/allowlist",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"hosts",
														"allowlist"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"add\": [\n    \"ed25519:4B9E4020Efd512Eccf681B4dD45e8CC586c10D6aAb1AD3515A90AcCBdCdfFAba\",\n    \"ed25519:abD5d18A2D17Cd4423cca58ed4ea60A7BbB19aDfC1E0BD5eEfaBAba9f5157ccF\"\n  ],\n  \"remove\": [\n    \"ed25519:40a2AEe57c66D3769d0F8eEE29FFA6DfB47ef15e85cCeFE8f7cB0Ae3EBDbF9B1\",\n    \"ed25519:bCE3Efba7B6fc300ebC8dAFfC909A1B9d9adABD9BFbA44dFf1db2Ee7fd4D72D1\"\n  ],\n  \"clear\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/hosts/allowlist",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"hosts",
														"allowlist"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "blocklist",
							"item": [
								{
									"name": "Get host blocklist",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/hosts/blocklist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"hosts",
												"blocklist"
											]
										},
										"description": "Returns the list of blocked host net addresses"
									},
									"response": [
										{
											"name": "List of blocked host net addresses",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/hosts/blocklist",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"hosts",
														"blocklist"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  \"<ipv4>\",\n  \"<ipv4>\"\n]"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/hosts/blocklist",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"hosts",
														"blocklist"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update host blocklist",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"add\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"remove\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"clear\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/hosts/blocklist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"hosts",
												"blocklist"
											]
										},
										"description": "Updates the list of blocked host public keys"
									},
									"response": [
										{
											"name": "Blocklist updated successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"add\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"remove\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"clear\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/hosts/blocklist",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"hosts",
														"blocklist"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"add\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"remove\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"clear\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/hosts/blocklist",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"hosts",
														"blocklist"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"add\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"remove\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"clear\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/hosts/blocklist",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"hosts",
														"blocklist"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "remove",
							"item": [
								{
									"name": "Remove offline hosts",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"maxDowntimeHours\": \"<integer>\",\n  \"maxConsecutiveScanFailures\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/hosts/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"hosts",
												"remove"
											]
										},
										"description": "Removes hosts that have been offline for the specified duration"
									},
									"response": [
										{
											"name": "Number of hosts removed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"maxDowntimeHours\": \"<integer>\",\n  \"maxConsecutiveScanFailures\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/hosts/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"hosts",
														"remove"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<integer>"
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"maxDowntimeHours\": \"<integer>\",\n  \"maxConsecutiveScanFailures\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/hosts/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"hosts",
														"remove"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"maxDowntimeHours\": \"<integer>\",\n  \"maxConsecutiveScanFailures\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/hosts/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"hosts",
														"remove"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get usable hosts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bus/hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bus",
										"hosts"
									]
								},
								"description": "Returns a list of hosts that pass the gouging checks"
							},
							"response": [
								{
									"name": "List of usable hosts",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/hosts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"hosts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"publicKey\": \"ed25519:3a85a9DCCA43a033Ce31Ca30a88F947CECaAeD9eF1d3603cDbcBDc6f3dc46f3A\",\n    \"siamuxAddr\": \"<string>\",\n    \"v2SiamuxAddresses\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"publicKey\": \"ed25519:E5a1B60DDDfAB47dFEcdCc6d784E4dE861F187ad2fb497c85F54cEb8DAAB7b4A\",\n    \"siamuxAddr\": \"<string>\",\n    \"v2SiamuxAddresses\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bus/hosts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"hosts"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Search hosts using filters",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"usabilityMode\": \"all\",\n  \"filterMode\": \"allowed\",\n  \"offset\": 0,\n  \"limit\": -1,\n  \"addressContains\": \"<string>\",\n  \"keyIn\": [\n    \"ed25519:DF6ca3139C32e871fA78C7f798A7D8EBaf8EE9c621e390caE1B26a3eedE581D1\",\n    \"ed25519:FdF3925aBB105F69ca6ff632D7bfDd8B9cC3fcc2dd55e8065C9d19B96CcCbf32\"\n  ],\n  \"maxLastScan\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bus/hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bus",
										"hosts"
									]
								},
								"description": "Returns a filtered list of hosts based on specified criteria"
							},
							"response": [
								{
									"name": "List of filtered hosts",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"usabilityMode\": \"all\",\n  \"filterMode\": \"allowed\",\n  \"offset\": 0,\n  \"limit\": -1,\n  \"addressContains\": \"<string>\",\n  \"keyIn\": [\n    \"ed25519:DF6ca3139C32e871fA78C7f798A7D8EBaf8EE9c621e390caE1B26a3eedE581D1\",\n    \"ed25519:FdF3925aBB105F69ca6ff632D7bfDd8B9cC3fcc2dd55e8065C9d19B96CcCbf32\"\n  ],\n  \"maxLastScan\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/hosts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"hosts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"knownSince\": \"<dateTime>\",\n    \"lastAnnouncement\": \"<dateTime>\",\n    \"publicKey\": \"ed25519:7a340F86cb3824b48d1a2FacEBa03CED6DCeAa3cADe4cdDf4B2bE78dBEaa94C6\",\n    \"netAddress\": \"<string>\",\n    \"priceTable\": {\n      \"uid\": \"<string>\",\n      \"validity\": \"<long>\",\n      \"hostblockheight\": \"<integer>\",\n      \"updatepricetablecost\": \"8\",\n      \"accountbalancecost\": \"72706\",\n      \"fundaccountcost\": \"4\",\n      \"latestrevisioncost\": \"8400\",\n      \"subscriptionmemorycost\": \"27\",\n      \"subscriptionnotificationcost\": \"929570463\",\n      \"initbasecost\": \"08\",\n      \"memorytimecost\": \"32\",\n      \"downloadbandwidthcost\": \"2045060786\",\n      \"uploadbandwidthcost\": \"56800\",\n      \"dropsectorsbasecost\": \"61\",\n      \"dropsectorsunitcost\": \"82591658901\",\n      \"hassectorbasecost\": \"63827326\",\n      \"readbasecost\": \"55915\",\n      \"readlengthcost\": \"62690180915\",\n      \"renewcontractcost\": \"25286903481\",\n      \"revisionbasecost\": \"7255606260\",\n      \"swapsectorcost\": \"86229486\",\n      \"writebasecost\": \"8\",\n      \"writelengthcost\": \"93584\",\n      \"writestorecost\": \"0\",\n      \"txnfeeminrecommended\": \"952943\",\n      \"txnfeemaxrecommended\": \"3410861001\",\n      \"contractprice\": \"0513\",\n      \"collateralcost\": \"822\",\n      \"maxcollateral\": \"3\",\n      \"maxduration\": \"<integer>\",\n      \"windowsize\": \"<integer>\",\n      \"registryentriesleft\": \"<integer>\",\n      \"registryentriestotal\": \"<integer>\"\n    },\n    \"settings\": {\n      \"acceptingContracts\": \"<boolean>\",\n      \"maxDownloadBatchSize\": \"<integer>\",\n      \"maxDuration\": \"<integer>\",\n      \"maxReviseBatchSize\": \"<integer>\",\n      \"netAddress\": \"<string>\",\n      \"remainingStorage\": \"<integer>\",\n      \"sectorSize\": \"<integer>\",\n      \"totalStorage\": \"<integer>\",\n      \"address\": \"250bE28Aef9457eAAaD42A90BEC826c5C71ccD4ab7DD6aC3CAb24d78FB530Fa9\",\n      \"windowSize\": \"<integer>\",\n      \"collateral\": \"6065856760\",\n      \"maxCollateral\": \"650827\",\n      \"baseRPCPrice\": \"83\",\n      \"contractPrice\": \"37558360790\",\n      \"downloadBandwidthPrice\": \"85232\",\n      \"sectorAccessPrice\": \"038437\",\n      \"storagePrice\": \"82769630716\",\n      \"uploadBandwidthPrice\": \"547686667\",\n      \"ephemeralAccountExpiry\": \"<long>\",\n      \"maxEphemeralAccountBalance\": \"0\",\n      \"revisionNumber\": \"<integer>\",\n      \"version\": \"<string>\",\n      \"release\": \"<string>\",\n      \"siamuxPort\": \"<string>\"\n    },\n    \"v2Settings\": {\n      \"protocolVersion\": [\n        \"<integer>\",\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"release\": \"<string>\",\n      \"walletAddress\": \"E974F0DAb938FDD08fF8A9C307fCD9Dd078bCcEBff8d08B300a5f0bc3dFBc8Ba\",\n      \"acceptingContracts\": \"<boolean>\",\n      \"maxCollateral\": \"25\",\n      \"maxContractDuration\": \"<integer>\",\n      \"remainingStorage\": \"<integer>\",\n      \"totalStorage\": \"<integer>\",\n      \"prices\": {\n        \"contractPrice\": \"39\",\n        \"collateral\": \"259513\",\n        \"storagePrice\": \"40021197615\",\n        \"ingressPrice\": \"0\",\n        \"egressPrice\": \"0\",\n        \"tipHeight\": \"<integer>\",\n        \"validUntil\": \"<dateTime>\",\n        \"signature\": \"204b6B7cdFa7529EB3633e03DEef08D195D568F13B7c17b1b129Dd743D6d108B\"\n      }\n    },\n    \"interactions\": {\n      \"totalScans\": \"<integer>\",\n      \"lastScan\": \"<dateTime>\",\n      \"lastScanSuccess\": \"<boolean>\",\n      \"lostSectors\": \"<integer>\",\n      \"secondToLastScanSuccess\": \"<boolean>\",\n      \"uptime\": \"<string>\",\n      \"downtime\": \"<string>\",\n      \"successfulInteractions\": \"<float>\",\n      \"failedInteractions\": \"<float>\"\n    },\n    \"scanned\": \"<boolean>\",\n    \"blocked\": \"<boolean>\",\n    \"checks\": {\n      \"gougingBreakdown\": {\n        \"downloadErr\": \"<string>\",\n        \"gougingErr\": \"<string>\",\n        \"pruneErr\": \"<string>\",\n        \"uploadErr\": \"<string>\"\n      },\n      \"scoreBreakdown\": {\n        \"age\": \"<float>\",\n        \"collateral\": \"<float>\",\n        \"interactions\": \"<float>\",\n        \"storageRemaining\": \"<float>\",\n        \"uptime\": \"<float>\",\n        \"version\": \"<float>\",\n        \"prices\": \"<float>\"\n      },\n      \"usabilityBreakdown\": {\n        \"blocked\": \"<boolean>\",\n        \"offline\": \"<boolean>\",\n        \"lowMaxDuration\": \"<boolean>\",\n        \"lowScore\": \"<boolean>\",\n        \"redundantIP\": \"<boolean>\",\n        \"gouging\": \"<boolean>\",\n        \"notAcceptingContracts\": \"<boolean>\",\n        \"notAnnounced\": \"<boolean>\",\n        \"notCompletingScan\": \"<boolean>\"\n      }\n    },\n    \"storedData\": \"<integer>\",\n    \"v2SiamuxAddresses\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"knownSince\": \"<dateTime>\",\n    \"lastAnnouncement\": \"<dateTime>\",\n    \"publicKey\": \"ed25519:F6605a74C90dBD0f372C90df433Ab1B85Dca502db5eEeb7ABE289A716DB8c4c9\",\n    \"netAddress\": \"<string>\",\n    \"priceTable\": {\n      \"uid\": \"<string>\",\n      \"validity\": \"<long>\",\n      \"hostblockheight\": \"<integer>\",\n      \"updatepricetablecost\": \"5731658639\",\n      \"accountbalancecost\": \"747892\",\n      \"fundaccountcost\": \"6\",\n      \"latestrevisioncost\": \"003\",\n      \"subscriptionmemorycost\": \"7735225\",\n      \"subscriptionnotificationcost\": \"00115\",\n      \"initbasecost\": \"2\",\n      \"memorytimecost\": \"02971\",\n      \"downloadbandwidthcost\": \"18794181467\",\n      \"uploadbandwidthcost\": \"418\",\n      \"dropsectorsbasecost\": \"6\",\n      \"dropsectorsunitcost\": \"260\",\n      \"hassectorbasecost\": \"5281907348\",\n      \"readbasecost\": \"56931795052\",\n      \"readlengthcost\": \"1880200235\",\n      \"renewcontractcost\": \"5483701\",\n      \"revisionbasecost\": \"6885\",\n      \"swapsectorcost\": \"24979382\",\n      \"writebasecost\": \"89836236\",\n      \"writelengthcost\": \"9340319\",\n      \"writestorecost\": \"691\",\n      \"txnfeeminrecommended\": \"1787212058\",\n      \"txnfeemaxrecommended\": \"47381\",\n      \"contractprice\": \"39634273\",\n      \"collateralcost\": \"558\",\n      \"maxcollateral\": \"375929\",\n      \"maxduration\": \"<integer>\",\n      \"windowsize\": \"<integer>\",\n      \"registryentriesleft\": \"<integer>\",\n      \"registryentriestotal\": \"<integer>\"\n    },\n    \"settings\": {\n      \"acceptingContracts\": \"<boolean>\",\n      \"maxDownloadBatchSize\": \"<integer>\",\n      \"maxDuration\": \"<integer>\",\n      \"maxReviseBatchSize\": \"<integer>\",\n      \"netAddress\": \"<string>\",\n      \"remainingStorage\": \"<integer>\",\n      \"sectorSize\": \"<integer>\",\n      \"totalStorage\": \"<integer>\",\n      \"address\": \"E9a1D054d77aABf79c252EdBE7ECB602e52A165f431e61fBbbF8108BCaAeBcfA\",\n      \"windowSize\": \"<integer>\",\n      \"collateral\": \"6799624710\",\n      \"maxCollateral\": \"22347393\",\n      \"baseRPCPrice\": \"58\",\n      \"contractPrice\": \"71\",\n      \"downloadBandwidthPrice\": \"278241882\",\n      \"sectorAccessPrice\": \"235663733\",\n      \"storagePrice\": \"7829\",\n      \"uploadBandwidthPrice\": \"583183\",\n      \"ephemeralAccountExpiry\": \"<long>\",\n      \"maxEphemeralAccountBalance\": \"485496\",\n      \"revisionNumber\": \"<integer>\",\n      \"version\": \"<string>\",\n      \"release\": \"<string>\",\n      \"siamuxPort\": \"<string>\"\n    },\n    \"v2Settings\": {\n      \"protocolVersion\": [\n        \"<integer>\",\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"release\": \"<string>\",\n      \"walletAddress\": \"aD6BcceEeC1A7db11718Da1a38c2ea3CDaCB87d6497F92a5Cc61EBbDfdBbB0Ac\",\n      \"acceptingContracts\": \"<boolean>\",\n      \"maxCollateral\": \"36224\",\n      \"maxContractDuration\": \"<integer>\",\n      \"remainingStorage\": \"<integer>\",\n      \"totalStorage\": \"<integer>\",\n      \"prices\": {\n        \"contractPrice\": \"734\",\n        \"collateral\": \"236973462\",\n        \"storagePrice\": \"7\",\n        \"ingressPrice\": \"76038\",\n        \"egressPrice\": \"27046059\",\n        \"tipHeight\": \"<integer>\",\n        \"validUntil\": \"<dateTime>\",\n        \"signature\": \"2d7A232EEebfEC269E5F0aFEbecF7f3D7b0A31C0b172eDb7CebADe1AdF4dFE0E\"\n      }\n    },\n    \"interactions\": {\n      \"totalScans\": \"<integer>\",\n      \"lastScan\": \"<dateTime>\",\n      \"lastScanSuccess\": \"<boolean>\",\n      \"lostSectors\": \"<integer>\",\n      \"secondToLastScanSuccess\": \"<boolean>\",\n      \"uptime\": \"<string>\",\n      \"downtime\": \"<string>\",\n      \"successfulInteractions\": \"<float>\",\n      \"failedInteractions\": \"<float>\"\n    },\n    \"scanned\": \"<boolean>\",\n    \"blocked\": \"<boolean>\",\n    \"checks\": {\n      \"gougingBreakdown\": {\n        \"downloadErr\": \"<string>\",\n        \"gougingErr\": \"<string>\",\n        \"pruneErr\": \"<string>\",\n        \"uploadErr\": \"<string>\"\n      },\n      \"scoreBreakdown\": {\n        \"age\": \"<float>\",\n        \"collateral\": \"<float>\",\n        \"interactions\": \"<float>\",\n        \"storageRemaining\": \"<float>\",\n        \"uptime\": \"<float>\",\n        \"version\": \"<float>\",\n        \"prices\": \"<float>\"\n      },\n      \"usabilityBreakdown\": {\n        \"blocked\": \"<boolean>\",\n        \"offline\": \"<boolean>\",\n        \"lowMaxDuration\": \"<boolean>\",\n        \"lowScore\": \"<boolean>\",\n        \"redundantIP\": \"<boolean>\",\n        \"gouging\": \"<boolean>\",\n        \"notAcceptingContracts\": \"<boolean>\",\n        \"notAnnounced\": \"<boolean>\",\n        \"notCompletingScan\": \"<boolean>\"\n      }\n    },\n    \"storedData\": \"<integer>\",\n    \"v2SiamuxAddresses\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"usabilityMode\": \"all\",\n  \"filterMode\": \"allowed\",\n  \"offset\": 0,\n  \"limit\": -1,\n  \"addressContains\": \"<string>\",\n  \"keyIn\": [\n    \"ed25519:DF6ca3139C32e871fA78C7f798A7D8EBaf8EE9c621e390caE1B26a3eedE581D1\",\n    \"ed25519:FdF3925aBB105F69ca6ff632D7bfDd8B9cC3fcc2dd55e8065C9d19B96CcCbf32\"\n  ],\n  \"maxLastScan\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/hosts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"hosts"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "host",
					"item": [
						{
							"name": "{hostkey}",
							"item": [
								{
									"name": "check",
									"item": [
										{
											"name": "Update host check",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"gougingBreakdown\": {\n    \"downloadErr\": \"<string>\",\n    \"gougingErr\": \"<string>\",\n    \"pruneErr\": \"<string>\",\n    \"uploadErr\": \"<string>\"\n  },\n  \"scoreBreakdown\": {\n    \"age\": \"<float>\",\n    \"collateral\": \"<float>\",\n    \"interactions\": \"<float>\",\n    \"storageRemaining\": \"<float>\",\n    \"uptime\": \"<float>\",\n    \"version\": \"<float>\",\n    \"prices\": \"<float>\"\n  },\n  \"usabilityBreakdown\": {\n    \"blocked\": \"<boolean>\",\n    \"offline\": \"<boolean>\",\n    \"lowMaxDuration\": \"<boolean>\",\n    \"lowScore\": \"<boolean>\",\n    \"redundantIP\": \"<boolean>\",\n    \"gouging\": \"<boolean>\",\n    \"notAcceptingContracts\": \"<boolean>\",\n    \"notAnnounced\": \"<boolean>\",\n    \"notCompletingScan\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/host/:hostkey/check",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"host",
														":hostkey",
														"check"
													],
													"variable": [
														{
															"key": "hostkey",
															"value": "ed25519:fdfa51897BdD00dFF8D0ae2a2daECf3bd87191D7fa6cFD898d25Ea2D0DB9badA",
															"description": "(Required) Public key of the host"
														}
													]
												},
												"description": "Updates host checks for a specific host"
											},
											"response": [
												{
													"name": "Host check updated successfully",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"gougingBreakdown\": {\n    \"downloadErr\": \"<string>\",\n    \"gougingErr\": \"<string>\",\n    \"pruneErr\": \"<string>\",\n    \"uploadErr\": \"<string>\"\n  },\n  \"scoreBreakdown\": {\n    \"age\": \"<float>\",\n    \"collateral\": \"<float>\",\n    \"interactions\": \"<float>\",\n    \"storageRemaining\": \"<float>\",\n    \"uptime\": \"<float>\",\n    \"version\": \"<float>\",\n    \"prices\": \"<float>\"\n  },\n  \"usabilityBreakdown\": {\n    \"blocked\": \"<boolean>\",\n    \"offline\": \"<boolean>\",\n    \"lowMaxDuration\": \"<boolean>\",\n    \"lowScore\": \"<boolean>\",\n    \"redundantIP\": \"<boolean>\",\n    \"gouging\": \"<boolean>\",\n    \"notAcceptingContracts\": \"<boolean>\",\n    \"notAnnounced\": \"<boolean>\",\n    \"notCompletingScan\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/host/:hostkey/check",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"host",
																":hostkey",
																"check"
															],
															"variable": [
																{
																	"key": "hostkey"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Malformed request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"gougingBreakdown\": {\n    \"downloadErr\": \"<string>\",\n    \"gougingErr\": \"<string>\",\n    \"pruneErr\": \"<string>\",\n    \"uploadErr\": \"<string>\"\n  },\n  \"scoreBreakdown\": {\n    \"age\": \"<float>\",\n    \"collateral\": \"<float>\",\n    \"interactions\": \"<float>\",\n    \"storageRemaining\": \"<float>\",\n    \"uptime\": \"<float>\",\n    \"version\": \"<float>\",\n    \"prices\": \"<float>\"\n  },\n  \"usabilityBreakdown\": {\n    \"blocked\": \"<boolean>\",\n    \"offline\": \"<boolean>\",\n    \"lowMaxDuration\": \"<boolean>\",\n    \"lowScore\": \"<boolean>\",\n    \"redundantIP\": \"<boolean>\",\n    \"gouging\": \"<boolean>\",\n    \"notAcceptingContracts\": \"<boolean>\",\n    \"notAnnounced\": \"<boolean>\",\n    \"notCompletingScan\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/host/:hostkey/check",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"host",
																":hostkey",
																"check"
															],
															"variable": [
																{
																	"key": "hostkey"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"gougingBreakdown\": {\n    \"downloadErr\": \"<string>\",\n    \"gougingErr\": \"<string>\",\n    \"pruneErr\": \"<string>\",\n    \"uploadErr\": \"<string>\"\n  },\n  \"scoreBreakdown\": {\n    \"age\": \"<float>\",\n    \"collateral\": \"<float>\",\n    \"interactions\": \"<float>\",\n    \"storageRemaining\": \"<float>\",\n    \"uptime\": \"<float>\",\n    \"version\": \"<float>\",\n    \"prices\": \"<float>\"\n  },\n  \"usabilityBreakdown\": {\n    \"blocked\": \"<boolean>\",\n    \"offline\": \"<boolean>\",\n    \"lowMaxDuration\": \"<boolean>\",\n    \"lowScore\": \"<boolean>\",\n    \"redundantIP\": \"<boolean>\",\n    \"gouging\": \"<boolean>\",\n    \"notAcceptingContracts\": \"<boolean>\",\n    \"notAnnounced\": \"<boolean>\",\n    \"notCompletingScan\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/host/:hostkey/check",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"host",
																":hostkey",
																"check"
															],
															"variable": [
																{
																	"key": "hostkey"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "resetlostsectors",
									"item": [
										{
											"name": "Reset lost sectors",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/host/:hostkey/resetlostsectors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"host",
														":hostkey",
														"resetlostsectors"
													],
													"variable": [
														{
															"key": "hostkey",
															"value": "ed25519:fdfa51897BdD00dFF8D0ae2a2daECf3bd87191D7fa6cFD898d25Ea2D0DB9badA",
															"description": "(Required) Public key of the host"
														}
													]
												},
												"description": "Resets the lost sectors counter for a specific host"
											},
											"response": [
												{
													"name": "Lost sectors reset successfully",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/bus/host/:hostkey/resetlostsectors",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"host",
																":hostkey",
																"resetlostsectors"
															],
															"variable": [
																{
																	"key": "hostkey"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/bus/host/:hostkey/resetlostsectors",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"host",
																":hostkey",
																"resetlostsectors"
															],
															"variable": [
																{
																	"key": "hostkey"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "scan",
									"item": [
										{
											"name": "Scan host",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"timeout\": \"<long>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/host/:hostkey/scan",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"host",
														":hostkey",
														"scan"
													],
													"variable": [
														{
															"key": "hostkey",
															"value": "ed25519:fdfa51897BdD00dFF8D0ae2a2daECf3bd87191D7fa6cFD898d25Ea2D0DB9badA",
															"description": "(Required) Public key of the host"
														}
													]
												},
												"description": "Performs a scan of the host to check its settings and availability"
											},
											"response": [
												{
													"name": "Host scan results",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"timeout\": \"<long>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/host/:hostkey/scan",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"host",
																":hostkey",
																"scan"
															],
															"variable": [
																{
																	"key": "hostkey"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ping\": \"<long>\",\n  \"scanError\": \"<string>\",\n  \"settings\": {\n    \"acceptingContracts\": \"<boolean>\",\n    \"maxDownloadBatchSize\": \"<integer>\",\n    \"maxDuration\": \"<integer>\",\n    \"maxReviseBatchSize\": \"<integer>\",\n    \"netAddress\": \"<string>\",\n    \"remainingStorage\": \"<integer>\",\n    \"sectorSize\": \"<integer>\",\n    \"totalStorage\": \"<integer>\",\n    \"address\": \"5ff7b9a22b00d9B847a6Be659bBCb021f96DaD9DDB9a8cBD79aDF4EdFcA77684\",\n    \"windowSize\": \"<integer>\",\n    \"collateral\": \"684678\",\n    \"maxCollateral\": \"27\",\n    \"baseRPCPrice\": \"870\",\n    \"contractPrice\": \"481025571\",\n    \"downloadBandwidthPrice\": \"9\",\n    \"sectorAccessPrice\": \"125324733\",\n    \"storagePrice\": \"9722533\",\n    \"uploadBandwidthPrice\": \"97219\",\n    \"ephemeralAccountExpiry\": \"<long>\",\n    \"maxEphemeralAccountBalance\": \"32001\",\n    \"revisionNumber\": \"<integer>\",\n    \"version\": \"<string>\",\n    \"release\": \"<string>\",\n    \"siamuxPort\": \"<string>\"\n  },\n  \"priceTable\": {\n    \"uid\": \"<string>\",\n    \"validity\": \"<long>\",\n    \"hostblockheight\": \"<integer>\",\n    \"updatepricetablecost\": \"155711\",\n    \"accountbalancecost\": \"47517381174\",\n    \"fundaccountcost\": \"577402\",\n    \"latestrevisioncost\": \"2608202534\",\n    \"subscriptionmemorycost\": \"7581002\",\n    \"subscriptionnotificationcost\": \"20924079\",\n    \"initbasecost\": \"13385077953\",\n    \"memorytimecost\": \"6676360139\",\n    \"downloadbandwidthcost\": \"9781690074\",\n    \"uploadbandwidthcost\": \"10269112105\",\n    \"dropsectorsbasecost\": \"696769\",\n    \"dropsectorsunitcost\": \"14235745199\",\n    \"hassectorbasecost\": \"6991913400\",\n    \"readbasecost\": \"903\",\n    \"readlengthcost\": \"068\",\n    \"renewcontractcost\": \"3800436111\",\n    \"revisionbasecost\": \"312\",\n    \"swapsectorcost\": \"449225967\",\n    \"writebasecost\": \"8725283083\",\n    \"writelengthcost\": \"909405\",\n    \"writestorecost\": \"85338\",\n    \"txnfeeminrecommended\": \"6715593\",\n    \"txnfeemaxrecommended\": \"40200963\",\n    \"contractprice\": \"514\",\n    \"collateralcost\": \"151741697\",\n    \"maxcollateral\": \"4267\",\n    \"maxduration\": \"<integer>\",\n    \"windowsize\": \"<integer>\",\n    \"registryentriesleft\": \"<integer>\",\n    \"registryentriestotal\": \"<integer>\"\n  },\n  \"v2Settings\": {\n    \"protocolVersion\": [\n      \"<integer>\",\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"release\": \"<string>\",\n    \"walletAddress\": \"CeaBaC61aCA4CF27e8eeeEAD1EB02BbA4B0FC2EBbF14cE17C8D6dcaE2d5172EF\",\n    \"acceptingContracts\": \"<boolean>\",\n    \"maxCollateral\": \"7254\",\n    \"maxContractDuration\": \"<integer>\",\n    \"remainingStorage\": \"<integer>\",\n    \"totalStorage\": \"<integer>\",\n    \"prices\": {\n      \"contractPrice\": \"70478567\",\n      \"collateral\": \"69011\",\n      \"storagePrice\": \"48465322\",\n      \"ingressPrice\": \"91002376\",\n      \"egressPrice\": \"33\",\n      \"tipHeight\": \"<integer>\",\n      \"validUntil\": \"<dateTime>\",\n      \"signature\": \"1Fe3a012d59e209f23f11Ca9f36F99cfbcc63b8BC7934d8FC4c16D3d3621E5E4\"\n    }\n  }\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"timeout\": \"<long>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/host/:hostkey/scan",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"host",
																":hostkey",
																"scan"
															],
															"variable": [
																{
																	"key": "hostkey"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not connected to peers",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"timeout\": \"<long>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/host/:hostkey/scan",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"host",
																":hostkey",
																"scan"
															],
															"variable": [
																{
																	"key": "hostkey"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get host details",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/host/:hostkey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"host",
												":hostkey"
											],
											"variable": [
												{
													"key": "hostkey",
													"value": "ed25519:fdfa51897BdD00dFF8D0ae2a2daECf3bd87191D7fa6cFD898d25Ea2D0DB9badA",
													"description": "(Required) Public key of the host"
												}
											]
										},
										"description": "Returns detailed information about a specific host"
									},
									"response": [
										{
											"name": "Host details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/host/:hostkey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"host",
														":hostkey"
													],
													"variable": [
														{
															"key": "hostkey"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"publicKey\": \"ed25519:0B47D2952EEEbeeecCf1aeA7cCA4Cbf77b4a48D0b96A5E87eaDC35cCDcdAFbcf\",\n  \"siamuxAddr\": \"<string>\",\n  \"v2SiamuxAddresses\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
										},
										{
											"name": "Host not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/host/:hostkey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"host",
														":hostkey"
													],
													"variable": [
														{
															"key": "hostkey"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/host/:hostkey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"host",
														":hostkey"
													],
													"variable": [
														{
															"key": "hostkey"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "metric",
					"item": [
						{
							"name": "{key}",
							"item": [
								{
									"name": "Get metrics",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/metric/:key?start=<dateTime>&n=<integer>&interval=<long>&contractid=fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C&hostkey=ed25519:fdfa51897BdD00dFF8D0ae2a2daECf3bd87191D7fa6cFD898d25Ea2D0DB9badA&hostversion=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"metric",
												":key"
											],
											"query": [
												{
													"key": "start",
													"value": "<dateTime>",
													"description": "(Required) Start time for the metrics query"
												},
												{
													"key": "n",
													"value": "<integer>",
													"description": "(Required) Number of intervals to fetch"
												},
												{
													"key": "interval",
													"value": "<long>",
													"description": "(Required) "
												},
												{
													"key": "contractid",
													"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C"
												},
												{
													"key": "hostkey",
													"value": "ed25519:fdfa51897BdD00dFF8D0ae2a2daECf3bd87191D7fa6cFD898d25Ea2D0DB9badA"
												},
												{
													"key": "hostversion",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "key",
													"value": "performance",
													"description": "(Required) The type of metric to fetch"
												}
											]
										}
									},
									"response": [
										{
											"name": "Successfully retrieved metrics",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/metric/:key?start=<dateTime>&n=<integer>&interval=<long>&contractid=fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C&hostkey=ed25519:fdfa51897BdD00dFF8D0ae2a2daECf3bd87191D7fa6cFD898d25Ea2D0DB9badA&hostversion=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"metric",
														":key"
													],
													"query": [
														{
															"key": "start",
															"value": "<dateTime>",
															"description": "(Required) Start time for the metrics query"
														},
														{
															"key": "n",
															"value": "<integer>",
															"description": "(Required) Number of intervals to fetch"
														},
														{
															"key": "interval",
															"value": "<long>",
															"description": "(Required) "
														},
														{
															"key": "contractid",
															"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C"
														},
														{
															"key": "hostkey",
															"value": "ed25519:fdfa51897BdD00dFF8D0ae2a2daECf3bd87191D7fa6cFD898d25Ea2D0DB9badA"
														},
														{
															"key": "hostversion",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"timestamp\": \"<dateTime>\",\n    \"contractID\": \"fcid:D7a0DfB94B2DFCD5d2e7915bF1C104fEBDcF053AE713fd62a0B43056C8BFCe84\",\n    \"hostKey\": \"ed25519:6b6E6ECe7096155E7ae2CB3d5306d1bFdF5dcF6aFB7aAD0FC9ffA0bd3aD45C19\",\n    \"remainingCollateral\": \"0791680\",\n    \"remainingFunds\": \"55553987553\",\n    \"revisionNumber\": \"<integer>\",\n    \"deleteSpending\": \"9907\",\n    \"fundAccountSpending\": \"4304893557\",\n    \"sectorRootsSpending\": \"5824243\",\n    \"uploadSpending\": \"581877613\"\n  },\n  {\n    \"timestamp\": \"<dateTime>\",\n    \"contractID\": \"fcid:c2D5a9Cc9eA65F7cbccecA7bBa1FE897C4F5c024B4a7B3dcBcB6ED8Ca4bbFE4F\",\n    \"hostKey\": \"ed25519:F3d1Fcd3650A512F6Bb6dE357cB6Dc3BfB29E6F3c401cCadfcf97E192EabaEF8\",\n    \"remainingCollateral\": \"61640513646\",\n    \"remainingFunds\": \"15\",\n    \"revisionNumber\": \"<integer>\",\n    \"deleteSpending\": \"62\",\n    \"fundAccountSpending\": \"1366187\",\n    \"sectorRootsSpending\": \"48659\",\n    \"uploadSpending\": \"443041312\"\n  }\n]"
										},
										{
											"name": "Invalid parameters",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/metric/:key?start=<dateTime>&n=<integer>&interval=<long>&contractid=fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C&hostkey=ed25519:fdfa51897BdD00dFF8D0ae2a2daECf3bd87191D7fa6cFD898d25Ea2D0DB9badA&hostversion=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"metric",
														":key"
													],
													"query": [
														{
															"key": "start",
															"value": "<dateTime>",
															"description": "(Required) Start time for the metrics query"
														},
														{
															"key": "n",
															"value": "<integer>",
															"description": "(Required) Number of intervals to fetch"
														},
														{
															"key": "interval",
															"value": "<long>",
															"description": "(Required) "
														},
														{
															"key": "contractid",
															"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C"
														},
														{
															"key": "hostkey",
															"value": "ed25519:fdfa51897BdD00dFF8D0ae2a2daECf3bd87191D7fa6cFD898d25Ea2D0DB9badA"
														},
														{
															"key": "hostversion",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/metric/:key?start=<dateTime>&n=<integer>&interval=<long>&contractid=fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C&hostkey=ed25519:fdfa51897BdD00dFF8D0ae2a2daECf3bd87191D7fa6cFD898d25Ea2D0DB9badA&hostversion=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"metric",
														":key"
													],
													"query": [
														{
															"key": "start",
															"value": "<dateTime>",
															"description": "(Required) Start time for the metrics query"
														},
														{
															"key": "n",
															"value": "<integer>",
															"description": "(Required) Number of intervals to fetch"
														},
														{
															"key": "interval",
															"value": "<long>",
															"description": "(Required) "
														},
														{
															"key": "contractid",
															"value": "fcid:192FB4aA7241Fc5B213C199Fda6017D9c156b7aeDA119521c49906a8019Ff51C"
														},
														{
															"key": "hostkey",
															"value": "ed25519:fdfa51897BdD00dFF8D0ae2a2daECf3bd87191D7fa6cFD898d25Ea2D0DB9badA"
														},
														{
															"key": "hostversion",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Record metrics",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metrics\": [\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"contractID\": \"fcid:9630BccE1CB95d8F1dE60f5fabf66AaFbEDEaAE9bC29121de95843A309Ea3915\",\n      \"hostKey\": \"ed25519:200c0Af3176Bfe2E7cBe051e4eA5f60EF04E95c7962E2440CFA5Dabf2eBa1f8A\",\n      \"hostVersion\": \"<string>\",\n      \"pruned\": \"<integer>\",\n      \"remaining\": \"<integer>\",\n      \"duration\": \"<long>\"\n    },\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"contractID\": \"fcid:9CA5EeCdC07f2Cfe76d7e82aBbdcb781b760dAAD109c689459bDBB2AaEaDac0b\",\n      \"hostKey\": \"ed25519:5714af0cE4FC4F71cdd609A9cea51956EBf5DD9A2aD68E2eede4F9B9ef27E531\",\n      \"hostVersion\": \"<string>\",\n      \"pruned\": \"<integer>\",\n      \"remaining\": \"<integer>\",\n      \"duration\": \"<long>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/metric/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"metric",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "performance",
													"description": "(Required) The type of metric to record"
												}
											]
										}
									},
									"response": [
										{
											"name": "Successfully recorded metrics",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"metrics\": [\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"contractID\": \"fcid:9630BccE1CB95d8F1dE60f5fabf66AaFbEDEaAE9bC29121de95843A309Ea3915\",\n      \"hostKey\": \"ed25519:200c0Af3176Bfe2E7cBe051e4eA5f60EF04E95c7962E2440CFA5Dabf2eBa1f8A\",\n      \"hostVersion\": \"<string>\",\n      \"pruned\": \"<integer>\",\n      \"remaining\": \"<integer>\",\n      \"duration\": \"<long>\"\n    },\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"contractID\": \"fcid:9CA5EeCdC07f2Cfe76d7e82aBbdcb781b760dAAD109c689459bDBB2AaEaDac0b\",\n      \"hostKey\": \"ed25519:5714af0cE4FC4F71cdd609A9cea51956EBf5DD9A2aD68E2eede4F9B9ef27E531\",\n      \"hostVersion\": \"<string>\",\n      \"pruned\": \"<integer>\",\n      \"remaining\": \"<integer>\",\n      \"duration\": \"<long>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/metric/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"metric",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid metric key or request body",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"metrics\": [\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"contractID\": \"fcid:9630BccE1CB95d8F1dE60f5fabf66AaFbEDEaAE9bC29121de95843A309Ea3915\",\n      \"hostKey\": \"ed25519:200c0Af3176Bfe2E7cBe051e4eA5f60EF04E95c7962E2440CFA5Dabf2eBa1f8A\",\n      \"hostVersion\": \"<string>\",\n      \"pruned\": \"<integer>\",\n      \"remaining\": \"<integer>\",\n      \"duration\": \"<long>\"\n    },\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"contractID\": \"fcid:9CA5EeCdC07f2Cfe76d7e82aBbdcb781b760dAAD109c689459bDBB2AaEaDac0b\",\n      \"hostKey\": \"ed25519:5714af0cE4FC4F71cdd609A9cea51956EBf5DD9A2aD68E2eede4F9B9ef27E531\",\n      \"hostVersion\": \"<string>\",\n      \"pruned\": \"<integer>\",\n      \"remaining\": \"<integer>\",\n      \"duration\": \"<long>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/metric/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"metric",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"metrics\": [\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"contractID\": \"fcid:9630BccE1CB95d8F1dE60f5fabf66AaFbEDEaAE9bC29121de95843A309Ea3915\",\n      \"hostKey\": \"ed25519:200c0Af3176Bfe2E7cBe051e4eA5f60EF04E95c7962E2440CFA5Dabf2eBa1f8A\",\n      \"hostVersion\": \"<string>\",\n      \"pruned\": \"<integer>\",\n      \"remaining\": \"<integer>\",\n      \"duration\": \"<long>\"\n    },\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"contractID\": \"fcid:9CA5EeCdC07f2Cfe76d7e82aBbdcb781b760dAAD109c689459bDBB2AaEaDac0b\",\n      \"hostKey\": \"ed25519:5714af0cE4FC4F71cdd609A9cea51956EBf5DD9A2aD68E2eede4F9B9ef27E531\",\n      \"hostVersion\": \"<string>\",\n      \"pruned\": \"<integer>\",\n      \"remaining\": \"<integer>\",\n      \"duration\": \"<long>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/metric/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"metric",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete metrics",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/metric/:key?cutoff=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"metric",
												":key"
											],
											"query": [
												{
													"key": "cutoff",
													"value": "<dateTime>",
													"description": "(Required) Delete metrics older than this timestamp"
												}
											],
											"variable": [
												{
													"key": "key",
													"value": "performance",
													"description": "(Required) The type of metric to delete"
												}
											]
										}
									},
									"response": [
										{
											"name": "Successfully deleted metrics",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/metric/:key?cutoff=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"metric",
														":key"
													],
													"query": [
														{
															"key": "cutoff",
															"value": "<dateTime>",
															"description": "(Required) Delete metrics older than this timestamp"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid parameters",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/metric/:key?cutoff=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"metric",
														":key"
													],
													"query": [
														{
															"key": "cutoff",
															"value": "<dateTime>",
															"description": "(Required) Delete metrics older than this timestamp"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/metric/:key?cutoff=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"metric",
														":key"
													],
													"query": [
														{
															"key": "cutoff",
															"value": "<dateTime>",
															"description": "(Required) Delete metrics older than this timestamp"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "multipart",
					"item": [
						{
							"name": "create",
							"item": [
								{
									"name": "Create a multipart upload",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bucket\": \"z87fnmi08\",\n  \"key\": \"<string>\",\n  \"mimeType\": \"<string>\",\n  \"metadata\": {\n    \"et_a\": \"<string>\",\n    \"nostrud_b7\": \"<string>\"\n  },\n  \"disableClientSideEncryption\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/multipart/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"multipart",
												"create"
											]
										},
										"description": "Creates a new multipart upload and returns an upload ID."
									},
									"response": [
										{
											"name": "Successfully created multipart upload",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"z87fnmi08\",\n  \"key\": \"<string>\",\n  \"mimeType\": \"<string>\",\n  \"metadata\": {\n    \"et_a\": \"<string>\",\n    \"nostrud_b7\": \"<string>\"\n  },\n  \"disableClientSideEncryption\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/multipart/create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"multipart",
														"create"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"uploadID\": \"<string>\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"z87fnmi08\",\n  \"key\": \"<string>\",\n  \"mimeType\": \"<string>\",\n  \"metadata\": {\n    \"et_a\": \"<string>\",\n    \"nostrud_b7\": \"<string>\"\n  },\n  \"disableClientSideEncryption\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/multipart/create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"multipart",
														"create"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "abort",
							"item": [
								{
									"name": "Abort a multipart upload",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bucket\": \"tlvryts4fbg24zl543umj4dslkpwh\",\n  \"key\": \"<string>\",\n  \"uploadID\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/multipart/abort",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"multipart",
												"abort"
											]
										},
										"description": "Aborts an ongoing multipart upload and removes any uploaded parts."
									},
									"response": [
										{
											"name": "Successfully aborted multipart upload",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"tlvryts4fbg24zl543umj4dslkpwh\",\n  \"key\": \"<string>\",\n  \"uploadID\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/multipart/abort",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"multipart",
														"abort"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Upload not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"tlvryts4fbg24zl543umj4dslkpwh\",\n  \"key\": \"<string>\",\n  \"uploadID\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/multipart/abort",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"multipart",
														"abort"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"tlvryts4fbg24zl543umj4dslkpwh\",\n  \"key\": \"<string>\",\n  \"uploadID\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/multipart/abort",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"multipart",
														"abort"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "complete",
							"item": [
								{
									"name": "Complete a multipart upload",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bucket\": \"foyl9lzgqv6la5bmc6svqss0r238bvnbgmb48yzgto2eoo85nvk93eqcaa\",\n  \"key\": \"<string>\",\n  \"uploadID\": \"<string>\",\n  \"parts\": [\n    {\n      \"partNumber\": \"<integer>\",\n      \"eTag\": \"\\\"\\\"\"\n    },\n    {\n      \"partNumber\": \"<integer>\",\n      \"eTag\": \"W/\\\"J[@\\\"\"\n    }\n  ],\n  \"metadata\": {\n    \"minim_dc\": \"<string>\",\n    \"animce2\": \"<string>\",\n    \"sed_3bf\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/multipart/complete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"multipart",
												"complete"
											]
										},
										"description": "Completes a multipart upload by combining all uploaded parts into a single object."
									},
									"response": [
										{
											"name": "Successfully completed multipart upload",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"foyl9lzgqv6la5bmc6svqss0r238bvnbgmb48yzgto2eoo85nvk93eqcaa\",\n  \"key\": \"<string>\",\n  \"uploadID\": \"<string>\",\n  \"parts\": [\n    {\n      \"partNumber\": \"<integer>\",\n      \"eTag\": \"\\\"\\\"\"\n    },\n    {\n      \"partNumber\": \"<integer>\",\n      \"eTag\": \"W/\\\"J[@\\\"\"\n    }\n  ],\n  \"metadata\": {\n    \"minim_dc\": \"<string>\",\n    \"animce2\": \"<string>\",\n    \"sed_3bf\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/multipart/complete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"multipart",
														"complete"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"eTag\": \"<string>\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"foyl9lzgqv6la5bmc6svqss0r238bvnbgmb48yzgto2eoo85nvk93eqcaa\",\n  \"key\": \"<string>\",\n  \"uploadID\": \"<string>\",\n  \"parts\": [\n    {\n      \"partNumber\": \"<integer>\",\n      \"eTag\": \"\\\"\\\"\"\n    },\n    {\n      \"partNumber\": \"<integer>\",\n      \"eTag\": \"W/\\\"J[@\\\"\"\n    }\n  ],\n  \"metadata\": {\n    \"minim_dc\": \"<string>\",\n    \"animce2\": \"<string>\",\n    \"sed_3bf\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/multipart/complete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"multipart",
														"complete"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "part",
							"item": [
								{
									"name": "Upload a part of a multipart upload",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bucket\": \"cs5xml3w99utz806h8pgy6ia6rjgd0y\",\n  \"eTag\": \"\\\"hlbV\\\"\",\n  \"key\": \"<string>\",\n  \"uploadID\": \"<string>\",\n  \"partNumber\": \"<integer>\",\n  \"slices\": [\n    {\n      \"slab\": {\n        \"health\": \"<float>\",\n        \"encryptionKey\": \"skey:A01FC4AbC8212Da6bBa8f0068fA79806ACA49bDb22bDd01c66D4fd7D6ccfec33\",\n        \"minShards\": \"<integer>\"\n      },\n      \"offset\": \"<integer>\",\n      \"limit\": \"<integer>\"\n    },\n    {\n      \"slab\": {\n        \"health\": \"<float>\",\n        \"encryptionKey\": \"key:9D58A3eB3C1CA6D81b26C96025Ad6f5dE0e42EAbdd75f7EDa4A48db87C3A1Ba3\",\n        \"minShards\": \"<integer>\"\n      },\n      \"offset\": \"<integer>\",\n      \"limit\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/multipart/part",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"multipart",
												"part"
											]
										},
										"description": "Adds a part to an ongoing multipart upload."
									},
									"response": [
										{
											"name": "Successfully uploaded part",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"cs5xml3w99utz806h8pgy6ia6rjgd0y\",\n  \"eTag\": \"\\\"hlbV\\\"\",\n  \"key\": \"<string>\",\n  \"uploadID\": \"<string>\",\n  \"partNumber\": \"<integer>\",\n  \"slices\": [\n    {\n      \"slab\": {\n        \"health\": \"<float>\",\n        \"encryptionKey\": \"skey:A01FC4AbC8212Da6bBa8f0068fA79806ACA49bDb22bDd01c66D4fd7D6ccfec33\",\n        \"minShards\": \"<integer>\"\n      },\n      \"offset\": \"<integer>\",\n      \"limit\": \"<integer>\"\n    },\n    {\n      \"slab\": {\n        \"health\": \"<float>\",\n        \"encryptionKey\": \"key:9D58A3eB3C1CA6D81b26C96025Ad6f5dE0e42EAbdd75f7EDa4A48db87C3A1Ba3\",\n        \"minShards\": \"<integer>\"\n      },\n      \"offset\": \"<integer>\",\n      \"limit\": \"<integer>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/multipart/part",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"multipart",
														"part"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"cs5xml3w99utz806h8pgy6ia6rjgd0y\",\n  \"eTag\": \"\\\"hlbV\\\"\",\n  \"key\": \"<string>\",\n  \"uploadID\": \"<string>\",\n  \"partNumber\": \"<integer>\",\n  \"slices\": [\n    {\n      \"slab\": {\n        \"health\": \"<float>\",\n        \"encryptionKey\": \"skey:A01FC4AbC8212Da6bBa8f0068fA79806ACA49bDb22bDd01c66D4fd7D6ccfec33\",\n        \"minShards\": \"<integer>\"\n      },\n      \"offset\": \"<integer>\",\n      \"limit\": \"<integer>\"\n    },\n    {\n      \"slab\": {\n        \"health\": \"<float>\",\n        \"encryptionKey\": \"key:9D58A3eB3C1CA6D81b26C96025Ad6f5dE0e42EAbdd75f7EDa4A48db87C3A1Ba3\",\n        \"minShards\": \"<integer>\"\n      },\n      \"offset\": \"<integer>\",\n      \"limit\": \"<integer>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/multipart/part",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"multipart",
														"part"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"cs5xml3w99utz806h8pgy6ia6rjgd0y\",\n  \"eTag\": \"\\\"hlbV\\\"\",\n  \"key\": \"<string>\",\n  \"uploadID\": \"<string>\",\n  \"partNumber\": \"<integer>\",\n  \"slices\": [\n    {\n      \"slab\": {\n        \"health\": \"<float>\",\n        \"encryptionKey\": \"skey:A01FC4AbC8212Da6bBa8f0068fA79806ACA49bDb22bDd01c66D4fd7D6ccfec33\",\n        \"minShards\": \"<integer>\"\n      },\n      \"offset\": \"<integer>\",\n      \"limit\": \"<integer>\"\n    },\n    {\n      \"slab\": {\n        \"health\": \"<float>\",\n        \"encryptionKey\": \"key:9D58A3eB3C1CA6D81b26C96025Ad6f5dE0e42EAbdd75f7EDa4A48db87C3A1Ba3\",\n        \"minShards\": \"<integer>\"\n      },\n      \"offset\": \"<integer>\",\n      \"limit\": \"<integer>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/multipart/part",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"multipart",
														"part"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "upload",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Get multipart upload details",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/multipart/upload/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"multipart",
														"upload",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Returns details about an ongoing multipart upload."
											},
											"response": [
												{
													"name": "Successfully retrieved multipart upload details",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/bus/multipart/upload/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"multipart",
																"upload",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"bucket\": \"hmjw2s2hrb7zzrq6mw-j5f0gun6empzy-lf3d9czi5b\",\n  \"encryptionKey\": \"key:fA7c79Bd9fD041eb6e16a6C29DA40CbaA1ec0B8f4B1bEfAE859425BBbC2700BD\",\n  \"key\": \"<string>\",\n  \"uploadID\": \"<string>\",\n  \"createdAt\": \"<dateTime>\"\n}"
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/bus/multipart/upload/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"multipart",
																"upload",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "listuploads",
							"item": [
								{
									"name": "List multipart uploads",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bucket\": \"2yr9z2rebqwf1ebahdfg0hv6xbhkjjmr7askwuwj2sy9fbxk6d1kgnaq\",\n  \"prefix\": \"<string>\",\n  \"keyMarker\": \"<string>\",\n  \"uploadIDMarker\": \"<string>\",\n  \"limit\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/multipart/listuploads",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"multipart",
												"listuploads"
											]
										},
										"description": "Lists all ongoing multipart uploads."
									},
									"response": [
										{
											"name": "Successfully listed multipart uploads",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"2yr9z2rebqwf1ebahdfg0hv6xbhkjjmr7askwuwj2sy9fbxk6d1kgnaq\",\n  \"prefix\": \"<string>\",\n  \"keyMarker\": \"<string>\",\n  \"uploadIDMarker\": \"<string>\",\n  \"limit\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/multipart/listuploads",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"multipart",
														"listuploads"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"hasMore\": \"<boolean>\",\n  \"nextMarker\": \"<string>\",\n  \"nextUploadIDMarker\": \"<string>\",\n  \"uploads\": [\n    {\n      \"bucket\": \"<string>\",\n      \"encryptionKey\": \"<string>\",\n      \"key\": \"<string>\",\n      \"uploadID\": \"<string>\",\n      \"createdAt\": \"<dateTime>\"\n    },\n    {\n      \"bucket\": \"<string>\",\n      \"encryptionKey\": \"<string>\",\n      \"key\": \"<string>\",\n      \"uploadID\": \"<string>\",\n      \"createdAt\": \"<dateTime>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "listparts",
							"item": [
								{
									"name": "List parts of a multipart upload",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bucket\": \"yaokpfq\",\n  \"key\": \"<string>\",\n  \"uploadID\": \"<string>\",\n  \"partNumberMarker\": \"<integer>\",\n  \"limit\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/multipart/listparts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"multipart",
												"listparts"
											]
										},
										"description": "Lists all parts that have been uploaded for a specific multipart upload."
									},
									"response": [
										{
											"name": "Successfully listed multipart upload parts",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"yaokpfq\",\n  \"key\": \"<string>\",\n  \"uploadID\": \"<string>\",\n  \"partNumberMarker\": \"<integer>\",\n  \"limit\": \"<long>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/multipart/listparts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"multipart",
														"listparts"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"hasMore\": \"<boolean>\",\n  \"nextMarker\": \"<integer>\",\n  \"parts\": [\n    {\n      \"partNumber\": \"<integer>\",\n      \"lastModified\": \"<dateTime>\",\n      \"eTag\": \"W/\\\"\\\"\",\n      \"size\": \"<long>\"\n    },\n    {\n      \"partNumber\": \"<integer>\",\n      \"lastModified\": \"<dateTime>\",\n      \"eTag\": \"W/\\\"7xOA\\\"\",\n      \"size\": \"<long>\"\n    }\n  ]\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"yaokpfq\",\n  \"key\": \"<string>\",\n  \"uploadID\": \"<string>\",\n  \"partNumberMarker\": \"<integer>\",\n  \"limit\": \"<long>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/multipart/listparts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"multipart",
														"listparts"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "objects",
					"item": [
						{
							"name": "{prefix}",
							"item": [
								{
									"name": "List objects",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/objects/:prefix?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&delimiter=<string>&limit=-1&marker=<string>&sortby=<string>&sortdir=<string>&substring=<string>&slabencryptionkey=skey:0DCb66aBFA094CAaEcc4cA7e45AC14b3eaAFe22801EABccb7fbFE34D4361994e",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"objects",
												":prefix"
											],
											"query": [
												{
													"key": "bucket",
													"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"description": "(Required) "
												},
												{
													"key": "delimiter",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "-1"
												},
												{
													"key": "marker",
													"value": "<string>"
												},
												{
													"key": "sortby",
													"value": "<string>"
												},
												{
													"key": "sortdir",
													"value": "<string>"
												},
												{
													"key": "substring",
													"value": "<string>"
												},
												{
													"key": "slabencryptionkey",
													"value": "skey:0DCb66aBFA094CAaEcc4cA7e45AC14b3eaAFe22801EABccb7fbFE34D4361994e"
												}
											],
											"variable": [
												{
													"key": "prefix",
													"value": "&>5xLg:&S6",
													"description": "(Required) The prefix to filter objects by"
												}
											]
										},
										"description": "Lists objects with the specified prefix."
									},
									"response": [
										{
											"name": "Successfully listed objects",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/objects/:prefix?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&delimiter=<string>&limit=-1&marker=<string>&sortby=<string>&sortdir=<string>&substring=<string>&slabencryptionkey=skey:0DCb66aBFA094CAaEcc4cA7e45AC14b3eaAFe22801EABccb7fbFE34D4361994e",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"objects",
														":prefix"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) "
														},
														{
															"key": "delimiter",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "-1"
														},
														{
															"key": "marker",
															"value": "<string>"
														},
														{
															"key": "sortby",
															"value": "<string>"
														},
														{
															"key": "sortdir",
															"value": "<string>"
														},
														{
															"key": "substring",
															"value": "<string>"
														},
														{
															"key": "slabencryptionkey",
															"value": "skey:0DCb66aBFA094CAaEcc4cA7e45AC14b3eaAFe22801EABccb7fbFE34D4361994e"
														}
													],
													"variable": [
														{
															"key": "prefix"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"objects\": [\n    {\n      \"metadata\": {\n        \"sint79\": \"<string>\"\n      },\n      \"bucket\": \"gyu5arzqlc992o1cld\",\n      \"etag\": \"\\\"\\\"\",\n      \"health\": \"<float>\",\n      \"modTime\": \"<dateTime>\",\n      \"key\": \"<string>\",\n      \"size\": \"<long>\",\n      \"mimeType\": \"<string>\",\n      \"encryptionKey\": \"key:73889cAed0FaF8b2A441cC69ACFdB67E27FfdbD00DC50Caf2d1A03ED1DB5385D\",\n      \"slabs\": [\n        {\n          \"slab\": {\n            \"health\": \"<float>\",\n            \"encryptionKey\": \"skey:ACc54f1bc7eC3BcBadc0Ad035CFbDaCEF6cff06A1b21B0b893065981531CF6b0\",\n            \"minShards\": \"<integer>\"\n          },\n          \"offset\": \"<integer>\",\n          \"limit\": \"<integer>\"\n        },\n        {\n          \"slab\": {\n            \"health\": \"<float>\",\n            \"encryptionKey\": \"key:D14F1DC76Ae2dd43a8A14138f152b2FEEc9Bc534BcEdA1f6A701bbc15eC87CBc\",\n            \"minShards\": \"<integer>\"\n          },\n          \"offset\": \"<integer>\",\n          \"limit\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"metadata\": {\n        \"anim_0_\": \"<string>\"\n      },\n      \"bucket\": \"ek7le5uw97xypglg\",\n      \"etag\": \"\\\"\\\"\",\n      \"health\": \"<float>\",\n      \"modTime\": \"<dateTime>\",\n      \"key\": \"<string>\",\n      \"size\": \"<long>\",\n      \"mimeType\": \"<string>\",\n      \"encryptionKey\": \"skey:7E45a1b1D8eFBD1Fe8E0d43e9C0E9113EBC880780F10b9BB3Bb65338A2B697fA\",\n      \"slabs\": [\n        {\n          \"slab\": {\n            \"health\": \"<float>\",\n            \"encryptionKey\": \"key:fbC7f4DB9AB28c7D49aABEBbdf470a23CE2Ff8eFDfF570D63d7dDD31D17dc027\",\n            \"minShards\": \"<integer>\"\n          },\n          \"offset\": \"<integer>\",\n          \"limit\": \"<integer>\"\n        },\n        {\n          \"slab\": {\n            \"health\": \"<float>\",\n            \"encryptionKey\": \"skey:d42aA83485fA4fac7e0EF7ffd6bb83Bfaba6Aee0E83b79aE43BF26B8b029BDBa\",\n            \"minShards\": \"<integer>\"\n          },\n          \"offset\": \"<integer>\",\n          \"limit\": \"<integer>\"\n        }\n      ]\n    }\n  ],\n  \"hasMore\": \"<boolean>\"\n}"
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/objects/:prefix?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&delimiter=<string>&limit=-1&marker=<string>&sortby=<string>&sortdir=<string>&substring=<string>&slabencryptionkey=skey:0DCb66aBFA094CAaEcc4cA7e45AC14b3eaAFe22801EABccb7fbFE34D4361994e",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"objects",
														":prefix"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) "
														},
														{
															"key": "delimiter",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "-1"
														},
														{
															"key": "marker",
															"value": "<string>"
														},
														{
															"key": "sortby",
															"value": "<string>"
														},
														{
															"key": "sortdir",
															"value": "<string>"
														},
														{
															"key": "substring",
															"value": "<string>"
														},
														{
															"key": "slabencryptionkey",
															"value": "skey:0DCb66aBFA094CAaEcc4cA7e45AC14b3eaAFe22801EABccb7fbFE34D4361994e"
														}
													],
													"variable": [
														{
															"key": "prefix"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/objects/:prefix?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&delimiter=<string>&limit=-1&marker=<string>&sortby=<string>&sortdir=<string>&substring=<string>&slabencryptionkey=skey:0DCb66aBFA094CAaEcc4cA7e45AC14b3eaAFe22801EABccb7fbFE34D4361994e",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"objects",
														":prefix"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) "
														},
														{
															"key": "delimiter",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "-1"
														},
														{
															"key": "marker",
															"value": "<string>"
														},
														{
															"key": "sortby",
															"value": "<string>"
														},
														{
															"key": "sortdir",
															"value": "<string>"
														},
														{
															"key": "substring",
															"value": "<string>"
														},
														{
															"key": "slabencryptionkey",
															"value": "skey:0DCb66aBFA094CAaEcc4cA7e45AC14b3eaAFe22801EABccb7fbFE34D4361994e"
														}
													],
													"variable": [
														{
															"key": "prefix"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "copy",
							"item": [
								{
									"name": "Copy object",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sourceBucket\": \"pe1sp3ndnjirmt4efjtq48uy1lp1u\",\n  \"destinationBucket\": \"ro-3i04m2u6h9gb4cfsp4x50rs\",\n  \"sourceKey\": \"<string>\",\n  \"destinationKey\": \"<string>\",\n  \"mimeType\": \"<string>\",\n  \"metadata\": {\n    \"ullamco6e\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/objects/copy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"objects",
												"copy"
											]
										},
										"description": "Copies an object from one location to another."
									},
									"response": [
										{
											"name": "Successfully copied object",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sourceBucket\": \"pe1sp3ndnjirmt4efjtq48uy1lp1u\",\n  \"destinationBucket\": \"ro-3i04m2u6h9gb4cfsp4x50rs\",\n  \"sourceKey\": \"<string>\",\n  \"destinationKey\": \"<string>\",\n  \"mimeType\": \"<string>\",\n  \"metadata\": {\n    \"ullamco6e\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/objects/copy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"objects",
														"copy"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Last-Modified",
													"value": "<string>",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												},
												{
													"key": "ETag",
													"value": "<string>",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"bucket\": \"615lftbn34gfv2npumlywn6t-q2c4fbyo-ndrt05ki1bp\",\n  \"etag\": \"W/\\\"T84\\\"\",\n  \"health\": \"<float>\",\n  \"modTime\": \"<dateTime>\",\n  \"key\": \"<string>\",\n  \"size\": \"<long>\",\n  \"mimeType\": \"<string>\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sourceBucket\": \"pe1sp3ndnjirmt4efjtq48uy1lp1u\",\n  \"destinationBucket\": \"ro-3i04m2u6h9gb4cfsp4x50rs\",\n  \"sourceKey\": \"<string>\",\n  \"destinationKey\": \"<string>\",\n  \"mimeType\": \"<string>\",\n  \"metadata\": {\n    \"ullamco6e\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/objects/copy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"objects",
														"copy"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "remove",
							"item": [
								{
									"name": "Remove objects by prefix",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bucket\": \"1amvz8gpelkomg8j\",\n  \"prefix\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/objects/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"objects",
												"remove"
											]
										},
										"description": "Removes all objects with the specified prefix."
									},
									"response": [
										{
											"name": "Successfully removed objects",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"1amvz8gpelkomg8j\",\n  \"prefix\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/objects/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"objects",
														"remove"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"1amvz8gpelkomg8j\",\n  \"prefix\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/objects/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"objects",
														"remove"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"1amvz8gpelkomg8j\",\n  \"prefix\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/objects/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"objects",
														"remove"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "rename",
							"item": [
								{
									"name": "Rename objects",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bucket\": \"fku4--n-sfrcj6w7l-jkxbnwok2uxqk322mkw6lkz6jp4ygdha71w0i\",\n  \"from\": \"<string>\",\n  \"to\": \"<string>\",\n  \"mode\": \"single\",\n  \"force\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/objects/rename",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"objects",
												"rename"
											]
										},
										"description": "Renames a single object or multiple objects with a prefix."
									},
									"response": [
										{
											"name": "Successfully renamed objects",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"fku4--n-sfrcj6w7l-jkxbnwok2uxqk322mkw6lkz6jp4ygdha71w0i\",\n  \"from\": \"<string>\",\n  \"to\": \"<string>\",\n  \"mode\": \"single\",\n  \"force\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/objects/rename",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"objects",
														"rename"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"fku4--n-sfrcj6w7l-jkxbnwok2uxqk322mkw6lkz6jp4ygdha71w0i\",\n  \"from\": \"<string>\",\n  \"to\": \"<string>\",\n  \"mode\": \"single\",\n  \"force\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/objects/rename",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"objects",
														"rename"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"fku4--n-sfrcj6w7l-jkxbnwok2uxqk322mkw6lkz6jp4ygdha71w0i\",\n  \"from\": \"<string>\",\n  \"to\": \"<string>\",\n  \"mode\": \"single\",\n  \"force\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/objects/rename",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"objects",
														"rename"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "object",
					"item": [
						{
							"name": "{key}",
							"item": [
								{
									"name": "Get object",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/object/:key?bucket=mybucket&onlymetadata=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"object",
												":key"
											],
											"query": [
												{
													"key": "bucket",
													"value": "mybucket",
													"description": "(Required) The bucket the object is stored in"
												},
												{
													"key": "onlymetadata",
													"value": "<boolean>",
													"description": "If true, only metadata about the object rather than it's content will be returned. Note that the content is not actually the downloaded object but itself metadata about where to download the object from."
												}
											],
											"variable": [
												{
													"key": "key",
													"value": "myfile",
													"description": "(Required) The key of the object to fetch"
												}
											]
										},
										"description": "Returns an object's metadata or full object data."
									},
									"response": [
										{
											"name": "Successfully retrieved object",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&onlymetadata=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) "
														},
														{
															"key": "onlymetadata",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"metadata\": {\n    \"voluptate5\": \"<string>\"\n  },\n  \"bucket\": \"bo28zx163rtpsb4psbs4oreor0j2n-q\",\n  \"etag\": \"\\\"\\\"\",\n  \"health\": \"<float>\",\n  \"modTime\": \"<dateTime>\",\n  \"key\": \"<string>\",\n  \"size\": \"<long>\",\n  \"mimeType\": \"<string>\",\n  \"encryptionKey\": \"key:3B2ddE654c1E86b0EAa94a7Fbe9f782CBce1dea1a4334818feb25f10eCC2818E\",\n  \"slabs\": [\n    {\n      \"slab\": {\n        \"health\": \"<float>\",\n        \"encryptionKey\": \"skey:8eeBc231856CCc7552aE629A7Bd7a395A3e15d3Fb4A1C3B95805FcC4dd16e28d\",\n        \"minShards\": \"<integer>\"\n      },\n      \"offset\": \"<integer>\",\n      \"limit\": \"<integer>\"\n    },\n    {\n      \"slab\": {\n        \"health\": \"<float>\",\n        \"encryptionKey\": \"key:2CB758F0ecEEda5e8D82A83F1fd0e0cfCDABbCFe1ECEd096a5c6F6b87F1ECC46\",\n        \"minShards\": \"<integer>\"\n      },\n      \"offset\": \"<integer>\",\n      \"limit\": \"<integer>\"\n    }\n  ]\n}"
										},
										{
											"name": "Object not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&onlymetadata=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) "
														},
														{
															"key": "onlymetadata",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/object/:key?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l&onlymetadata=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "(Required) "
														},
														{
															"key": "onlymetadata",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Store object",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bucket\": \"mybucket\",\n  \"eTag\": \"<string>\",\n  \"mimeType\": \"<string>\",\n  \"metadata\": {\n    \"Excepteur8c\": \"<string>\",\n    \"et_c\": \"<string>\"\n  },\n  \"object\": {\n    \"metadata\": {\n      \"ad0fb\": \"<string>\",\n      \"in1e7\": \"<string>\",\n      \"amet_c31\": \"<string>\"\n    },\n    \"bucket\": \"xerjaqvtka-73o7yh5eqczlif\",\n    \"etag\": \"W/\\\"]\\\"\",\n    \"health\": \"<float>\",\n    \"modTime\": \"<dateTime>\",\n    \"key\": \"<string>\",\n    \"size\": \"<long>\",\n    \"mimeType\": \"<string>\",\n    \"encryptionKey\": \"key:244e3Cb61E488acbA5327681E92DC3be8a47e8C1Fe3Ce10f1783CaDE35fFa270\",\n    \"slabs\": [\n      {\n        \"slab\": {\n          \"health\": \"<float>\",\n          \"encryptionKey\": \"skey:45DAE6B8c72694B6ACaEE8BE4E29fEfceCAE33e3f96Cb14F63ccf4dA90F764fd\",\n          \"minShards\": \"<integer>\"\n        },\n        \"offset\": \"<integer>\",\n        \"limit\": \"<integer>\"\n      },\n      {\n        \"slab\": {\n          \"health\": \"<float>\",\n          \"encryptionKey\": \"key:15cfCbF657aaCAA068239fff003f77c59FDedDF8518eb75F295cbeCc4bF6DF7f\",\n          \"minShards\": \"<integer>\"\n        },\n        \"offset\": \"<integer>\",\n        \"limit\": \"<integer>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/object/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"object",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "myobject",
													"description": "(Required) The key of the object"
												}
											]
										},
										"description": "Stores or updates an object."
									},
									"response": [
										{
											"name": "Successfully stored object",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"mybucket\",\n  \"eTag\": \"<string>\",\n  \"mimeType\": \"<string>\",\n  \"metadata\": {\n    \"Excepteur8c\": \"<string>\",\n    \"et_c\": \"<string>\"\n  },\n  \"object\": {\n    \"metadata\": {\n      \"ad0fb\": \"<string>\",\n      \"in1e7\": \"<string>\",\n      \"amet_c31\": \"<string>\"\n    },\n    \"bucket\": \"xerjaqvtka-73o7yh5eqczlif\",\n    \"etag\": \"W/\\\"]\\\"\",\n    \"health\": \"<float>\",\n    \"modTime\": \"<dateTime>\",\n    \"key\": \"<string>\",\n    \"size\": \"<long>\",\n    \"mimeType\": \"<string>\",\n    \"encryptionKey\": \"key:244e3Cb61E488acbA5327681E92DC3be8a47e8C1Fe3Ce10f1783CaDE35fFa270\",\n    \"slabs\": [\n      {\n        \"slab\": {\n          \"health\": \"<float>\",\n          \"encryptionKey\": \"skey:45DAE6B8c72694B6ACaEE8BE4E29fEfceCAE33e3f96Cb14F63ccf4dA90F764fd\",\n          \"minShards\": \"<integer>\"\n        },\n        \"offset\": \"<integer>\",\n        \"limit\": \"<integer>\"\n      },\n      {\n        \"slab\": {\n          \"health\": \"<float>\",\n          \"encryptionKey\": \"key:15cfCbF657aaCAA068239fff003f77c59FDedDF8518eb75F295cbeCc4bF6DF7f\",\n          \"minShards\": \"<integer>\"\n        },\n        \"offset\": \"<integer>\",\n        \"limit\": \"<integer>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/object/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"object",
														":key"
													],
													"variable": [
														{
															"key": "key",
															"value": "myobject"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"mybucket\",\n  \"eTag\": \"<string>\",\n  \"mimeType\": \"<string>\",\n  \"metadata\": {\n    \"Excepteur8c\": \"<string>\",\n    \"et_c\": \"<string>\"\n  },\n  \"object\": {\n    \"metadata\": {\n      \"ad0fb\": \"<string>\",\n      \"in1e7\": \"<string>\",\n      \"amet_c31\": \"<string>\"\n    },\n    \"bucket\": \"xerjaqvtka-73o7yh5eqczlif\",\n    \"etag\": \"W/\\\"]\\\"\",\n    \"health\": \"<float>\",\n    \"modTime\": \"<dateTime>\",\n    \"key\": \"<string>\",\n    \"size\": \"<long>\",\n    \"mimeType\": \"<string>\",\n    \"encryptionKey\": \"key:244e3Cb61E488acbA5327681E92DC3be8a47e8C1Fe3Ce10f1783CaDE35fFa270\",\n    \"slabs\": [\n      {\n        \"slab\": {\n          \"health\": \"<float>\",\n          \"encryptionKey\": \"skey:45DAE6B8c72694B6ACaEE8BE4E29fEfceCAE33e3f96Cb14F63ccf4dA90F764fd\",\n          \"minShards\": \"<integer>\"\n        },\n        \"offset\": \"<integer>\",\n        \"limit\": \"<integer>\"\n      },\n      {\n        \"slab\": {\n          \"health\": \"<float>\",\n          \"encryptionKey\": \"key:15cfCbF657aaCAA068239fff003f77c59FDedDF8518eb75F295cbeCc4bF6DF7f\",\n          \"minShards\": \"<integer>\"\n        },\n        \"offset\": \"<integer>\",\n        \"limit\": \"<integer>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/object/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"object",
														":key"
													],
													"variable": [
														{
															"key": "key",
															"value": "myobject"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bucket\": \"mybucket\",\n  \"eTag\": \"<string>\",\n  \"mimeType\": \"<string>\",\n  \"metadata\": {\n    \"Excepteur8c\": \"<string>\",\n    \"et_c\": \"<string>\"\n  },\n  \"object\": {\n    \"metadata\": {\n      \"ad0fb\": \"<string>\",\n      \"in1e7\": \"<string>\",\n      \"amet_c31\": \"<string>\"\n    },\n    \"bucket\": \"xerjaqvtka-73o7yh5eqczlif\",\n    \"etag\": \"W/\\\"]\\\"\",\n    \"health\": \"<float>\",\n    \"modTime\": \"<dateTime>\",\n    \"key\": \"<string>\",\n    \"size\": \"<long>\",\n    \"mimeType\": \"<string>\",\n    \"encryptionKey\": \"key:244e3Cb61E488acbA5327681E92DC3be8a47e8C1Fe3Ce10f1783CaDE35fFa270\",\n    \"slabs\": [\n      {\n        \"slab\": {\n          \"health\": \"<float>\",\n          \"encryptionKey\": \"skey:45DAE6B8c72694B6ACaEE8BE4E29fEfceCAE33e3f96Cb14F63ccf4dA90F764fd\",\n          \"minShards\": \"<integer>\"\n        },\n        \"offset\": \"<integer>\",\n        \"limit\": \"<integer>\"\n      },\n      {\n        \"slab\": {\n          \"health\": \"<float>\",\n          \"encryptionKey\": \"key:15cfCbF657aaCAA068239fff003f77c59FDedDF8518eb75F295cbeCc4bF6DF7f\",\n          \"minShards\": \"<integer>\"\n        },\n        \"offset\": \"<integer>\",\n        \"limit\": \"<integer>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/object/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"object",
														":key"
													],
													"variable": [
														{
															"key": "key",
															"value": "myobject"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete object",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bus/object/:key?bucket=mybucket",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"object",
												":key"
											],
											"query": [
												{
													"key": "bucket",
													"value": "mybucket",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "key",
													"value": "myobject",
													"description": "(Required) The key of the object to delete"
												}
											]
										},
										"description": "Deletes an object from the bucket."
									},
									"response": [
										{
											"name": "Successfully deleted object",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/object/:key?bucket=mybucket",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "mybucket",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "key",
															"value": "myobject"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Object not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/object/:key?bucket=mybucket",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "mybucket",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "key",
															"value": "myobject"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/object/:key?bucket=mybucket",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"object",
														":key"
													],
													"query": [
														{
															"key": "bucket",
															"value": "mybucket",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "key",
															"value": "myobject"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "params",
					"item": [
						{
							"name": "gouging",
							"item": [
								{
									"name": "Get gouging parameters",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/params/gouging",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"params",
												"gouging"
											]
										},
										"description": "Returns the current gouging parameters including consensus state, gouging settings, and redundancy settings."
									},
									"response": [
										{
											"name": "Successfully retrieved gouging parameters",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/params/gouging",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"params",
														"gouging"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"consensusState\": {\n    \"blockHeight\": \"<integer>\",\n    \"lastBlockTime\": \"<dateTime>\",\n    \"synced\": \"<boolean>\"\n  },\n  \"gougingSettings\": {\n    \"maxRPCPrice\": \"535\",\n    \"maxContractPrice\": \"9479\",\n    \"maxDownloadPrice\": \"5977360\",\n    \"maxUploadPrice\": \"99973697\",\n    \"maxStoragePrice\": \"071\",\n    \"hostBlockHeightLeeway\": \"<integer>\",\n    \"minPriceTableValidity\": \"<integer>\",\n    \"minAccountExpiry\": \"<integer>\",\n    \"minMaxEphemeralAccountBalance\": \"09279101948\"\n  },\n  \"redundancySettings\": {\n    \"minShards\": 10,\n    \"totalShards\": 30\n  }\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/params/gouging",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"params",
														"gouging"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "upload",
							"item": [
								{
									"name": "Get upload parameters",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/params/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"params",
												"upload"
											]
										},
										"description": "Returns parameters needed for uploads including consensus height, gouging parameters and upload packing status."
									},
									"response": [
										{
											"name": "Successfully retrieved upload parameters",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/params/upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"params",
														"upload"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"currentHeight\": \"<integer>\",\n  \"uploadPacking\": \"<boolean>\",\n  \"consensusState\": {\n    \"blockHeight\": \"<integer>\",\n    \"lastBlockTime\": \"<dateTime>\",\n    \"synced\": \"<boolean>\"\n  },\n  \"gougingSettings\": {\n    \"maxRPCPrice\": \"813570\",\n    \"maxContractPrice\": \"9243515\",\n    \"maxDownloadPrice\": \"50682971390\",\n    \"maxUploadPrice\": \"5166134267\",\n    \"maxStoragePrice\": \"841\",\n    \"hostBlockHeightLeeway\": \"<integer>\",\n    \"minPriceTableValidity\": \"<integer>\",\n    \"minAccountExpiry\": \"<integer>\",\n    \"minMaxEphemeralAccountBalance\": \"66818167114\"\n  },\n  \"redundancySettings\": {\n    \"minShards\": 10,\n    \"totalShards\": 30\n  }\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/params/upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"params",
														"upload"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "sectors",
					"item": [
						{
							"name": "{hostkey}",
							"item": [
								{
									"name": "{root}",
									"item": [
										{
											"name": "Delete host sector",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/sectors/:hostkey/:root",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"sectors",
														":hostkey",
														":root"
													],
													"variable": [
														{
															"key": "hostkey",
															"value": "ed25519:fdfa51897BdD00dFF8D0ae2a2daECf3bd87191D7fa6cFD898d25Ea2D0DB9badA",
															"description": "(Required) The host's public key"
														},
														{
															"key": "root",
															"value": "611E1D92E2707EDeC0F1D9dFB974ADeF156C1DA0d419E7DFa00512Bcd942eEab",
															"description": "(Required) The Merkle root of the sector"
														}
													]
												},
												"description": "Marks a sector as lost for a specific host."
											},
											"response": [
												{
													"name": "Successfully marked sector as lost",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/bus/sectors/:hostkey/:root",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"sectors",
																":hostkey",
																":root"
															],
															"variable": [
																{
																	"key": "hostkey"
																},
																{
																	"key": "root"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/bus/sectors/:hostkey/:root",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"sectors",
																":hostkey",
																":root"
															],
															"variable": [
																{
																	"key": "hostkey"
																},
																{
																	"key": "root"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "settings",
					"item": [
						{
							"name": "gouging",
							"item": [
								{
									"name": "Get gouging settings",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/settings/gouging",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"settings",
												"gouging"
											]
										},
										"description": "Returns the current gouging settings."
									},
									"response": [
										{
											"name": "Successfully retrieved gouging settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/settings/gouging",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"gouging"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"maxRPCPrice\": \"76418336280\",\n  \"maxContractPrice\": \"59133866\",\n  \"maxDownloadPrice\": \"144\",\n  \"maxUploadPrice\": \"116477\",\n  \"maxStoragePrice\": \"84761\",\n  \"hostBlockHeightLeeway\": \"<integer>\",\n  \"minPriceTableValidity\": \"<integer>\",\n  \"minAccountExpiry\": \"<integer>\",\n  \"minMaxEphemeralAccountBalance\": \"123\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/settings/gouging",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"gouging"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update gouging settings",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"maxRPCPrice\": \"76418336280\",\n  \"maxContractPrice\": \"59133866\",\n  \"maxDownloadPrice\": \"144\",\n  \"maxUploadPrice\": \"116477\",\n  \"maxStoragePrice\": \"84761\",\n  \"hostBlockHeightLeeway\": \"<integer>\",\n  \"minPriceTableValidity\": \"<integer>\",\n  \"minAccountExpiry\": \"<integer>\",\n  \"minMaxEphemeralAccountBalance\": \"123\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/settings/gouging",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"settings",
												"gouging"
											]
										},
										"description": "Updates the gouging settings."
									},
									"response": [
										{
											"name": "Successfully updated gouging settings",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"maxRPCPrice\": \"76418336280\",\n  \"maxContractPrice\": \"59133866\",\n  \"maxDownloadPrice\": \"144\",\n  \"maxUploadPrice\": \"116477\",\n  \"maxStoragePrice\": \"84761\",\n  \"hostBlockHeightLeeway\": \"<integer>\",\n  \"minPriceTableValidity\": \"<integer>\",\n  \"minAccountExpiry\": \"<integer>\",\n  \"minMaxEphemeralAccountBalance\": \"123\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/settings/gouging",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"gouging"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"maxRPCPrice\": \"76418336280\",\n  \"maxContractPrice\": \"59133866\",\n  \"maxDownloadPrice\": \"144\",\n  \"maxUploadPrice\": \"116477\",\n  \"maxStoragePrice\": \"84761\",\n  \"hostBlockHeightLeeway\": \"<integer>\",\n  \"minPriceTableValidity\": \"<integer>\",\n  \"minAccountExpiry\": \"<integer>\",\n  \"minMaxEphemeralAccountBalance\": \"123\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/settings/gouging",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"gouging"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"maxRPCPrice\": \"76418336280\",\n  \"maxContractPrice\": \"59133866\",\n  \"maxDownloadPrice\": \"144\",\n  \"maxUploadPrice\": \"116477\",\n  \"maxStoragePrice\": \"84761\",\n  \"hostBlockHeightLeeway\": \"<integer>\",\n  \"minPriceTableValidity\": \"<integer>\",\n  \"minAccountExpiry\": \"<integer>\",\n  \"minMaxEphemeralAccountBalance\": \"123\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/settings/gouging",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"gouging"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "pinned",
							"item": [
								{
									"name": "Get pinned settings",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/settings/pinned",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"settings",
												"pinned"
											]
										},
										"description": "Returns the current pinned settings."
									},
									"response": [
										{
											"name": "Successfully retrieved pinned settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/settings/pinned",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"pinned"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"currency\": \"9038922599\",\n  \"threshold\": \"<number>\",\n  \"gougingSettingsPins\": {\n    \"maxDownload\": {\n      \"pinned\": \"<boolean>\",\n      \"value\": \"<number>\"\n    },\n    \"maxStorage\": {\n      \"pinned\": \"<boolean>\",\n      \"value\": \"<number>\"\n    },\n    \"maxUpload\": {\n      \"pinned\": \"<boolean>\",\n      \"value\": \"<number>\"\n    }\n  }\n}"
										}
									]
								},
								{
									"name": "Update pinned settings",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currency\": \"9038922599\",\n  \"threshold\": \"<number>\",\n  \"gougingSettingsPins\": {\n    \"maxDownload\": {\n      \"pinned\": \"<boolean>\",\n      \"value\": \"<number>\"\n    },\n    \"maxStorage\": {\n      \"pinned\": \"<boolean>\",\n      \"value\": \"<number>\"\n    },\n    \"maxUpload\": {\n      \"pinned\": \"<boolean>\",\n      \"value\": \"<number>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/settings/pinned",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"settings",
												"pinned"
											]
										},
										"description": "Updates the pinned settings."
									},
									"response": [
										{
											"name": "Successfully updated pinned settings",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currency\": \"9038922599\",\n  \"threshold\": \"<number>\",\n  \"gougingSettingsPins\": {\n    \"maxDownload\": {\n      \"pinned\": \"<boolean>\",\n      \"value\": \"<number>\"\n    },\n    \"maxStorage\": {\n      \"pinned\": \"<boolean>\",\n      \"value\": \"<number>\"\n    },\n    \"maxUpload\": {\n      \"pinned\": \"<boolean>\",\n      \"value\": \"<number>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/settings/pinned",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"pinned"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid settings",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currency\": \"9038922599\",\n  \"threshold\": \"<number>\",\n  \"gougingSettingsPins\": {\n    \"maxDownload\": {\n      \"pinned\": \"<boolean>\",\n      \"value\": \"<number>\"\n    },\n    \"maxStorage\": {\n      \"pinned\": \"<boolean>\",\n      \"value\": \"<number>\"\n    },\n    \"maxUpload\": {\n      \"pinned\": \"<boolean>\",\n      \"value\": \"<number>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/settings/pinned",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"pinned"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currency\": \"9038922599\",\n  \"threshold\": \"<number>\",\n  \"gougingSettingsPins\": {\n    \"maxDownload\": {\n      \"pinned\": \"<boolean>\",\n      \"value\": \"<number>\"\n    },\n    \"maxStorage\": {\n      \"pinned\": \"<boolean>\",\n      \"value\": \"<number>\"\n    },\n    \"maxUpload\": {\n      \"pinned\": \"<boolean>\",\n      \"value\": \"<number>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/settings/pinned",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"pinned"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "s3",
							"item": [
								{
									"name": "Get S3 settings",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/settings/s3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"settings",
												"s3"
											]
										},
										"description": "Returns the current S3 settings."
									},
									"response": [
										{
											"name": "Successfully retrieved S3 settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/settings/s3",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"s3"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"accessKeyID\": \"<string>\",\n  \"secretAccessKey\": \"<string>\",\n  \"disableAuth\": \"<boolean>\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/settings/s3",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"s3"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update S3 settings",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accessKeyID\": \"<string>\",\n  \"secretAccessKey\": \"<string>\",\n  \"disableAuth\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/settings/s3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"settings",
												"s3"
											]
										},
										"description": "Updates the S3 settings."
									},
									"response": [
										{
											"name": "Successfully updated S3 settings",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accessKeyID\": \"<string>\",\n  \"secretAccessKey\": \"<string>\",\n  \"disableAuth\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/settings/s3",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"s3"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accessKeyID\": \"<string>\",\n  \"secretAccessKey\": \"<string>\",\n  \"disableAuth\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/settings/s3",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"s3"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accessKeyID\": \"<string>\",\n  \"secretAccessKey\": \"<string>\",\n  \"disableAuth\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/settings/s3",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"s3"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "upload",
							"item": [
								{
									"name": "Get upload settings",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/settings/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"settings",
												"upload"
											]
										},
										"description": "Returns the current upload settings."
									},
									"response": [
										{
											"name": "Successfully retrieved upload settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/settings/upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"upload"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"packing\": {\n    \"enabled\": \"<boolean>\",\n    \"slabBufferMaxSizeSoft\": \"<long>\"\n  },\n  \"redundancy\": {\n    \"minShards\": 10,\n    \"totalShards\": 30\n  }\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/settings/upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"upload"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update upload settings",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"packing\": {\n    \"enabled\": \"<boolean>\",\n    \"slabBufferMaxSizeSoft\": \"<long>\"\n  },\n  \"redundancy\": {\n    \"minShards\": 10,\n    \"totalShards\": 30\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/settings/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"settings",
												"upload"
											]
										},
										"description": "Updates the upload settings."
									},
									"response": [
										{
											"name": "Successfully updated upload settings",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"packing\": {\n    \"enabled\": \"<boolean>\",\n    \"slabBufferMaxSizeSoft\": \"<long>\"\n  },\n  \"redundancy\": {\n    \"minShards\": 10,\n    \"totalShards\": 30\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/settings/upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"upload"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"packing\": {\n    \"enabled\": \"<boolean>\",\n    \"slabBufferMaxSizeSoft\": \"<long>\"\n  },\n  \"redundancy\": {\n    \"minShards\": 10,\n    \"totalShards\": 30\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/settings/upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"upload"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"packing\": {\n    \"enabled\": \"<boolean>\",\n    \"slabBufferMaxSizeSoft\": \"<long>\"\n  },\n  \"redundancy\": {\n    \"minShards\": 10,\n    \"totalShards\": 30\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/settings/upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"settings",
														"upload"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "slabbuffers",
					"item": [
						{
							"name": "Get slab buffers info",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bus/slabbuffers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bus",
										"slabbuffers"
									]
								},
								"description": "Returns information about all slab buffers."
							},
							"response": [
								{
									"name": "Successfully retrieved slab buffers",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/slabbuffers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"slabbuffers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"complete\": \"<boolean>\",\n    \"filename\": \"<string>\",\n    \"size\": \"<long>\",\n    \"maxSize\": \"<long>\",\n    \"locked\": \"<boolean>\"\n  },\n  {\n    \"complete\": \"<boolean>\",\n    \"filename\": \"<string>\",\n    \"size\": \"<long>\",\n    \"maxSize\": \"<long>\",\n    \"locked\": \"<boolean>\"\n  }\n]"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bus/slabbuffers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"slabbuffers"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "slabbuffer",
					"item": [
						{
							"name": "done",
							"item": [
								{
									"name": "Mark packed slabs as uploaded",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"slabs\": [\n    {\n      \"bufferID\": \"<integer>\",\n      \"shards\": [\n        {\n          \"contractID\": \"fcid:F023bDf3F96fE48c56aAcaA73A3f256e6856BB1dba79B3Ff1DF6AcdCCc030A0e\",\n          \"root\": \"c9B1c1dEbdCF8CaCcFD8f1B3bc23BE9dc8eDBe80EFfb0c5fE64A23A883eC47aB\"\n        },\n        {\n          \"contractID\": \"fcid:159d798E7d1DEd1A5963EdD3eF6BA1BDF63C3E08bD2d32C236bbF36642Ee2c68\",\n          \"root\": \"622db5ECAbE9A6ebbE091e19ABdA66fFF2c6740DFdBEeC533Eb6bEB25084BDbe\"\n        }\n      ]\n    },\n    {\n      \"bufferID\": \"<integer>\",\n      \"shards\": [\n        {\n          \"contractID\": \"fcid:aD34BA4d26b1510F5efC4906e1BD99bFB132f05d8917bEB0BBeDca5aceFAcd69\",\n          \"root\": \"e345E08d135cbb11B6d5F78A0f5fF93B7B3BbfE1ECfdfDDCBa0A13cB277E9eCd\"\n        },\n        {\n          \"contractID\": \"fcid:bCAf0Bb5eEa68cccC9a5c7d7B89ACBd1B2aecdfcE9Dd33dc67baa384D587eDc3\",\n          \"root\": \"56BB1A19fbDf26adE7CFfEbDdae3bdC7f4cD90CFf82Eb4ABE6bDCbEC06Eb32cf\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/slabbuffer/done",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"slabbuffer",
												"done"
											]
										},
										"description": "Marks the specified packed slabs as successfully uploaded."
									},
									"response": [
										{
											"name": "Successfully marked slabs as uploaded",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"slabs\": [\n    {\n      \"bufferID\": \"<integer>\",\n      \"shards\": [\n        {\n          \"contractID\": \"fcid:F023bDf3F96fE48c56aAcaA73A3f256e6856BB1dba79B3Ff1DF6AcdCCc030A0e\",\n          \"root\": \"c9B1c1dEbdCF8CaCcFD8f1B3bc23BE9dc8eDBe80EFfb0c5fE64A23A883eC47aB\"\n        },\n        {\n          \"contractID\": \"fcid:159d798E7d1DEd1A5963EdD3eF6BA1BDF63C3E08bD2d32C236bbF36642Ee2c68\",\n          \"root\": \"622db5ECAbE9A6ebbE091e19ABdA66fFF2c6740DFdBEeC533Eb6bEB25084BDbe\"\n        }\n      ]\n    },\n    {\n      \"bufferID\": \"<integer>\",\n      \"shards\": [\n        {\n          \"contractID\": \"fcid:aD34BA4d26b1510F5efC4906e1BD99bFB132f05d8917bEB0BBeDca5aceFAcd69\",\n          \"root\": \"e345E08d135cbb11B6d5F78A0f5fF93B7B3BbfE1ECfdfDDCBa0A13cB277E9eCd\"\n        },\n        {\n          \"contractID\": \"fcid:bCAf0Bb5eEa68cccC9a5c7d7B89ACBd1B2aecdfcE9Dd33dc67baa384D587eDc3\",\n          \"root\": \"56BB1A19fbDf26adE7CFfEbDdae3bdC7f4cD90CFf82Eb4ABE6bDCbEC06Eb32cf\"\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/slabbuffer/done",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slabbuffer",
														"done"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"slabs\": [\n    {\n      \"bufferID\": \"<integer>\",\n      \"shards\": [\n        {\n          \"contractID\": \"fcid:F023bDf3F96fE48c56aAcaA73A3f256e6856BB1dba79B3Ff1DF6AcdCCc030A0e\",\n          \"root\": \"c9B1c1dEbdCF8CaCcFD8f1B3bc23BE9dc8eDBe80EFfb0c5fE64A23A883eC47aB\"\n        },\n        {\n          \"contractID\": \"fcid:159d798E7d1DEd1A5963EdD3eF6BA1BDF63C3E08bD2d32C236bbF36642Ee2c68\",\n          \"root\": \"622db5ECAbE9A6ebbE091e19ABdA66fFF2c6740DFdBEeC533Eb6bEB25084BDbe\"\n        }\n      ]\n    },\n    {\n      \"bufferID\": \"<integer>\",\n      \"shards\": [\n        {\n          \"contractID\": \"fcid:aD34BA4d26b1510F5efC4906e1BD99bFB132f05d8917bEB0BBeDca5aceFAcd69\",\n          \"root\": \"e345E08d135cbb11B6d5F78A0f5fF93B7B3BbfE1ECfdfDDCBa0A13cB277E9eCd\"\n        },\n        {\n          \"contractID\": \"fcid:bCAf0Bb5eEa68cccC9a5c7d7B89ACBd1B2aecdfcE9Dd33dc67baa384D587eDc3\",\n          \"root\": \"56BB1A19fbDf26adE7CFfEbDdae3bdC7f4cD90CFf82Eb4ABE6bDCbEC06Eb32cf\"\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/slabbuffer/done",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slabbuffer",
														"done"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "fetch",
							"item": [
								{
									"name": "Fetch packed slabs for upload",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"lockingDuration\": \"<long>\",\n  \"minShards\": \"<integer>\",\n  \"totalShards\": \"<integer>\",\n  \"limit\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/slabbuffer/fetch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"slabbuffer",
												"fetch"
											]
										},
										"description": "Returns packed slabs that are ready to be uploaded."
									},
									"response": [
										{
											"name": "Successfully retrieved packed slabs",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"lockingDuration\": \"<long>\",\n  \"minShards\": \"<integer>\",\n  \"totalShards\": \"<integer>\",\n  \"limit\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/slabbuffer/fetch",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slabbuffer",
														"fetch"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"bufferID\": \"<integer>\",\n    \"data\": \"<binary>\",\n    \"encryptionKey\": \"skey:4f5C4d85B107B4BBbF2A132CA64AF41BaA454f8cFb5F3a99Eab04e3C4ff2761c\"\n  },\n  {\n    \"bufferID\": \"<integer>\",\n    \"data\": \"<binary>\",\n    \"encryptionKey\": \"key:63FbedF2F94FAc11de6Fcf4E35cA8368AD69c89cbdaF1Cb6C3Bbe0eaacb1EC5C\"\n  }\n]"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"lockingDuration\": \"<long>\",\n  \"minShards\": \"<integer>\",\n  \"totalShards\": \"<integer>\",\n  \"limit\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/slabbuffer/fetch",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slabbuffer",
														"fetch"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "slabs",
					"item": [
						{
							"name": "migration",
							"item": [
								{
									"name": "Get slabs for migration",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"healthCutoff\": \"<number>\",\n  \"limit\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/slabs/migration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"slabs",
												"migration"
											]
										},
										"description": "Returns slabs that need to be migrated based on health cutoff."
									},
									"response": [
										{
											"name": "Successfully retrieved slabs for migration",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"healthCutoff\": \"<number>\",\n  \"limit\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/slabs/migration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slabs",
														"migration"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"slabs\": [\n    {\n      \"encryptionKey\": \"key:3D98ECfFad0b3fac13C602eb580Ddb8CeA5146ADaF2b2eF923B06c41aAf0c3Ec\",\n      \"health\": \"<number>\"\n    },\n    {\n      \"encryptionKey\": \"key:77F9f8be1dB9dF08Eb8c47eFabA9b0afbB45AD5d48d9fD258d4E5DEfa013A6af\",\n      \"health\": \"<number>\"\n    }\n  ]\n}"
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"healthCutoff\": \"<number>\",\n  \"limit\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/slabs/migration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slabs",
														"migration"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"healthCutoff\": \"<number>\",\n  \"limit\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/slabs/migration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slabs",
														"migration"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "partial",
							"item": [
								{
									"name": "{key}",
									"item": [
										{
											"name": "Get partial slab",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/octet-stream"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/slabs/partial/:key?offset=<integer>&length=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slabs",
														"partial",
														":key"
													],
													"query": [
														{
															"key": "offset",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "length",
															"value": "<integer>",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "key",
															"value": "skey:0DCb66aBFA094CAaEcc4cA7e45AC14b3eaAFe22801EABccb7fbFE34D4361994e",
															"description": "(Required) "
														}
													]
												},
												"description": "Retrieves a portion of a slab's data."
											},
											"response": [
												{
													"name": "Successfully retrieved partial slab data",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/octet-stream"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/bus/slabs/partial/:key?offset=<integer>&length=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"slabs",
																"partial",
																":key"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "<integer>",
																	"description": "(Required) "
																},
																{
																	"key": "length",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/octet-stream"
														}
													],
													"cookie": [],
													"body": "<binary>"
												},
												{
													"name": "Malformed request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/bus/slabs/partial/:key?offset=<integer>&length=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"slabs",
																"partial",
																":key"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "<integer>",
																	"description": "(Required) "
																},
																{
																	"key": "length",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": "<string>"
												},
												{
													"name": "Slab not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/bus/slabs/partial/:key?offset=<integer>&length=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"slabs",
																"partial",
																":key"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "<integer>",
																	"description": "(Required) "
																},
																{
																	"key": "length",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/bus/slabs/partial/:key?offset=<integer>&length=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"slabs",
																"partial",
																":key"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "<integer>",
																	"description": "(Required) "
																},
																{
																	"key": "length",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Add partial slab",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/octet-stream"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/slabs/partial?minshards=<integer>&totalshards=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"slabs",
												"partial"
											],
											"query": [
												{
													"key": "minshards",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "totalshards",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Adds data to a partial slab."
									},
									"response": [
										{
											"name": "Successfully added partial slab",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "file",
													"file": {}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/slabs/partial?minshards=<integer>&totalshards=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slabs",
														"partial"
													],
													"query": [
														{
															"key": "minshards",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "totalshards",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"slabs\": [\n    {\n      \"slab\": {\n        \"health\": \"<float>\",\n        \"encryptionKey\": \"skey:DE5A2F3f32bfa0f9f07DA133f21Df5CE8b7A4614B871f8F918489aae6Db208e1\",\n        \"minShards\": \"<integer>\"\n      },\n      \"offset\": \"<integer>\",\n      \"limit\": \"<integer>\"\n    },\n    {\n      \"slab\": {\n        \"health\": \"<float>\",\n        \"encryptionKey\": \"skey:e2fDA8BaBaba97A9C6fBeafCE7FF72A8701BB17ECbCaC81eb2b992D18FC4D83c\",\n        \"minShards\": \"<integer>\"\n      },\n      \"offset\": \"<integer>\",\n      \"limit\": \"<integer>\"\n    }\n  ],\n  \"slabBufferMaxSizeSoftReached\": \"<boolean>\"\n}"
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "file",
													"file": {}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/slabs/partial?minshards=<integer>&totalshards=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slabs",
														"partial"
													],
													"query": [
														{
															"key": "minshards",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "totalshards",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													}
												],
												"body": {
													"mode": "file",
													"file": {}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/slabs/partial?minshards=<integer>&totalshards=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slabs",
														"partial"
													],
													"query": [
														{
															"key": "minshards",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "totalshards",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "refreshhealth",
							"item": [
								{
									"name": "Refresh slab health",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bus/slabs/refreshhealth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"slabs",
												"refreshhealth"
											]
										},
										"description": "Recalculates health for all slabs."
									},
									"response": [
										{
											"name": "Successfully refreshed slab health",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/slabs/refreshhealth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slabs",
														"refreshhealth"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/slabs/refreshhealth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slabs",
														"refreshhealth"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "slab",
					"item": [
						{
							"name": "{key}",
							"item": [
								{
									"name": "Get slab",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/slab/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"slab",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "skey:0DCb66aBFA094CAaEcc4cA7e45AC14b3eaAFe22801EABccb7fbFE34D4361994e",
													"description": "(Required) "
												}
											]
										},
										"description": "Returns information about a specific slab."
									},
									"response": [
										{
											"name": "Successfully retrieved slab",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/slab/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slab",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"health\": \"<float>\",\n  \"encryptionKey\": \"key:EbdbbAD210B8AEf1bE2d3B0b725deb4f5cDc90dd7f68F43BFE0ACdCd617DAF50\",\n  \"minShards\": \"<integer>\"\n}"
										},
										{
											"name": "Slab not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/slab/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slab",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/slab/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slab",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update slab",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"contractID\": \"fcid:1A2852e7C3D56fb4965727a21cfceB0C00065ddE2A4fF3B4A4d1efeCE0eFDBd3\",\n    \"root\": \"aE4CB41Cd8fBAFBCd8D46fcD2d02fb75834BD5b0bA3b90FfE6bBbabeA6deB5aB\"\n  },\n  {\n    \"contractID\": \"fcid:Df5CBB7C016c80c63efe1BB23BC2F72CdadDa4EadB8EAe9fE6Db31bfadbA71e0\",\n    \"root\": \"0b9fcFebf5C00CecdE4BeF5f5D5FcabEEE9bCeDeE1C3Ced7EA9EC651F4e7eeAB\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/slab/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"slab",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "skey:0DCb66aBFA094CAaEcc4cA7e45AC14b3eaAFe22801EABccb7fbFE34D4361994e",
													"description": "(Required) "
												}
											]
										},
										"description": "Updates the sectors for a slab."
									},
									"response": [
										{
											"name": "Successfully updated slab",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"contractID\": \"fcid:1A2852e7C3D56fb4965727a21cfceB0C00065ddE2A4fF3B4A4d1efeCE0eFDBd3\",\n    \"root\": \"aE4CB41Cd8fBAFBCd8D46fcD2d02fb75834BD5b0bA3b90FfE6bBbabeA6deB5aB\"\n  },\n  {\n    \"contractID\": \"fcid:Df5CBB7C016c80c63efe1BB23BC2F72CdadDa4EadB8EAe9fE6Db31bfadbA71e0\",\n    \"root\": \"0b9fcFebf5C00CecdE4BeF5f5D5FcabEEE9bCeDeE1C3Ced7EA9EC651F4e7eeAB\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/slab/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slab",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"contractID\": \"fcid:1A2852e7C3D56fb4965727a21cfceB0C00065ddE2A4fF3B4A4d1efeCE0eFDBd3\",\n    \"root\": \"aE4CB41Cd8fBAFBCd8D46fcD2d02fb75834BD5b0bA3b90FfE6bBbabeA6deB5aB\"\n  },\n  {\n    \"contractID\": \"fcid:Df5CBB7C016c80c63efe1BB23BC2F72CdadDa4EadB8EAe9fE6Db31bfadbA71e0\",\n    \"root\": \"0b9fcFebf5C00CecdE4BeF5f5D5FcabEEE9bCeDeE1C3Ced7EA9EC651F4e7eeAB\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/slab/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slab",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Slab not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"contractID\": \"fcid:1A2852e7C3D56fb4965727a21cfceB0C00065ddE2A4fF3B4A4d1efeCE0eFDBd3\",\n    \"root\": \"aE4CB41Cd8fBAFBCd8D46fcD2d02fb75834BD5b0bA3b90FfE6bBbabeA6deB5aB\"\n  },\n  {\n    \"contractID\": \"fcid:Df5CBB7C016c80c63efe1BB23BC2F72CdadDa4EadB8EAe9fE6Db31bfadbA71e0\",\n    \"root\": \"0b9fcFebf5C00CecdE4BeF5f5D5FcabEEE9bCeDeE1C3Ced7EA9EC651F4e7eeAB\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/slab/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slab",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"contractID\": \"fcid:1A2852e7C3D56fb4965727a21cfceB0C00065ddE2A4fF3B4A4d1efeCE0eFDBd3\",\n    \"root\": \"aE4CB41Cd8fBAFBCd8D46fcD2d02fb75834BD5b0bA3b90FfE6bBbabeA6deB5aB\"\n  },\n  {\n    \"contractID\": \"fcid:Df5CBB7C016c80c63efe1BB23BC2F72CdadDa4EadB8EAe9fE6Db31bfadbA71e0\",\n    \"root\": \"0b9fcFebf5C00CecdE4BeF5f5D5FcabEEE9bCeDeE1C3Ced7EA9EC651F4e7eeAB\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/slab/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"slab",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "syncer",
					"item": [
						{
							"name": "address",
							"item": [
								{
									"name": "Get the syncer's address",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/syncer/address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"syncer",
												"address"
											]
										},
										"description": "Returns the address of the syncer."
									},
									"response": [
										{
											"name": "Successfully retrieved syncer address",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/syncer/address",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"syncer",
														"address"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<string>"
										}
									]
								}
							]
						},
						{
							"name": "connect",
							"item": [
								{
									"name": "Connect to a syncer",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/syncer/connect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"syncer",
												"connect"
											]
										},
										"description": "Connects to the specified syncer."
									},
									"response": [
										{
											"name": "Successfully connected to syncer",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/syncer/connect",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"syncer",
														"connect"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/syncer/connect",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"syncer",
														"connect"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "peers",
							"item": [
								{
									"name": "Get syncer peers",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/syncer/peers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"syncer",
												"peers"
											]
										},
										"description": "Returns the syncer's peers."
									},
									"response": [
										{
											"name": "Successfully retrieved syncer peers",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/syncer/peers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"syncer",
														"peers"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "system",
					"item": [
						{
							"name": "sqlite3",
							"item": [
								{
									"name": "backup",
									"item": [
										{
											"name": "Backup SQLite database",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"database\": \"main\",\n  \"path\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/system/sqlite3/backup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"system",
														"sqlite3",
														"backup"
													]
												},
												"description": "Creates a backup of the specified SQLite database."
											},
											"response": [
												{
													"name": "Successfully created backup",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"database\": \"main\",\n  \"path\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/system/sqlite3/backup",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"system",
																"sqlite3",
																"backup"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Invalid database specified",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"database\": \"main\",\n  \"path\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/system/sqlite3/backup",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"system",
																"sqlite3",
																"backup"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Backup not supported",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"database\": \"main\",\n  \"path\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/system/sqlite3/backup",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"system",
																"sqlite3",
																"backup"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"database\": \"main\",\n  \"path\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/system/sqlite3/backup",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"system",
																"sqlite3",
																"backup"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "state",
					"item": [
						{
							"name": "Get bus state",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bus/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bus",
										"state"
									]
								},
								"description": "Returns the current state of the bus including version, build info, and explorer status."
							},
							"response": [
								{
									"name": "Successfully retrieved bus state",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"state"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"startTime\": \"<dateTime>\",\n  \"version\": \"<string>\",\n  \"commit\": \"<string>\",\n  \"os\": \"<string>\",\n  \"buildTime\": \"<dateTime>\",\n  \"explorer\": {\n    \"enabled\": \"<boolean>\",\n    \"url\": \"<string>\"\n  },\n  \"network\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "stats",
					"item": [
						{
							"name": "objects",
							"item": [
								{
									"name": "Get object statistics",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/stats/objects?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"stats",
												"objects"
											],
											"query": [
												{
													"key": "bucket",
													"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"description": "Optional bucket to get stats for"
												}
											]
										},
										"description": "Returns statistics about objects in a bucket."
									},
									"response": [
										{
											"name": "Successfully retrieved object statistics",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/stats/objects?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"stats",
														"objects"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "Optional bucket to get stats for"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"numObjects\": \"<integer>\",\n  \"numUnfinishedObjects\": \"<integer>\",\n  \"minHealth\": \"<number>\",\n  \"totalObjectsSize\": \"<integer>\",\n  \"totalUnfinishedObjectsSize\": \"<integer>\",\n  \"totalSectorsSize\": \"<integer>\",\n  \"totalUploadedSize\": \"<integer>\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/stats/objects?bucket=tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"stats",
														"objects"
													],
													"query": [
														{
															"key": "bucket",
															"value": "tiz0lyl7ouoz1g21djms8xi5m2p816zagidno8pbanb3l",
															"description": "Optional bucket to get stats for"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "txpool",
					"item": [
						{
							"name": "recommendedfee",
							"item": [
								{
									"name": "Get recommended fee",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/txpool/recommendedfee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"txpool",
												"recommendedfee"
											]
										},
										"description": "Returns the recommended fee for a transaction."
									},
									"response": [
										{
											"name": "Successfully retrieved recommended fee",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/txpool/recommendedfee",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"txpool",
														"recommendedfee"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "0"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/txpool/recommendedfee",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"txpool",
														"recommendedfee"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "transactions",
							"item": [
								{
									"name": "Get all transactions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/txpool/transactions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"txpool",
												"transactions"
											]
										},
										"description": "Returns all transactions in the transaction pool."
									},
									"response": [
										{
											"name": "Successfully retrieved transactions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/txpool/transactions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"txpool",
														"transactions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"siacoinInputs\": [\n      {\n        \"parentID\": \"eAF3e25ECbA52c12c16EdCee0eAccab759a6Da4FEb149BC22D1fdD090edcfFCf\",\n        \"unlockConditions\": {\n          \"timelock\": \"<integer>\",\n          \"publicKeys\": [\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"C100069F41abd04bd22CE7c1C27BeB9ea9fb3948EAC31170CF92f2BFA2Ad1De7\"\n            },\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"b758Abdf59A74B9c0B6B2B4bDfdADFdcce9FD73cEE7FC77Aff1c5Ede561AeD2A\"\n            }\n          ],\n          \"signaturesRequired\": \"<integer>\"\n        }\n      },\n      {\n        \"parentID\": \"5fDEcA5F7A5B60B26A358dA0C68bcA482Cd74cf0b0f66426d2EE7ca6d1FeCdc4\",\n        \"unlockConditions\": {\n          \"timelock\": \"<integer>\",\n          \"publicKeys\": [\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"dECaBC978bEF9D7fb882ebC8bAA1caC1d5b7c57ABFC31b3A41EbB43adCA6fD9F\"\n            },\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"dfEce751ce0Bae8Fe1F5A4955a1Ae4b3Cc8DD25dFdf6710A9ccaAEC0D0896b05\"\n            }\n          ],\n          \"signaturesRequired\": \"<integer>\"\n        }\n      }\n    ],\n    \"siacoinOutputs\": [\n      {\n        \"value\": \"9\",\n        \"address\": \"aa8bd80b6A243C0cBf22dBE2FeBbc3B492e2Cf22eDe872BED3EC298e6F3FF4aa\"\n      },\n      {\n        \"value\": \"551133701\",\n        \"address\": \"DbF01BDe23A89Fb2b6683c8ACEA4C54D61daa6D574Fc93C1CA0ecc5dC6D16e68\"\n      }\n    ],\n    \"fileContracts\": [\n      {\n        \"filesize\": \"<integer>\",\n        \"fileMerkleRoot\": \"d1D1EaDCeDbef1cCd38B9d51c8AA1a76ca05beC822Dd38CeB85385F38dCf81Dd\",\n        \"windowStart\": \"<integer>\",\n        \"windowEnd\": \"<integer>\",\n        \"payout\": \"1\",\n        \"validProofOutputs\": [\n          {\n            \"value\": \"011\",\n            \"address\": \"a77FD91EC33AB8a446b1584eBffAe462409D1dAF543Ad194327100282Ca5AFBE\"\n          },\n          {\n            \"value\": \"7210\",\n            \"address\": \"FE9A90b9aA88B9430bFC128CE1d15100Ee2bBEd5B940ffaC65CFbDDdbF100BBA\"\n          }\n        ],\n        \"missedProofOutputs\": [\n          {\n            \"value\": \"7714696746\",\n            \"address\": \"62d6B2B4EE68Ce8f3994f43e61Cde47d0e0C5BdFb3e8C6DA938182d6b7b03Fee\"\n          },\n          {\n            \"value\": \"729920\",\n            \"address\": \"52a6DC01c6defC738ab017ec90855aF92AEdf9BC0d4521A189fdF89b8f407d7C\"\n          }\n        ],\n        \"unlockHash\": \"cDcDeaA3F6e7E1f13170C4f873bE0b708fA1193Be757B83aEb91E1ac515F48f0\",\n        \"revisionNumber\": \"<integer>\"\n      },\n      {\n        \"filesize\": \"<integer>\",\n        \"fileMerkleRoot\": \"Ac78C78FBfFbe1c73e0F3db9bD62B7D9bf1A9EaE99CB3a1303ED4fC2e631CEA8\",\n        \"windowStart\": \"<integer>\",\n        \"windowEnd\": \"<integer>\",\n        \"payout\": \"78569614789\",\n        \"validProofOutputs\": [\n          {\n            \"value\": \"1477857\",\n            \"address\": \"E0c1a1AAa5EbeDFefcceccFbdaADeb5cB77A00Ae1eA4aECcEDF51D5D47E2C498\"\n          },\n          {\n            \"value\": \"31890229439\",\n            \"address\": \"B38daDA0dF7ceE9905F51a9Af83D38E17a1c0aFB6d34f7ACfC5ca678bf5ea745\"\n          }\n        ],\n        \"missedProofOutputs\": [\n          {\n            \"value\": \"47395\",\n            \"address\": \"ADCDBfB475e9b1e44Ca649dCAcfeeCd3FFa23Acd99ed95faFbfB6eB7792A2Aac\"\n          },\n          {\n            \"value\": \"817\",\n            \"address\": \"b6b5C894F50eaeFeCe0DcB925bdCD2C1b2fBe3CeFc640D8596a315dDcF0feA5c\"\n          }\n        ],\n        \"unlockHash\": \"b5C5FE2C4052d65AbE9DA2De1fdfCC666e22AF94cE909385Eff6CFD5992F75a0\",\n        \"revisionNumber\": \"<integer>\"\n      }\n    ],\n    \"fileContractRevisions\": [\n      {\n        \"parentID\": \"fcid:bCEC263FDabDb987f724E6b4e3926655B50CD4C7D88095Abd6BaD21e8e0a19a2\",\n        \"unlockConditions\": {\n          \"timelock\": \"<integer>\",\n          \"publicKeys\": [\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"5BCf9CB0b60F54fE6BaAff1e7C4b753E702DFc8FDbfec0B68eC4Ecc57BE81BBF\"\n            },\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"30F69B1Eccb00DaAC99b10D21eACba5fFBadf1bC4D7ABF7DdE364Abec27eEC95\"\n            }\n          ],\n          \"signaturesRequired\": \"<integer>\"\n        },\n        \"filesize\": \"<integer>\",\n        \"fileMerkleRoot\": \"5Adc4a7ce0B4A3984C38A2fF7eF7d1607febBa701aAa17aDD2209eED8DcDCdf6\",\n        \"windowStart\": \"<integer>\",\n        \"windowEnd\": \"<integer>\",\n        \"validProofOutputs\": [\n          {\n            \"value\": \"761750270\",\n            \"address\": \"04e3b67B821Dcab2E7c3AAfFcAcd1F29edf659F0F11fB6d49c7DA4d1D838feFe\"\n          },\n          {\n            \"value\": \"4\",\n            \"address\": \"3E9F128A33e24bd711EaeC6C53A5cC2c8B4D888bE1e1ffc1Ae99dc7C7B2A54db\"\n          }\n        ],\n        \"missedProofOutputs\": [\n          {\n            \"value\": \"17697408\",\n            \"address\": \"7fBFBB5Bcd04f0aC6C70a6C51A4f6BBC0a1f8D97CF7aC4FB777B498306F62711\"\n          },\n          {\n            \"value\": \"76519518104\",\n            \"address\": \"84eC1D198404CdbcA8eAAacFE794162B575ecFd4b68D9Bbf41B4802DCe4CE8EB\"\n          }\n        ],\n        \"unlockHash\": \"Dbe7b8EAA6A7dB5c4FFE34e9A1a7b8460759Aee2BEB49aA9e20F833b2a38E1DC\",\n        \"revisionNumber\": \"<integer>\"\n      },\n      {\n        \"parentID\": \"fcid:feD040a6ddE8BF0CfC78d26376Ee6FBD2C7Df75fabad7FC2E71bc41f4eF71ef9\",\n        \"unlockConditions\": {\n          \"timelock\": \"<integer>\",\n          \"publicKeys\": [\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"f89c7c8a68ACf4b59d0FbEef72bB5402b403a3CC26DAc15E96cf8f01948118E8\"\n            },\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"fE9AE45FCEEc2f3F44ddaB5cE6aA3e758fBD99f5F4695Fcf047D2fd2A7F8bdAF\"\n            }\n          ],\n          \"signaturesRequired\": \"<integer>\"\n        },\n        \"filesize\": \"<integer>\",\n        \"fileMerkleRoot\": \"245bECdcB1eAd0b1b74C0acE4732Bb86DE04B46eD8BF053C7DD17e400dFbfB44\",\n        \"windowStart\": \"<integer>\",\n        \"windowEnd\": \"<integer>\",\n        \"validProofOutputs\": [\n          {\n            \"value\": \"4031\",\n            \"address\": \"c55A1dfFFaDcFc256EBeeAb9Fad78FAf61eFABDb2Da0CD3cAdf3E27AEbdcb2cd\"\n          },\n          {\n            \"value\": \"528\",\n            \"address\": \"2ee75352E171dCfFa4431D52D9bdB1705eDA5F1f59BAF477EDC7CD250f33e16B\"\n          }\n        ],\n        \"missedProofOutputs\": [\n          {\n            \"value\": \"56897843220\",\n            \"address\": \"9b29db23a9Ff31e6EDB90cdEFC157CBbBdD084eB8915ec1c8aFebBe37A26E267\"\n          },\n          {\n            \"value\": \"40277438091\",\n            \"address\": \"0c4bde51b51eaDB3DdB8fd23e7Cb07f2ec2ED4054DAB5Fff129aE3CB5c6b08eE\"\n          }\n        ],\n        \"unlockHash\": \"F4152eB0ebDbc8CebebD5bDCdEBfCdfed30f2f1EEeB65E5C5d59a4C31Bc0E1dC\",\n        \"revisionNumber\": \"<integer>\"\n      }\n    ],\n    \"storageProofs\": [\n      {\n        \"parentID\": \"fcid:F4590A2a7Bd8d91eD869Ef3dFE0b4ef9eC1df286f1bcae046Ad13DE3CCdedE4F\",\n        \"leaf\": \"<string>\",\n        \"proof\": [\n          \"0AB8cae20bBBdf580a7a621AA74DB11bFa6ab2F6b77c9FFfbddd64c05EBc4951\",\n          \"ccc99EaE52e381cbC2e1DF7F42798CF1C79DEe38eFDF9a0EE88a94Df04B2d681\"\n        ]\n      },\n      {\n        \"parentID\": \"fcid:9046eDc3C0Bd1d50bf9cC42Df3bac962A4B4DC7B6C4AA7c91eE3fBcAcF9DE46C\",\n        \"leaf\": \"<string>\",\n        \"proof\": [\n          \"CaBB477b20Cc5727cE460A07ED13c9b6eb16f90FAfaB7cc4F4209fcafb0D6BA4\",\n          \"ddc93E0BeCd8F5eaccEfbB426c0AAFCc46ABe3c3EF1B07Da93d4Fadd0EFcfE06\"\n        ]\n      }\n    ],\n    \"siafundInputs\": [\n      {\n        \"parentID\": \"7cdf30130E25C78B955ad44dA4efbeEEb318084c2CbBF04e13C4dC78f4D625DE\",\n        \"unlockConditions\": {\n          \"timelock\": \"<integer>\",\n          \"publicKeys\": [\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"fc1cEcbBF55e882C4AF5EBff3CBb22edd48b30Ce3CbdAeed49d9fEfe5535F170\"\n            },\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"67fE2dbbd3FF528a68587ABcFbBbDcCB67A18DB9B7ea7DF5DDEeFDf66b427eA5\"\n            }\n          ],\n          \"signaturesRequired\": \"<integer>\"\n        },\n        \"claimAddress\": \"03fF13bAF18871b0a6dcEEfD20A8dC2Ad260D4B56A678F7BeD5cF39e4e6dCe3D\"\n      },\n      {\n        \"parentID\": \"55Bbc1F7fd2859F4db15c4DfB436ed6Abb56BD5b7C9DD9ed4eFBbF442C122C67\",\n        \"unlockConditions\": {\n          \"timelock\": \"<integer>\",\n          \"publicKeys\": [\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"2f41D76c17eAe02B4555133452CfBaDF4E7c2f5d9aa6f3162Dfa8AB33E0B2a6f\"\n            },\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"bA59e9da44D2AfacC95B886c9f2BedB16a5d3cc3dE5AaF5555A9D843D79b96b2\"\n            }\n          ],\n          \"signaturesRequired\": \"<integer>\"\n        },\n        \"claimAddress\": \"af91fa3Ba75b470946d731bAb67A1F0CBCabeBdc90FbaBec58C8c9F7Cda4fA0e\"\n      }\n    ],\n    \"siafundOutputs\": [\n      {\n        \"value\": \"<integer>\",\n        \"address\": \"028EaD934C44dcCd0AF69a6C4Cedb9Aad3C8d7fbffCcB3afE2ad1dDaf6E105c8\"\n      },\n      {\n        \"value\": \"<integer>\",\n        \"address\": \"1D5C5fD91f117167e2aEEFDBc2Afbe5dbDfb34B58ECB71D1E291b4e70aAd108E\"\n      }\n    ],\n    \"minerFees\": [\n      \"69\",\n      \"886960\"\n    ],\n    \"arbitraryData\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"signatures\": [\n      {\n        \"parentID\": \"7c0FccE3273e6Fd80AB08E9b3a6e7FC8a548161deB6C3C254ae9EeDaE4AcE2Cf\",\n        \"publicKeyIndex\": \"<integer>\",\n        \"timelock\": \"<integer>\",\n        \"coveredFields\": {\n          \"wholeTransaction\": \"<boolean>\",\n          \"siacoinInputs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"siacoinOutputs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"fileContracts\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"fileContractRevisions\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"storageProofs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"siafundInputs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"siafundOutputs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"minerFees\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"arbitraryData\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"signatures\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        \"signature\": \"fdFC92521D2A6C997c70Eae5DdD8AcaedfFb6D9cAbDEAFEbB3ceAB9cD4D9f74f\"\n      },\n      {\n        \"parentID\": \"aAFB61118cC8CB00bc0569d7ec2eCBD7617F14eFEcBAba23d93b52a99bFAc04D\",\n        \"publicKeyIndex\": \"<integer>\",\n        \"timelock\": \"<integer>\",\n        \"coveredFields\": {\n          \"wholeTransaction\": \"<boolean>\",\n          \"siacoinInputs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"siacoinOutputs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"fileContracts\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"fileContractRevisions\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"storageProofs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"siafundInputs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"siafundOutputs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"minerFees\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"arbitraryData\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"signatures\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        \"signature\": \"Daf2EfaFB1d5c107968EcACD61deD3bA5eABd5fDDeE79724F4D8EEA7d6FcDb3c\"\n      }\n    ]\n  },\n  {\n    \"siacoinInputs\": [\n      {\n        \"parentID\": \"ce17Df5a9EF8f96e8dfDDdcB1eCfBaa33B8B2A0EEc63E06D8DACf073ac782B3d\",\n        \"unlockConditions\": {\n          \"timelock\": \"<integer>\",\n          \"publicKeys\": [\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"cc1Dbaec43eD27F92beB5CF9080A04fc18B35Cc33B0c0BFeb1CDBcC3bDA60caf\"\n            },\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"7bEaCc2c4424340F01eE5dd5BbedA14F8eBE782b0D3Cb76ac4Fc0F898C0B9Af4\"\n            }\n          ],\n          \"signaturesRequired\": \"<integer>\"\n        }\n      },\n      {\n        \"parentID\": \"C8b5a60fcfC82DFBfEa2A45C21d5aBbcb3Dd1287E212eEe4A1F4f5da52DFC8Fa\",\n        \"unlockConditions\": {\n          \"timelock\": \"<integer>\",\n          \"publicKeys\": [\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"d514eB91EfA36F53FEdb35acede3CCdEA928e038c4fcbcE2e2078E38a04AC943\"\n            },\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"caD6A850Ea79FFD86f7aFad3fbfFDc3869e812957c6F1aA7e0e4A6c9182CeBff\"\n            }\n          ],\n          \"signaturesRequired\": \"<integer>\"\n        }\n      }\n    ],\n    \"siacoinOutputs\": [\n      {\n        \"value\": \"81361\",\n        \"address\": \"5e32D6FDa52E7B9EaedFe15A09C5Ef258e55f82DC77460660B4A0FE9C6A0D1ac\"\n      },\n      {\n        \"value\": \"1\",\n        \"address\": \"2BbA6CeCD2eb5FfBE7DEE8DB7E9dC9AE06eF336EA8C9e279F74eCB19Af639Cb7\"\n      }\n    ],\n    \"fileContracts\": [\n      {\n        \"filesize\": \"<integer>\",\n        \"fileMerkleRoot\": \"6BcBb26d2d525b7062F21ceFddc052f4dBF83E60c17AaA15E9da354823b9aA6a\",\n        \"windowStart\": \"<integer>\",\n        \"windowEnd\": \"<integer>\",\n        \"payout\": \"95844693740\",\n        \"validProofOutputs\": [\n          {\n            \"value\": \"167\",\n            \"address\": \"8a272Dd6Ee9dCbFfE3B5EF2FB3B2Cd526dCEFd3A91E10fa5EF52242BDeFA00F7\"\n          },\n          {\n            \"value\": \"9219\",\n            \"address\": \"7aaAD1DEC5D614ED06E62071Ac9B61f971f255eD06B6fBd7BfDc886d793AeFad\"\n          }\n        ],\n        \"missedProofOutputs\": [\n          {\n            \"value\": \"40767498\",\n            \"address\": \"1004198Be449763a5ed5Be632B8eeCdDfE5140F226A5EFF23DbBFB12a859bC45\"\n          },\n          {\n            \"value\": \"17722363\",\n            \"address\": \"CAdEAA0E1885B904a5B1D8edABed9f1DAeB14FB436035a20EbFcE2FaEDe5acab\"\n          }\n        ],\n        \"unlockHash\": \"f377A0190b9696629FB5df1aCFBDF7Baf606fa8B5A88559fCFF99EDdbd6F0b6b\",\n        \"revisionNumber\": \"<integer>\"\n      },\n      {\n        \"filesize\": \"<integer>\",\n        \"fileMerkleRoot\": \"0d8C93B03caC0F23432e36F73E0BfBDFa9EeF48D4461eDc482E85c9e4E58aeD3\",\n        \"windowStart\": \"<integer>\",\n        \"windowEnd\": \"<integer>\",\n        \"payout\": \"1351\",\n        \"validProofOutputs\": [\n          {\n            \"value\": \"79704945304\",\n            \"address\": \"65DaFedDfEea80f7A65DCBA7DdA9E5de8c4cFD6FE3eeD809df76CfCCF2dCBc6e\"\n          },\n          {\n            \"value\": \"616\",\n            \"address\": \"be6A2fdfeFAba8828db9a04650ff630aa61fD5Aa65B5d1d0c6FD4533be4CEfcf\"\n          }\n        ],\n        \"missedProofOutputs\": [\n          {\n            \"value\": \"0569104048\",\n            \"address\": \"9EdAC554EeF2FaedC45eFc41707922F9FAB6f6fF6C1b1E376b5241df555d7Ca0\"\n          },\n          {\n            \"value\": \"0674939513\",\n            \"address\": \"affc85aF9EbC6adEA5f80FBddBec4C773DBBBe34Ab081A4a988a9EaBb7dAe55F\"\n          }\n        ],\n        \"unlockHash\": \"69FACa5b1f8aAFA83FAAca2276cDD9Cec2426D8e6130f9d403D1f07135523b19\",\n        \"revisionNumber\": \"<integer>\"\n      }\n    ],\n    \"fileContractRevisions\": [\n      {\n        \"parentID\": \"fcid:6aEF1EDDbbCA018ce9F4fb81ec9ADD03d76d3790fdf5C3af3E3Da4A08b8cE5bb\",\n        \"unlockConditions\": {\n          \"timelock\": \"<integer>\",\n          \"publicKeys\": [\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"3B99dD5efaEa461DDcf5aca69Efb3Ac4934da7cFdDdd6AEb1CE905DF40B9c698\"\n            },\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"c6799C8eB3E6DD798ba0e133aA8238bB8A1bDdF7e36E518daBf6b312d71f75Da\"\n            }\n          ],\n          \"signaturesRequired\": \"<integer>\"\n        },\n        \"filesize\": \"<integer>\",\n        \"fileMerkleRoot\": \"1c3cB69f5D87a90EB4b9174441Dc1d9b11a06c7dEda1924e98de258bEF169b9c\",\n        \"windowStart\": \"<integer>\",\n        \"windowEnd\": \"<integer>\",\n        \"validProofOutputs\": [\n          {\n            \"value\": \"1200251\",\n            \"address\": \"6c8aD4000942c5d3513DDBeD8bf10bfA27Ef6ae7cAE8c9b5fe9744Efe3c71e5f\"\n          },\n          {\n            \"value\": \"9469232\",\n            \"address\": \"C5dFc52AA6F415D75DD2BacE4Fa6cBB1B7f57c4b6FDe5E99BBf7a219F2bbfaf7\"\n          }\n        ],\n        \"missedProofOutputs\": [\n          {\n            \"value\": \"0\",\n            \"address\": \"29D75cFcDEB8B52ab8FC6E9d93352Cb1108a9b003cFBf036f26b52fC7c8BeBaC\"\n          },\n          {\n            \"value\": \"8\",\n            \"address\": \"dfb43c4BEEe8F255beD0d581FDaB2f8dDD33Ad64aC00Ea13a5c29A235ACDf4d4\"\n          }\n        ],\n        \"unlockHash\": \"53DAA20CdD26Cd8A55Ab7796eaaeac4DEACFEdceAC6862FCA665AfbEDcB47872\",\n        \"revisionNumber\": \"<integer>\"\n      },\n      {\n        \"parentID\": \"fcid:7fa54e99E876dD561EbFb81fDc2b1b6a7BA3FdF6Bf16Ee1313a3C8ebf7e6fAEF\",\n        \"unlockConditions\": {\n          \"timelock\": \"<integer>\",\n          \"publicKeys\": [\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"f0efa0298DBbeb549Ab6E95d8b5aBdaCeE9AfaF8C8ac3d2e968C069cd2B2cC71\"\n            },\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"06aacFcaB5B236D6EF15CFEEf6D53b6fA8faF5defa8ccc5F1d1160531547d21B\"\n            }\n          ],\n          \"signaturesRequired\": \"<integer>\"\n        },\n        \"filesize\": \"<integer>\",\n        \"fileMerkleRoot\": \"1Bc9F67B82D1bB7F9bf4D3C5F3E06eA3C1EDbF1f6f82dE35FfDE7e49A5dccAb1\",\n        \"windowStart\": \"<integer>\",\n        \"windowEnd\": \"<integer>\",\n        \"validProofOutputs\": [\n          {\n            \"value\": \"809\",\n            \"address\": \"EFf10E58f0cc055CeF2556a95bA5dCf37E1fb9286eB5e2ceB2b9fFc976A6Ca2c\"\n          },\n          {\n            \"value\": \"72\",\n            \"address\": \"C20Fb5660BD4DC5e4C97BB82Fc7ace72Fcbae6cDFf84FEEdF3e631027B1FbCad\"\n          }\n        ],\n        \"missedProofOutputs\": [\n          {\n            \"value\": \"255353860\",\n            \"address\": \"FB3df9FBF24Cae0Fb8aD809a4d9b5056b0B2AEF19878D3F0caFA8f847f9bE0F8\"\n          },\n          {\n            \"value\": \"95698\",\n            \"address\": \"7b08BBadFAf0BAabfDA28f4B5B0bb80E52549f98D78fd9c6e06E90F43a7C0EE1\"\n          }\n        ],\n        \"unlockHash\": \"d582995E0fC62e0Bce0a3D21aDb6Df075a4cEA30955F7aae80F9eAeD1EBad7bE\",\n        \"revisionNumber\": \"<integer>\"\n      }\n    ],\n    \"storageProofs\": [\n      {\n        \"parentID\": \"fcid:63c0EC5F8CeA72e2D7Cc6fdd3Bac144d2C79Fda45aDBE385C27CcE1DE2eF2C95\",\n        \"leaf\": \"<string>\",\n        \"proof\": [\n          \"03F88ab37D17Dc12F7E6D5A20CDBF7916B3a6DcAE2B11F1fF5BF18A92A0B5D25\",\n          \"3227dC272E8dC73B97dDF24aFD6Fbf60B3ADB88e2Aaad8aB477c565ac90dcf55\"\n        ]\n      },\n      {\n        \"parentID\": \"fcid:556d644AB5cEcFb7bc08D12AF9bbCb79eb2DEeb6Fdc4dcE17F26c8B7Ef2E4aFa\",\n        \"leaf\": \"<string>\",\n        \"proof\": [\n          \"375C3AcBE6077282eeE02EB05a14F788CE2FFB32DD50Cb6D85Adebf54e4a7229\",\n          \"bbfA1bbf4778fa7bff0ee49BD37eC6cf9c0fF0aF9E89d8ed5ab4Ad410A6E6EBD\"\n        ]\n      }\n    ],\n    \"siafundInputs\": [\n      {\n        \"parentID\": \"526A5CA90aaaC1f256d07A2DfF0eFcce91D956Ae6fc91736B7B2D5BE8ea1D7Ac\",\n        \"unlockConditions\": {\n          \"timelock\": \"<integer>\",\n          \"publicKeys\": [\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"54fa3895fb7D6A8DE1297bBbCD4551CaFeE0FfBaDeEDb6Cf50FdF29F2e6d6d5f\"\n            },\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"436dAc015Bd46D57aDFa3DdDE9Ec4aA9F7423b0cD9A69f2c2DeB29A0A2Ad1Fd1\"\n            }\n          ],\n          \"signaturesRequired\": \"<integer>\"\n        },\n        \"claimAddress\": \"BdE3DfDAC3b6d23ec4286edad9749Bf6ABD25eAcbC1fe1A6c0633a1341cDCF2A\"\n      },\n      {\n        \"parentID\": \"30afDA6E21b1efaC2fFCaE2cE1FcfD27aF8412bFd7f4B76Cee2F00bEebaa2CF5\",\n        \"unlockConditions\": {\n          \"timelock\": \"<integer>\",\n          \"publicKeys\": [\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"EfAfdAdEf3F4e8aD6bfff6A407512De435A73D0749A321047cddCa05BD9a6FA4\"\n            },\n            {\n              \"algorithm\": \"<string>\",\n              \"key\": \"770Cf4d5faf3f69AE9d2A8d4754d8c48648dbEa8Dd23D5EF372AbAAfCB8C7a0F\"\n            }\n          ],\n          \"signaturesRequired\": \"<integer>\"\n        },\n        \"claimAddress\": \"8c8aAB3e2A7f06cdeB34999af5DA19A26E7bbF5145ebd8BB6469CBf61deE3AeC\"\n      }\n    ],\n    \"siafundOutputs\": [\n      {\n        \"value\": \"<integer>\",\n        \"address\": \"Acf7fbFBE20E3F6BDBA393fbC88aa6E10d9BAaD8CBfe1deABE8fdDfDcC46d9c4\"\n      },\n      {\n        \"value\": \"<integer>\",\n        \"address\": \"DeF4dda1d5b2D039FC19A9b719b9D57C60Abfba60d4E9c3baEaCC71beEb6CAe5\"\n      }\n    ],\n    \"minerFees\": [\n      \"05681207156\",\n      \"99780561219\"\n    ],\n    \"arbitraryData\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"signatures\": [\n      {\n        \"parentID\": \"5A5FDEBC1a2FC00BBBee4ca63cdE9C0C6AaF95Ba48aaCdd5571268DCBB99927e\",\n        \"publicKeyIndex\": \"<integer>\",\n        \"timelock\": \"<integer>\",\n        \"coveredFields\": {\n          \"wholeTransaction\": \"<boolean>\",\n          \"siacoinInputs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"siacoinOutputs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"fileContracts\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"fileContractRevisions\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"storageProofs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"siafundInputs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"siafundOutputs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"minerFees\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"arbitraryData\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"signatures\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        \"signature\": \"377AeA71BdcCd45CfBCBbEFa1a8DD6bb9ea47fcbfC219772AAB0b8c83Fd8eC89\"\n      },\n      {\n        \"parentID\": \"3b45EFdebc5eB3B07aC60deA2DA2559a60Ceb781C820f89Df26239215dcfE11c\",\n        \"publicKeyIndex\": \"<integer>\",\n        \"timelock\": \"<integer>\",\n        \"coveredFields\": {\n          \"wholeTransaction\": \"<boolean>\",\n          \"siacoinInputs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"siacoinOutputs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"fileContracts\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"fileContractRevisions\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"storageProofs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"siafundInputs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"siafundOutputs\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"minerFees\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"arbitraryData\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"signatures\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        \"signature\": \"bBEeFDdc10BbfB1Cb8edbfcf9E400783b627ecBF6Bba6Ac2689ddC9dB114C7e2\"\n      }\n    ]\n  }\n]"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/txpool/transactions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"txpool",
														"transactions"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "broadcast",
							"item": [
								{
									"name": "Broadcast transaction",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"siacoinInputs\": [\n    {\n      \"parentID\": \"BD46a84c287CDcb5CDFc2dabB9B30Cb135ee2Fffe66B032830Af80636856Bb02\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"CaE784e4EF6bBcC5194EA2a77eDBf4854b67E5FcB93caaBb1ee4F84Debc24dfB\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"679ABDcCA3d2bBDaEe8FD6E89eFfB969A2dB9CE9C27DdbDC9dfEFeA560B11Daf\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      }\n    },\n    {\n      \"parentID\": \"bD1abE1df6A6CB4FD5e05189ab8BA3fD7Ab49ab1DAAb57f15eF72e2CCeE695aB\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"AEF8fC8d0a9cC24b40bdC31cF47682E31db46D53303679b39e0D007b528b8b96\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"AD9E4dd8bDF9033Ca1FbdbBa7bC96dfD1f9AF740F747c25AEfa3468Da50AB986\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      }\n    }\n  ],\n  \"siacoinOutputs\": [\n    {\n      \"value\": \"6303012351\",\n      \"address\": \"48EcBD5faadC2665D4Dc65B7EcD0f7c0bAcE1dADc15B73bDbddAC760eD9be5df\"\n    },\n    {\n      \"value\": \"61922916909\",\n      \"address\": \"6DcF39e485AeAb84DAbfA02f829b1f865B8DfF38D9Da603cb43ef5FE3B0F7C21\"\n    }\n  ],\n  \"fileContracts\": [\n    {\n      \"filesize\": \"<integer>\",\n      \"fileMerkleRoot\": \"bA8AAbf16d8D3063ec3CCB6d9d7402be1EF49194AD1Bcaf6aAb4b5fd6c87CF1d\",\n      \"windowStart\": \"<integer>\",\n      \"windowEnd\": \"<integer>\",\n      \"payout\": \"8596919\",\n      \"validProofOutputs\": [\n        {\n          \"value\": \"636\",\n          \"address\": \"FD78ACBfBa0dde1Df16a1fE5b9BDfBa3af494AF458c508bfbdbBBAc0e6BBDEea\"\n        },\n        {\n          \"value\": \"250943223\",\n          \"address\": \"f1AA5aE222E7a8871fEe802BaFEdDcCa95Ecb06Ced0BfCb9014AeEEb57e67EB8\"\n        }\n      ],\n      \"missedProofOutputs\": [\n        {\n          \"value\": \"48621789\",\n          \"address\": \"719c57affec0DD6c6AfD98fD3d869Eb3009D1bAef26863DF8dbc5A1EAdF60c5a\"\n        },\n        {\n          \"value\": \"4\",\n          \"address\": \"7fCec9fDA3de99Ef5bBF1Ac0cdd4D40aBa4962ee5453D2348FF7Bdf5aff2fbE9\"\n        }\n      ],\n      \"unlockHash\": \"E229C3EBcdDAA498a2fDbd8a3171CB6c6Ba9dc92D3a8b3e064EBd26BD7884d7A\",\n      \"revisionNumber\": \"<integer>\"\n    },\n    {\n      \"filesize\": \"<integer>\",\n      \"fileMerkleRoot\": \"2D99726C38eE042778CbeBe2e4bfD193C1FbE41da49c4BeC9BBD6aA7cCd6d119\",\n      \"windowStart\": \"<integer>\",\n      \"windowEnd\": \"<integer>\",\n      \"payout\": \"595760084\",\n      \"validProofOutputs\": [\n        {\n          \"value\": \"10308668\",\n          \"address\": \"64d14BAaFec345a6CbFd5E8dB4eaD4D3FE7c67e49407fd776CFe836fb42Cfaa0\"\n        },\n        {\n          \"value\": \"44\",\n          \"address\": \"A5F15124cC8ee3EEAed7aA77D11279BF13fcBcA31Fad6530FEAC2f4181d89165\"\n        }\n      ],\n      \"missedProofOutputs\": [\n        {\n          \"value\": \"0905\",\n          \"address\": \"ee5dd33BcB98a1fb687EEFc41d64E070856b1FC85fFCC62EDe20eccfF34b4f5c\"\n        },\n        {\n          \"value\": \"668914842\",\n          \"address\": \"8AFAd3D554B4734Ffae25077Fa30AaF08A807dc9cAc74C60cc57A97ACE12ABEa\"\n        }\n      ],\n      \"unlockHash\": \"91c7C90e72D20fCB221e6fa0bDdc76D2B6cEe004b29D3D8CFce3EA9dd8AA9069\",\n      \"revisionNumber\": \"<integer>\"\n    }\n  ],\n  \"fileContractRevisions\": [\n    {\n      \"parentID\": \"fcid:fB1FFD01f6C7aeEdD92A4FbbB08CcD50A8CB2eAB48db8a0aB659Cdac3adceFD6\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"c01457a693eD6Ca4C8B3C86C80e1F106A6EB4E58f36bf486FCDED66460E9bCe8\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"8bF5cc9AFDeEaE33Cba44dcfac66191cd8b0cd7b932Aaaf76EbfFbaC9d36a3Aa\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      },\n      \"filesize\": \"<integer>\",\n      \"fileMerkleRoot\": \"4d9CB8C1C2EB8adC9afBd77d4c9ffd7e0deAbaC6EEf6BCcd2bAD8DEC1EAA9f86\",\n      \"windowStart\": \"<integer>\",\n      \"windowEnd\": \"<integer>\",\n      \"validProofOutputs\": [\n        {\n          \"value\": \"90084\",\n          \"address\": \"0ac7F46eC7d006dF5ecbF98faDE955A78B0528a2FCa070aD5851b4Fd546744Dd\"\n        },\n        {\n          \"value\": \"8668\",\n          \"address\": \"b665a2fDEE8Dca289fFcFf81Be6BaDd4Bc373Fd1f16B784BAdF78fECd4979Eb9\"\n        }\n      ],\n      \"missedProofOutputs\": [\n        {\n          \"value\": \"44\",\n          \"address\": \"718f4c4ab9d86af2bB6b5Bf60D095D9bf7ebaa3baf8EAaDdD6Ee99e3f9cF3785\"\n        },\n        {\n          \"value\": \"15200574632\",\n          \"address\": \"b7ffFcfEB199F535ecE8dAc45b7b0c78BDbaAE1E255eea1FDA4842A1F436EFec\"\n        }\n      ],\n      \"unlockHash\": \"20DbCaa3e4BDfAFbF61AC3Aef9d3C3D8eB0F4D57FCAc91D9a3bb68eFb7379B04\",\n      \"revisionNumber\": \"<integer>\"\n    },\n    {\n      \"parentID\": \"fcid:0AfA07b71fd0a2A7CAe7ce4Be7Bf7Ae21E10B4fCbcF35CabfB4A4beA96d7afB9\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"FbCaDF298236Ef6D8aDA10cCCEAfFFdac07182F0dbad6bDAB87F4C6274bDA77A\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"0e4a2Ece7EA1DaFbB89Dc5b9de2c9FadEf7bC93eaFDC3796adC713F2e42902DA\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      },\n      \"filesize\": \"<integer>\",\n      \"fileMerkleRoot\": \"a7cFd39e6DC4ecE48fAbb24b0D67bE856802feE1701a8b7d1bb8cC9bcdD48e6e\",\n      \"windowStart\": \"<integer>\",\n      \"windowEnd\": \"<integer>\",\n      \"validProofOutputs\": [\n        {\n          \"value\": \"299836\",\n          \"address\": \"A8b79f9bd37b07D6cEecA4fC3322aD11f9B88265B43d3BB046e1f0C0773bc1a9\"\n        },\n        {\n          \"value\": \"1189381059\",\n          \"address\": \"E06765F9F1aC5133c2b53eaD76dea9cDEE6a7DD2DfAe201FfF643aB6FF4C1FCF\"\n        }\n      ],\n      \"missedProofOutputs\": [\n        {\n          \"value\": \"29\",\n          \"address\": \"a4c57f3Cc5Fb57526B191B97A9984f5432bDFe14e59F7767bBd7FF4fEa0ce7fd\"\n        },\n        {\n          \"value\": \"88\",\n          \"address\": \"975ABE235cBCCbc150ae753500bab3EA7E2f6365D9dbCdFFa0B17DfBd9eFae1a\"\n        }\n      ],\n      \"unlockHash\": \"5F118dd7c62D68899DEFAEA3e4BaE118ba59ef0a1438e8987fE3D07d09fe8D2f\",\n      \"revisionNumber\": \"<integer>\"\n    }\n  ],\n  \"storageProofs\": [\n    {\n      \"parentID\": \"fcid:16Ffe6Bd49059C8c6DbA01aE49DECB126c3ee02fE03fC8eBE7E313eDC5BCE4e1\",\n      \"leaf\": \"<string>\",\n      \"proof\": [\n        \"2B9d8F8E936EB17B6E027A9E5E7DF60Ee0Ebb81eFE424299EC16bf0A21cC1172\",\n        \"E25eCBeCf96Cf78dB3b8E7172d02F15bFF88fa10C2f2f38bbd50edB47cBabD53\"\n      ]\n    },\n    {\n      \"parentID\": \"fcid:bdDBeefFfcE5E3Da171EBbd8e4D8Bbb0DBec6EeACcc039CCe72F0acd1dF8ce3D\",\n      \"leaf\": \"<string>\",\n      \"proof\": [\n        \"Daba0C9D73c2832D117e859B7E0cFFceFBafD287Bc7db7ba6456C6fb01D8fDeC\",\n        \"C9EBB80Ae3F5F7B8A13AbBa5c8fac44c7aaBf85ad7DB0fBC22C9E41328D5DDeC\"\n      ]\n    }\n  ],\n  \"siafundInputs\": [\n    {\n      \"parentID\": \"fB2f74bb29cA8236B401865fd5db08d834ca5cd4ddAD030987aa2D6dC64Ccb67\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"1078fBde2eA68aEbe54dD6fdE44bD9b21D4E79aca8cCc5f4F8D6aD0a870eFa84\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"Faa8FC7F87A8aDF60bfE07639Bd48f4E2Fce789fab53C34cfC6C0Dca21A8deEC\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      },\n      \"claimAddress\": \"F05cCf51FcB381Cfa0ce1923502FDdE543d0A4Fb11F46afB48BC09f8Bc604A59\"\n    },\n    {\n      \"parentID\": \"8BF8cA5Ba2ea5F9751e290A4C0E5c6Bcd9eFFFa4E7Da3a8f609b11ffaFEB12a0\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"141B5DfC0Bae48dD934824F65153fA738dcFDcA2684aEa3ade1CeCe2c8Dcfea0\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"cb4b1Cd8Fe5708f4502b618BDba98DFbEdBe0134ee0d98f686fFF07C7Ee3cC6D\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      },\n      \"claimAddress\": \"cE1f33D0e830c6C7EF2C7C88a4EA3a725D2F76EDEB0ff40f574c50f3ec10A53c\"\n    }\n  ],\n  \"siafundOutputs\": [\n    {\n      \"value\": \"<integer>\",\n      \"address\": \"50Ad11932cF890b828fEdD6991C1Af23818E1EF02FAF8c209bFb3580abfAeEc0\"\n    },\n    {\n      \"value\": \"<integer>\",\n      \"address\": \"75fc30BD6A2A79B7AEd866082CE2A5B90586ADbC1b7DDFaB20DAC25CA6C0acf1\"\n    }\n  ],\n  \"minerFees\": [\n    \"46489518\",\n    \"18539\"\n  ],\n  \"arbitraryData\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"signatures\": [\n    {\n      \"parentID\": \"A91C61ebc0c947eB01703d4CbE49759E6e0FCF2b7bC16bD1a0c0ee1a6B531319\",\n      \"publicKeyIndex\": \"<integer>\",\n      \"timelock\": \"<integer>\",\n      \"coveredFields\": {\n        \"wholeTransaction\": \"<boolean>\",\n        \"siacoinInputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siacoinOutputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"fileContracts\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"fileContractRevisions\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"storageProofs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siafundInputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siafundOutputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"minerFees\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"arbitraryData\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"signatures\": [\n          \"<integer>\",\n          \"<integer>\"\n        ]\n      },\n      \"signature\": \"A25A73c8Deb14dD37a4bf25D975DEBA54DBb112eba08E6f8AB469da84A3E5eED\"\n    },\n    {\n      \"parentID\": \"fb635faba5B4F6DfFa1aB7Ea10BFf74222FDBE1a23caA1C8b8b723a86629fCeF\",\n      \"publicKeyIndex\": \"<integer>\",\n      \"timelock\": \"<integer>\",\n      \"coveredFields\": {\n        \"wholeTransaction\": \"<boolean>\",\n        \"siacoinInputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siacoinOutputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"fileContracts\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"fileContractRevisions\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"storageProofs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siafundInputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siafundOutputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"minerFees\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"arbitraryData\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"signatures\": [\n          \"<integer>\",\n          \"<integer>\"\n        ]\n      },\n      \"signature\": \"E07f4D64d8Ec3B438b13dca8e731D2bdE52edAaF0Df9A2AfFe2738D61D21348E\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/txpool/broadcast",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"txpool",
												"broadcast"
											]
										},
										"description": "Broadcasts the specified transaction."
									},
									"response": [
										{
											"name": "Successfully broadcast transaction",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"siacoinInputs\": [\n    {\n      \"parentID\": \"BD46a84c287CDcb5CDFc2dabB9B30Cb135ee2Fffe66B032830Af80636856Bb02\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"CaE784e4EF6bBcC5194EA2a77eDBf4854b67E5FcB93caaBb1ee4F84Debc24dfB\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"679ABDcCA3d2bBDaEe8FD6E89eFfB969A2dB9CE9C27DdbDC9dfEFeA560B11Daf\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      }\n    },\n    {\n      \"parentID\": \"bD1abE1df6A6CB4FD5e05189ab8BA3fD7Ab49ab1DAAb57f15eF72e2CCeE695aB\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"AEF8fC8d0a9cC24b40bdC31cF47682E31db46D53303679b39e0D007b528b8b96\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"AD9E4dd8bDF9033Ca1FbdbBa7bC96dfD1f9AF740F747c25AEfa3468Da50AB986\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      }\n    }\n  ],\n  \"siacoinOutputs\": [\n    {\n      \"value\": \"6303012351\",\n      \"address\": \"48EcBD5faadC2665D4Dc65B7EcD0f7c0bAcE1dADc15B73bDbddAC760eD9be5df\"\n    },\n    {\n      \"value\": \"61922916909\",\n      \"address\": \"6DcF39e485AeAb84DAbfA02f829b1f865B8DfF38D9Da603cb43ef5FE3B0F7C21\"\n    }\n  ],\n  \"fileContracts\": [\n    {\n      \"filesize\": \"<integer>\",\n      \"fileMerkleRoot\": \"bA8AAbf16d8D3063ec3CCB6d9d7402be1EF49194AD1Bcaf6aAb4b5fd6c87CF1d\",\n      \"windowStart\": \"<integer>\",\n      \"windowEnd\": \"<integer>\",\n      \"payout\": \"8596919\",\n      \"validProofOutputs\": [\n        {\n          \"value\": \"636\",\n          \"address\": \"FD78ACBfBa0dde1Df16a1fE5b9BDfBa3af494AF458c508bfbdbBBAc0e6BBDEea\"\n        },\n        {\n          \"value\": \"250943223\",\n          \"address\": \"f1AA5aE222E7a8871fEe802BaFEdDcCa95Ecb06Ced0BfCb9014AeEEb57e67EB8\"\n        }\n      ],\n      \"missedProofOutputs\": [\n        {\n          \"value\": \"48621789\",\n          \"address\": \"719c57affec0DD6c6AfD98fD3d869Eb3009D1bAef26863DF8dbc5A1EAdF60c5a\"\n        },\n        {\n          \"value\": \"4\",\n          \"address\": \"7fCec9fDA3de99Ef5bBF1Ac0cdd4D40aBa4962ee5453D2348FF7Bdf5aff2fbE9\"\n        }\n      ],\n      \"unlockHash\": \"E229C3EBcdDAA498a2fDbd8a3171CB6c6Ba9dc92D3a8b3e064EBd26BD7884d7A\",\n      \"revisionNumber\": \"<integer>\"\n    },\n    {\n      \"filesize\": \"<integer>\",\n      \"fileMerkleRoot\": \"2D99726C38eE042778CbeBe2e4bfD193C1FbE41da49c4BeC9BBD6aA7cCd6d119\",\n      \"windowStart\": \"<integer>\",\n      \"windowEnd\": \"<integer>\",\n      \"payout\": \"595760084\",\n      \"validProofOutputs\": [\n        {\n          \"value\": \"10308668\",\n          \"address\": \"64d14BAaFec345a6CbFd5E8dB4eaD4D3FE7c67e49407fd776CFe836fb42Cfaa0\"\n        },\n        {\n          \"value\": \"44\",\n          \"address\": \"A5F15124cC8ee3EEAed7aA77D11279BF13fcBcA31Fad6530FEAC2f4181d89165\"\n        }\n      ],\n      \"missedProofOutputs\": [\n        {\n          \"value\": \"0905\",\n          \"address\": \"ee5dd33BcB98a1fb687EEFc41d64E070856b1FC85fFCC62EDe20eccfF34b4f5c\"\n        },\n        {\n          \"value\": \"668914842\",\n          \"address\": \"8AFAd3D554B4734Ffae25077Fa30AaF08A807dc9cAc74C60cc57A97ACE12ABEa\"\n        }\n      ],\n      \"unlockHash\": \"91c7C90e72D20fCB221e6fa0bDdc76D2B6cEe004b29D3D8CFce3EA9dd8AA9069\",\n      \"revisionNumber\": \"<integer>\"\n    }\n  ],\n  \"fileContractRevisions\": [\n    {\n      \"parentID\": \"fcid:fB1FFD01f6C7aeEdD92A4FbbB08CcD50A8CB2eAB48db8a0aB659Cdac3adceFD6\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"c01457a693eD6Ca4C8B3C86C80e1F106A6EB4E58f36bf486FCDED66460E9bCe8\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"8bF5cc9AFDeEaE33Cba44dcfac66191cd8b0cd7b932Aaaf76EbfFbaC9d36a3Aa\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      },\n      \"filesize\": \"<integer>\",\n      \"fileMerkleRoot\": \"4d9CB8C1C2EB8adC9afBd77d4c9ffd7e0deAbaC6EEf6BCcd2bAD8DEC1EAA9f86\",\n      \"windowStart\": \"<integer>\",\n      \"windowEnd\": \"<integer>\",\n      \"validProofOutputs\": [\n        {\n          \"value\": \"90084\",\n          \"address\": \"0ac7F46eC7d006dF5ecbF98faDE955A78B0528a2FCa070aD5851b4Fd546744Dd\"\n        },\n        {\n          \"value\": \"8668\",\n          \"address\": \"b665a2fDEE8Dca289fFcFf81Be6BaDd4Bc373Fd1f16B784BAdF78fECd4979Eb9\"\n        }\n      ],\n      \"missedProofOutputs\": [\n        {\n          \"value\": \"44\",\n          \"address\": \"718f4c4ab9d86af2bB6b5Bf60D095D9bf7ebaa3baf8EAaDdD6Ee99e3f9cF3785\"\n        },\n        {\n          \"value\": \"15200574632\",\n          \"address\": \"b7ffFcfEB199F535ecE8dAc45b7b0c78BDbaAE1E255eea1FDA4842A1F436EFec\"\n        }\n      ],\n      \"unlockHash\": \"20DbCaa3e4BDfAFbF61AC3Aef9d3C3D8eB0F4D57FCAc91D9a3bb68eFb7379B04\",\n      \"revisionNumber\": \"<integer>\"\n    },\n    {\n      \"parentID\": \"fcid:0AfA07b71fd0a2A7CAe7ce4Be7Bf7Ae21E10B4fCbcF35CabfB4A4beA96d7afB9\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"FbCaDF298236Ef6D8aDA10cCCEAfFFdac07182F0dbad6bDAB87F4C6274bDA77A\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"0e4a2Ece7EA1DaFbB89Dc5b9de2c9FadEf7bC93eaFDC3796adC713F2e42902DA\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      },\n      \"filesize\": \"<integer>\",\n      \"fileMerkleRoot\": \"a7cFd39e6DC4ecE48fAbb24b0D67bE856802feE1701a8b7d1bb8cC9bcdD48e6e\",\n      \"windowStart\": \"<integer>\",\n      \"windowEnd\": \"<integer>\",\n      \"validProofOutputs\": [\n        {\n          \"value\": \"299836\",\n          \"address\": \"A8b79f9bd37b07D6cEecA4fC3322aD11f9B88265B43d3BB046e1f0C0773bc1a9\"\n        },\n        {\n          \"value\": \"1189381059\",\n          \"address\": \"E06765F9F1aC5133c2b53eaD76dea9cDEE6a7DD2DfAe201FfF643aB6FF4C1FCF\"\n        }\n      ],\n      \"missedProofOutputs\": [\n        {\n          \"value\": \"29\",\n          \"address\": \"a4c57f3Cc5Fb57526B191B97A9984f5432bDFe14e59F7767bBd7FF4fEa0ce7fd\"\n        },\n        {\n          \"value\": \"88\",\n          \"address\": \"975ABE235cBCCbc150ae753500bab3EA7E2f6365D9dbCdFFa0B17DfBd9eFae1a\"\n        }\n      ],\n      \"unlockHash\": \"5F118dd7c62D68899DEFAEA3e4BaE118ba59ef0a1438e8987fE3D07d09fe8D2f\",\n      \"revisionNumber\": \"<integer>\"\n    }\n  ],\n  \"storageProofs\": [\n    {\n      \"parentID\": \"fcid:16Ffe6Bd49059C8c6DbA01aE49DECB126c3ee02fE03fC8eBE7E313eDC5BCE4e1\",\n      \"leaf\": \"<string>\",\n      \"proof\": [\n        \"2B9d8F8E936EB17B6E027A9E5E7DF60Ee0Ebb81eFE424299EC16bf0A21cC1172\",\n        \"E25eCBeCf96Cf78dB3b8E7172d02F15bFF88fa10C2f2f38bbd50edB47cBabD53\"\n      ]\n    },\n    {\n      \"parentID\": \"fcid:bdDBeefFfcE5E3Da171EBbd8e4D8Bbb0DBec6EeACcc039CCe72F0acd1dF8ce3D\",\n      \"leaf\": \"<string>\",\n      \"proof\": [\n        \"Daba0C9D73c2832D117e859B7E0cFFceFBafD287Bc7db7ba6456C6fb01D8fDeC\",\n        \"C9EBB80Ae3F5F7B8A13AbBa5c8fac44c7aaBf85ad7DB0fBC22C9E41328D5DDeC\"\n      ]\n    }\n  ],\n  \"siafundInputs\": [\n    {\n      \"parentID\": \"fB2f74bb29cA8236B401865fd5db08d834ca5cd4ddAD030987aa2D6dC64Ccb67\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"1078fBde2eA68aEbe54dD6fdE44bD9b21D4E79aca8cCc5f4F8D6aD0a870eFa84\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"Faa8FC7F87A8aDF60bfE07639Bd48f4E2Fce789fab53C34cfC6C0Dca21A8deEC\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      },\n      \"claimAddress\": \"F05cCf51FcB381Cfa0ce1923502FDdE543d0A4Fb11F46afB48BC09f8Bc604A59\"\n    },\n    {\n      \"parentID\": \"8BF8cA5Ba2ea5F9751e290A4C0E5c6Bcd9eFFFa4E7Da3a8f609b11ffaFEB12a0\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"141B5DfC0Bae48dD934824F65153fA738dcFDcA2684aEa3ade1CeCe2c8Dcfea0\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"cb4b1Cd8Fe5708f4502b618BDba98DFbEdBe0134ee0d98f686fFF07C7Ee3cC6D\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      },\n      \"claimAddress\": \"cE1f33D0e830c6C7EF2C7C88a4EA3a725D2F76EDEB0ff40f574c50f3ec10A53c\"\n    }\n  ],\n  \"siafundOutputs\": [\n    {\n      \"value\": \"<integer>\",\n      \"address\": \"50Ad11932cF890b828fEdD6991C1Af23818E1EF02FAF8c209bFb3580abfAeEc0\"\n    },\n    {\n      \"value\": \"<integer>\",\n      \"address\": \"75fc30BD6A2A79B7AEd866082CE2A5B90586ADbC1b7DDFaB20DAC25CA6C0acf1\"\n    }\n  ],\n  \"minerFees\": [\n    \"46489518\",\n    \"18539\"\n  ],\n  \"arbitraryData\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"signatures\": [\n    {\n      \"parentID\": \"A91C61ebc0c947eB01703d4CbE49759E6e0FCF2b7bC16bD1a0c0ee1a6B531319\",\n      \"publicKeyIndex\": \"<integer>\",\n      \"timelock\": \"<integer>\",\n      \"coveredFields\": {\n        \"wholeTransaction\": \"<boolean>\",\n        \"siacoinInputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siacoinOutputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"fileContracts\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"fileContractRevisions\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"storageProofs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siafundInputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siafundOutputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"minerFees\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"arbitraryData\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"signatures\": [\n          \"<integer>\",\n          \"<integer>\"\n        ]\n      },\n      \"signature\": \"A25A73c8Deb14dD37a4bf25D975DEBA54DBb112eba08E6f8AB469da84A3E5eED\"\n    },\n    {\n      \"parentID\": \"fb635faba5B4F6DfFa1aB7Ea10BFf74222FDBE1a23caA1C8b8b723a86629fCeF\",\n      \"publicKeyIndex\": \"<integer>\",\n      \"timelock\": \"<integer>\",\n      \"coveredFields\": {\n        \"wholeTransaction\": \"<boolean>\",\n        \"siacoinInputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siacoinOutputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"fileContracts\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"fileContractRevisions\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"storageProofs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siafundInputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siafundOutputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"minerFees\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"arbitraryData\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"signatures\": [\n          \"<integer>\",\n          \"<integer>\"\n        ]\n      },\n      \"signature\": \"E07f4D64d8Ec3B438b13dca8e731D2bdE52edAaF0Df9A2AfFe2738D61D21348E\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/txpool/broadcast",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"txpool",
														"broadcast"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"siacoinInputs\": [\n    {\n      \"parentID\": \"BD46a84c287CDcb5CDFc2dabB9B30Cb135ee2Fffe66B032830Af80636856Bb02\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"CaE784e4EF6bBcC5194EA2a77eDBf4854b67E5FcB93caaBb1ee4F84Debc24dfB\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"679ABDcCA3d2bBDaEe8FD6E89eFfB969A2dB9CE9C27DdbDC9dfEFeA560B11Daf\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      }\n    },\n    {\n      \"parentID\": \"bD1abE1df6A6CB4FD5e05189ab8BA3fD7Ab49ab1DAAb57f15eF72e2CCeE695aB\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"AEF8fC8d0a9cC24b40bdC31cF47682E31db46D53303679b39e0D007b528b8b96\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"AD9E4dd8bDF9033Ca1FbdbBa7bC96dfD1f9AF740F747c25AEfa3468Da50AB986\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      }\n    }\n  ],\n  \"siacoinOutputs\": [\n    {\n      \"value\": \"6303012351\",\n      \"address\": \"48EcBD5faadC2665D4Dc65B7EcD0f7c0bAcE1dADc15B73bDbddAC760eD9be5df\"\n    },\n    {\n      \"value\": \"61922916909\",\n      \"address\": \"6DcF39e485AeAb84DAbfA02f829b1f865B8DfF38D9Da603cb43ef5FE3B0F7C21\"\n    }\n  ],\n  \"fileContracts\": [\n    {\n      \"filesize\": \"<integer>\",\n      \"fileMerkleRoot\": \"bA8AAbf16d8D3063ec3CCB6d9d7402be1EF49194AD1Bcaf6aAb4b5fd6c87CF1d\",\n      \"windowStart\": \"<integer>\",\n      \"windowEnd\": \"<integer>\",\n      \"payout\": \"8596919\",\n      \"validProofOutputs\": [\n        {\n          \"value\": \"636\",\n          \"address\": \"FD78ACBfBa0dde1Df16a1fE5b9BDfBa3af494AF458c508bfbdbBBAc0e6BBDEea\"\n        },\n        {\n          \"value\": \"250943223\",\n          \"address\": \"f1AA5aE222E7a8871fEe802BaFEdDcCa95Ecb06Ced0BfCb9014AeEEb57e67EB8\"\n        }\n      ],\n      \"missedProofOutputs\": [\n        {\n          \"value\": \"48621789\",\n          \"address\": \"719c57affec0DD6c6AfD98fD3d869Eb3009D1bAef26863DF8dbc5A1EAdF60c5a\"\n        },\n        {\n          \"value\": \"4\",\n          \"address\": \"7fCec9fDA3de99Ef5bBF1Ac0cdd4D40aBa4962ee5453D2348FF7Bdf5aff2fbE9\"\n        }\n      ],\n      \"unlockHash\": \"E229C3EBcdDAA498a2fDbd8a3171CB6c6Ba9dc92D3a8b3e064EBd26BD7884d7A\",\n      \"revisionNumber\": \"<integer>\"\n    },\n    {\n      \"filesize\": \"<integer>\",\n      \"fileMerkleRoot\": \"2D99726C38eE042778CbeBe2e4bfD193C1FbE41da49c4BeC9BBD6aA7cCd6d119\",\n      \"windowStart\": \"<integer>\",\n      \"windowEnd\": \"<integer>\",\n      \"payout\": \"595760084\",\n      \"validProofOutputs\": [\n        {\n          \"value\": \"10308668\",\n          \"address\": \"64d14BAaFec345a6CbFd5E8dB4eaD4D3FE7c67e49407fd776CFe836fb42Cfaa0\"\n        },\n        {\n          \"value\": \"44\",\n          \"address\": \"A5F15124cC8ee3EEAed7aA77D11279BF13fcBcA31Fad6530FEAC2f4181d89165\"\n        }\n      ],\n      \"missedProofOutputs\": [\n        {\n          \"value\": \"0905\",\n          \"address\": \"ee5dd33BcB98a1fb687EEFc41d64E070856b1FC85fFCC62EDe20eccfF34b4f5c\"\n        },\n        {\n          \"value\": \"668914842\",\n          \"address\": \"8AFAd3D554B4734Ffae25077Fa30AaF08A807dc9cAc74C60cc57A97ACE12ABEa\"\n        }\n      ],\n      \"unlockHash\": \"91c7C90e72D20fCB221e6fa0bDdc76D2B6cEe004b29D3D8CFce3EA9dd8AA9069\",\n      \"revisionNumber\": \"<integer>\"\n    }\n  ],\n  \"fileContractRevisions\": [\n    {\n      \"parentID\": \"fcid:fB1FFD01f6C7aeEdD92A4FbbB08CcD50A8CB2eAB48db8a0aB659Cdac3adceFD6\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"c01457a693eD6Ca4C8B3C86C80e1F106A6EB4E58f36bf486FCDED66460E9bCe8\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"8bF5cc9AFDeEaE33Cba44dcfac66191cd8b0cd7b932Aaaf76EbfFbaC9d36a3Aa\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      },\n      \"filesize\": \"<integer>\",\n      \"fileMerkleRoot\": \"4d9CB8C1C2EB8adC9afBd77d4c9ffd7e0deAbaC6EEf6BCcd2bAD8DEC1EAA9f86\",\n      \"windowStart\": \"<integer>\",\n      \"windowEnd\": \"<integer>\",\n      \"validProofOutputs\": [\n        {\n          \"value\": \"90084\",\n          \"address\": \"0ac7F46eC7d006dF5ecbF98faDE955A78B0528a2FCa070aD5851b4Fd546744Dd\"\n        },\n        {\n          \"value\": \"8668\",\n          \"address\": \"b665a2fDEE8Dca289fFcFf81Be6BaDd4Bc373Fd1f16B784BAdF78fECd4979Eb9\"\n        }\n      ],\n      \"missedProofOutputs\": [\n        {\n          \"value\": \"44\",\n          \"address\": \"718f4c4ab9d86af2bB6b5Bf60D095D9bf7ebaa3baf8EAaDdD6Ee99e3f9cF3785\"\n        },\n        {\n          \"value\": \"15200574632\",\n          \"address\": \"b7ffFcfEB199F535ecE8dAc45b7b0c78BDbaAE1E255eea1FDA4842A1F436EFec\"\n        }\n      ],\n      \"unlockHash\": \"20DbCaa3e4BDfAFbF61AC3Aef9d3C3D8eB0F4D57FCAc91D9a3bb68eFb7379B04\",\n      \"revisionNumber\": \"<integer>\"\n    },\n    {\n      \"parentID\": \"fcid:0AfA07b71fd0a2A7CAe7ce4Be7Bf7Ae21E10B4fCbcF35CabfB4A4beA96d7afB9\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"FbCaDF298236Ef6D8aDA10cCCEAfFFdac07182F0dbad6bDAB87F4C6274bDA77A\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"0e4a2Ece7EA1DaFbB89Dc5b9de2c9FadEf7bC93eaFDC3796adC713F2e42902DA\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      },\n      \"filesize\": \"<integer>\",\n      \"fileMerkleRoot\": \"a7cFd39e6DC4ecE48fAbb24b0D67bE856802feE1701a8b7d1bb8cC9bcdD48e6e\",\n      \"windowStart\": \"<integer>\",\n      \"windowEnd\": \"<integer>\",\n      \"validProofOutputs\": [\n        {\n          \"value\": \"299836\",\n          \"address\": \"A8b79f9bd37b07D6cEecA4fC3322aD11f9B88265B43d3BB046e1f0C0773bc1a9\"\n        },\n        {\n          \"value\": \"1189381059\",\n          \"address\": \"E06765F9F1aC5133c2b53eaD76dea9cDEE6a7DD2DfAe201FfF643aB6FF4C1FCF\"\n        }\n      ],\n      \"missedProofOutputs\": [\n        {\n          \"value\": \"29\",\n          \"address\": \"a4c57f3Cc5Fb57526B191B97A9984f5432bDFe14e59F7767bBd7FF4fEa0ce7fd\"\n        },\n        {\n          \"value\": \"88\",\n          \"address\": \"975ABE235cBCCbc150ae753500bab3EA7E2f6365D9dbCdFFa0B17DfBd9eFae1a\"\n        }\n      ],\n      \"unlockHash\": \"5F118dd7c62D68899DEFAEA3e4BaE118ba59ef0a1438e8987fE3D07d09fe8D2f\",\n      \"revisionNumber\": \"<integer>\"\n    }\n  ],\n  \"storageProofs\": [\n    {\n      \"parentID\": \"fcid:16Ffe6Bd49059C8c6DbA01aE49DECB126c3ee02fE03fC8eBE7E313eDC5BCE4e1\",\n      \"leaf\": \"<string>\",\n      \"proof\": [\n        \"2B9d8F8E936EB17B6E027A9E5E7DF60Ee0Ebb81eFE424299EC16bf0A21cC1172\",\n        \"E25eCBeCf96Cf78dB3b8E7172d02F15bFF88fa10C2f2f38bbd50edB47cBabD53\"\n      ]\n    },\n    {\n      \"parentID\": \"fcid:bdDBeefFfcE5E3Da171EBbd8e4D8Bbb0DBec6EeACcc039CCe72F0acd1dF8ce3D\",\n      \"leaf\": \"<string>\",\n      \"proof\": [\n        \"Daba0C9D73c2832D117e859B7E0cFFceFBafD287Bc7db7ba6456C6fb01D8fDeC\",\n        \"C9EBB80Ae3F5F7B8A13AbBa5c8fac44c7aaBf85ad7DB0fBC22C9E41328D5DDeC\"\n      ]\n    }\n  ],\n  \"siafundInputs\": [\n    {\n      \"parentID\": \"fB2f74bb29cA8236B401865fd5db08d834ca5cd4ddAD030987aa2D6dC64Ccb67\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"1078fBde2eA68aEbe54dD6fdE44bD9b21D4E79aca8cCc5f4F8D6aD0a870eFa84\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"Faa8FC7F87A8aDF60bfE07639Bd48f4E2Fce789fab53C34cfC6C0Dca21A8deEC\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      },\n      \"claimAddress\": \"F05cCf51FcB381Cfa0ce1923502FDdE543d0A4Fb11F46afB48BC09f8Bc604A59\"\n    },\n    {\n      \"parentID\": \"8BF8cA5Ba2ea5F9751e290A4C0E5c6Bcd9eFFFa4E7Da3a8f609b11ffaFEB12a0\",\n      \"unlockConditions\": {\n        \"timelock\": \"<integer>\",\n        \"publicKeys\": [\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"141B5DfC0Bae48dD934824F65153fA738dcFDcA2684aEa3ade1CeCe2c8Dcfea0\"\n          },\n          {\n            \"algorithm\": \"<string>\",\n            \"key\": \"cb4b1Cd8Fe5708f4502b618BDba98DFbEdBe0134ee0d98f686fFF07C7Ee3cC6D\"\n          }\n        ],\n        \"signaturesRequired\": \"<integer>\"\n      },\n      \"claimAddress\": \"cE1f33D0e830c6C7EF2C7C88a4EA3a725D2F76EDEB0ff40f574c50f3ec10A53c\"\n    }\n  ],\n  \"siafundOutputs\": [\n    {\n      \"value\": \"<integer>\",\n      \"address\": \"50Ad11932cF890b828fEdD6991C1Af23818E1EF02FAF8c209bFb3580abfAeEc0\"\n    },\n    {\n      \"value\": \"<integer>\",\n      \"address\": \"75fc30BD6A2A79B7AEd866082CE2A5B90586ADbC1b7DDFaB20DAC25CA6C0acf1\"\n    }\n  ],\n  \"minerFees\": [\n    \"46489518\",\n    \"18539\"\n  ],\n  \"arbitraryData\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"signatures\": [\n    {\n      \"parentID\": \"A91C61ebc0c947eB01703d4CbE49759E6e0FCF2b7bC16bD1a0c0ee1a6B531319\",\n      \"publicKeyIndex\": \"<integer>\",\n      \"timelock\": \"<integer>\",\n      \"coveredFields\": {\n        \"wholeTransaction\": \"<boolean>\",\n        \"siacoinInputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siacoinOutputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"fileContracts\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"fileContractRevisions\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"storageProofs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siafundInputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siafundOutputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"minerFees\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"arbitraryData\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"signatures\": [\n          \"<integer>\",\n          \"<integer>\"\n        ]\n      },\n      \"signature\": \"A25A73c8Deb14dD37a4bf25D975DEBA54DBb112eba08E6f8AB469da84A3E5eED\"\n    },\n    {\n      \"parentID\": \"fb635faba5B4F6DfFa1aB7Ea10BFf74222FDBE1a23caA1C8b8b723a86629fCeF\",\n      \"publicKeyIndex\": \"<integer>\",\n      \"timelock\": \"<integer>\",\n      \"coveredFields\": {\n        \"wholeTransaction\": \"<boolean>\",\n        \"siacoinInputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siacoinOutputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"fileContracts\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"fileContractRevisions\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"storageProofs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siafundInputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"siafundOutputs\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"minerFees\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"arbitraryData\": [\n          \"<integer>\",\n          \"<integer>\"\n        ],\n        \"signatures\": [\n          \"<integer>\",\n          \"<integer>\"\n        ]\n      },\n      \"signature\": \"E07f4D64d8Ec3B438b13dca8e731D2bdE52edAaF0Df9A2AfFe2738D61D21348E\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/txpool/broadcast",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"txpool",
														"broadcast"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "upload",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "sector",
									"item": [
										{
											"name": "Add sectors to upload",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  \"68dC10fdA98d140dcfF0Ab52B85D1D1f3E750bC8DB3016e3cE6b96808a1B6e4f\",\n  \"0BFb9a0Cb77A9d886BdCc2fBbFB50c1200af0ab76cD4013b2aE3CCe3465ec5d1\"\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/upload/:id/sector",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"upload",
														":id",
														"sector"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Adds sector roots to a tracked upload."
											},
											"response": [
												{
													"name": "Successfully added sectors",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  \"68dC10fdA98d140dcfF0Ab52B85D1D1f3E750bC8DB3016e3cE6b96808a1B6e4f\",\n  \"0BFb9a0Cb77A9d886BdCc2fBbFB50c1200af0ab76cD4013b2aE3CCe3465ec5d1\"\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/upload/:id/sector",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"upload",
																":id",
																"sector"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal server error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  \"68dC10fdA98d140dcfF0Ab52B85D1D1f3E750bC8DB3016e3cE6b96808a1B6e4f\",\n  \"0BFb9a0Cb77A9d886BdCc2fBbFB50c1200af0ab76cD4013b2aE3CCe3465ec5d1\"\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/bus/upload/:id/sector",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"bus",
																"upload",
																":id",
																"sector"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Track upload",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bus/upload/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"upload",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Starts tracking an upload with the given ID."
									},
									"response": [
										{
											"name": "Successfully started tracking upload",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/upload/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"upload",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/upload/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"upload",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Finish upload",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bus/upload/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"upload",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Marks an upload as finished and stops tracking it."
									},
									"response": [
										{
											"name": "Successfully finished upload",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/upload/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"upload",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/upload/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"upload",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "wallet",
					"item": [
						{
							"name": "events",
							"item": [
								{
									"name": "Get wallet events",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/wallet/events?limit=-1&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"wallet",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "-1",
													"description": "The maximum number of events to return"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The number of events to skip"
												}
											]
										},
										"description": "Returns all events related to the wallet."
									},
									"response": [
										{
											"name": "Successfully retrieved wallet events",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/wallet/events?limit=-1&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"wallet",
														"events"
													],
													"query": [
														{
															"key": "limit",
															"value": "-1",
															"description": "The maximum number of events to return"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The number of events to skip"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"aeAdf8E352eFAdba56DfFA2ef96617E5A03b1fFe822DFd583784Bd78B0942Ee3\",\n    \"index\": {\n      \"height\": \"<integer>\",\n      \"id\": \"63FC42aCFDafeeb30f9E34Dc2a485f3Ed2aE3aDf67Dc994eA046355EC7cAAf6D\"\n    },\n    \"confirmations\": \"<integer>\",\n    \"type\": \"v1ContractResolution\",\n    \"data\": {},\n    \"maturityHeight\": \"<integer>\",\n    \"timestamp\": \"<dateTime>\",\n    \"relevant\": [\n      \"cC6d9A5CD60F3ede4eacB7C7d16306fb6C3dceAd5484f6EE4E6c47bA9fB3be1a\",\n      \"1B9Adcb2EB429b64F3EaEB5cA00d8e1545bf1B7E426A9222b6dB2E5879daF692\"\n    ]\n  },\n  {\n    \"id\": \"fce1d1Ee7AcA978dabFdDfb6B6F9f1E25dcDb5AC8BA92E4e9e0a4BC9eE2A26f9\",\n    \"index\": {\n      \"height\": \"<integer>\",\n      \"id\": \"f40DEbd2CaA51fcedDDFc4cF653CFDB88927FBac3dbe5A220442C0d4B1a7af1f\"\n    },\n    \"confirmations\": \"<integer>\",\n    \"type\": \"foundation\",\n    \"data\": {},\n    \"maturityHeight\": \"<integer>\",\n    \"timestamp\": \"<dateTime>\",\n    \"relevant\": [\n      \"0e3c9193A8cB87DAD10757Fa5492DCEDB2b9881D5793dFC29533b5EAFabF0ee1\",\n      \"B6d51F407d36797401eC8C6E7BEcB57f3e1cC6E7E0D2Ad14df1E9c9cdC5d1C58\"\n    ]\n  }\n]"
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/wallet/events?limit=-1&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"wallet",
														"events"
													],
													"query": [
														{
															"key": "limit",
															"value": "-1",
															"description": "The maximum number of events to return"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The number of events to skip"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/wallet/events?limit=-1&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"wallet",
														"events"
													],
													"query": [
														{
															"key": "limit",
															"value": "-1",
															"description": "The maximum number of events to return"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The number of events to skip"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "pending",
							"item": [
								{
									"name": "Get unconfirmed events",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/wallet/pending",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"wallet",
												"pending"
											]
										},
										"description": "Returns all unconfirmed events in the wallet."
									},
									"response": [
										{
											"name": "Successfully retrieved pending events",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/bus/wallet/pending",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"wallet",
														"pending"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"aeAdf8E352eFAdba56DfFA2ef96617E5A03b1fFe822DFd583784Bd78B0942Ee3\",\n    \"index\": {\n      \"height\": \"<integer>\",\n      \"id\": \"63FC42aCFDafeeb30f9E34Dc2a485f3Ed2aE3aDf67Dc994eA046355EC7cAAf6D\"\n    },\n    \"confirmations\": \"<integer>\",\n    \"type\": \"v1ContractResolution\",\n    \"data\": {},\n    \"maturityHeight\": \"<integer>\",\n    \"timestamp\": \"<dateTime>\",\n    \"relevant\": [\n      \"cC6d9A5CD60F3ede4eacB7C7d16306fb6C3dceAd5484f6EE4E6c47bA9fB3be1a\",\n      \"1B9Adcb2EB429b64F3EaEB5cA00d8e1545bf1B7E426A9222b6dB2E5879daF692\"\n    ]\n  },\n  {\n    \"id\": \"fce1d1Ee7AcA978dabFdDfb6B6F9f1E25dcDb5AC8BA92E4e9e0a4BC9eE2A26f9\",\n    \"index\": {\n      \"height\": \"<integer>\",\n      \"id\": \"f40DEbd2CaA51fcedDDFc4cF653CFDB88927FBac3dbe5A220442C0d4B1a7af1f\"\n    },\n    \"confirmations\": \"<integer>\",\n    \"type\": \"foundation\",\n    \"data\": {},\n    \"maturityHeight\": \"<integer>\",\n    \"timestamp\": \"<dateTime>\",\n    \"relevant\": [\n      \"0e3c9193A8cB87DAD10757Fa5492DCEDB2b9881D5793dFC29533b5EAFabF0ee1\",\n      \"B6d51F407d36797401eC8C6E7BEcB57f3e1cC6E7E0D2Ad14df1E9c9cdC5d1C58\"\n    ]\n  }\n]"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/bus/wallet/pending",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"wallet",
														"pending"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "redistribute",
							"item": [
								{
									"name": "Redistribute wallet funds",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"outputs\": \"<integer>\",\n  \"amount\": \"31148860911\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/wallet/redistribute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"wallet",
												"redistribute"
											]
										},
										"description": "Redistributes the wallet's funds into desired number of outputs of requested value."
									},
									"response": [
										{
											"name": "Successfully redistributed wallet funds",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"outputs\": \"<integer>\",\n  \"amount\": \"31148860911\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/wallet/redistribute",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"wallet",
														"redistribute"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  \"68dC10fdA98d140dcfF0Ab52B85D1D1f3E750bC8DB3016e3cE6b96808a1B6e4f\",\n  \"0BFb9a0Cb77A9d886BdCc2fBbFB50c1200af0ab76cD4013b2aE3CCe3465ec5d1\"\n]"
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"outputs\": \"<integer>\",\n  \"amount\": \"31148860911\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/wallet/redistribute",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"wallet",
														"redistribute"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"outputs\": \"<integer>\",\n  \"amount\": \"31148860911\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/wallet/redistribute",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"wallet",
														"redistribute"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "send",
							"item": [
								{
									"name": "Send siacoins",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"address\": \"d9c3d472eE6F1260aEb7E2febf4B270B3fBACE6D5CaFA8F0847cCa804c8E71A1\",\n  \"amount\": \"82\",\n  \"subtractMinerFee\": \"<boolean>\",\n  \"useUnconfirmed\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/wallet/send",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"wallet",
												"send"
											]
										},
										"description": "Sends the specified amount of siacoins to the specified address."
									},
									"response": [
										{
											"name": "Successfully sent siacoins",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"address\": \"d9c3d472eE6F1260aEb7E2febf4B270B3fBACE6D5CaFA8F0847cCa804c8E71A1\",\n  \"amount\": \"82\",\n  \"subtractMinerFee\": \"<boolean>\",\n  \"useUnconfirmed\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/wallet/send",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"wallet",
														"send"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "611E1D92E2707EDeC0F1D9dFB974ADeF156C1DA0d419E7DFa00512Bcd942eEab"
										},
										{
											"name": "Malformed request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"address\": \"d9c3d472eE6F1260aEb7E2febf4B270B3fBACE6D5CaFA8F0847cCa804c8E71A1\",\n  \"amount\": \"82\",\n  \"subtractMinerFee\": \"<boolean>\",\n  \"useUnconfirmed\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/wallet/send",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"wallet",
														"send"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"address\": \"d9c3d472eE6F1260aEb7E2febf4B270B3fBACE6D5CaFA8F0847cCa804c8E71A1\",\n  \"amount\": \"82\",\n  \"subtractMinerFee\": \"<boolean>\",\n  \"useUnconfirmed\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/wallet/send",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"wallet",
														"send"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get wallet information",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bus/wallet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bus",
										"wallet"
									]
								},
								"description": "Returns information about the wallet."
							},
							"response": [
								{
									"name": "Successfully retrieved wallet",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/wallet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"wallet"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"spendable\": \"9896000518\",\n  \"confirmed\": \"61\",\n  \"unconfirmed\": \"1\",\n  \"immature\": \"281010\",\n  \"address\": \"F0bf6A6B8380Fb5a7fBE99e5eBA1732eb4caA35DbFEDD2C4A6337b3BFAD689Dd\",\n  \"scanHeight\": \"<integer>\"\n}"
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/bus/wallet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"wallet"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "webhooks",
					"item": [
						{
							"name": "action",
							"item": [
								{
									"name": "Broadcast webhook action",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"module\": \"alerts\",\n  \"event\": \"register\",\n  \"data\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/webhooks/action",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"webhooks",
												"action"
											]
										},
										"description": "Broadcasts a webhook event to registered webhooks."
									},
									"response": [
										{
											"name": "Successfully broadcast action",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"module\": \"alerts\",\n  \"event\": \"register\",\n  \"data\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/webhooks/action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"webhooks",
														"action"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"module\": \"alerts\",\n  \"event\": \"register\",\n  \"data\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/webhooks/action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"webhooks",
														"action"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get webhooks",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bus/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bus",
										"webhooks"
									]
								},
								"description": "Returns all registered webhooks and their queue information."
							},
							"response": [
								{
									"name": "Successfully retrieved webhooks",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bus/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"webhooks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"queues\": [\n    {\n      \"url\": \"<string>\",\n      \"numPending\": \"<integer>\",\n      \"lastSuccess\": \"<dateTime>\",\n      \"lastError\": \"<dateTime>\",\n      \"lastErrorMessage\": \"<string>\"\n    },\n    {\n      \"url\": \"<string>\",\n      \"numPending\": \"<integer>\",\n      \"lastSuccess\": \"<dateTime>\",\n      \"lastError\": \"<dateTime>\",\n      \"lastErrorMessage\": \"<string>\"\n    }\n  ],\n  \"webhooks\": [\n    {\n      \"module\": \"alerts\",\n      \"event\": \"register\",\n      \"url\": \"<string>\",\n      \"headers\": {\n        \"mollit5_\": \"<string>\",\n        \"dolor3b\": \"<string>\",\n        \"ullamco_7\": \"<string>\"\n      }\n    },\n    {\n      \"module\": \"alerts\",\n      \"event\": \"register\",\n      \"url\": \"<string>\",\n      \"headers\": {\n        \"exercitationd\": \"<string>\",\n        \"occaecat02\": \"<string>\"\n      }\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Register webhook",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"module\": \"alerts\",\n  \"event\": \"dismiss\",\n  \"url\": \"<string>\",\n  \"headers\": {\n    \"ut10\": \"<string>\",\n    \"incididuntd\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/bus/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bus",
										"webhooks"
									]
								},
								"description": "Registers a new webhook."
							},
							"response": [
								{
									"name": "Successfully registered webhook",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"module\": \"alerts\",\n  \"event\": \"dismiss\",\n  \"url\": \"<string>\",\n  \"headers\": {\n    \"ut10\": \"<string>\",\n    \"incididuntd\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"webhooks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"module\": \"alerts\",\n  \"event\": \"dismiss\",\n  \"url\": \"<string>\",\n  \"headers\": {\n    \"ut10\": \"<string>\",\n    \"incididuntd\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"webhooks"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "webhook",
					"item": [
						{
							"name": "delete",
							"item": [
								{
									"name": "Delete webhook",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"module\": \"alerts\",\n  \"event\": \"dismiss\",\n  \"url\": \"<string>\",\n  \"headers\": {\n    \"ut10\": \"<string>\",\n    \"incididuntd\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/bus/webhook/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bus",
												"webhook",
												"delete"
											]
										},
										"description": "Deletes a registered webhook."
									},
									"response": [
										{
											"name": "Successfully deleted webhook",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"module\": \"alerts\",\n  \"event\": \"dismiss\",\n  \"url\": \"<string>\",\n  \"headers\": {\n    \"ut10\": \"<string>\",\n    \"incididuntd\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/webhook/delete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"webhook",
														"delete"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Webhook not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"module\": \"alerts\",\n  \"event\": \"dismiss\",\n  \"url\": \"<string>\",\n  \"headers\": {\n    \"ut10\": \"<string>\",\n    \"incididuntd\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/webhook/delete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"webhook",
														"delete"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"module\": \"alerts\",\n  \"event\": \"dismiss\",\n  \"url\": \"<string>\",\n  \"headers\": {\n    \"ut10\": \"<string>\",\n    \"incididuntd\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/bus/webhook/delete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"bus",
														"webhook",
														"delete"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "",
				"type": "string"
			},
			{
				"key": "password",
				"value": "{{RENTERD_API_PASSWORD}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:9980/api",
			"type": "string"
		}
	]
}